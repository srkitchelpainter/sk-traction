<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.ContentSearch</name>
    </assembly>
    <members>
        <member name="T:Sitecore.ContentSearch.AbstractDocumentBuilder`1">
            <summary>
            The abstract document builder.
            </summary>
            <typeparam name="T">
            Document type
            </typeparam>
            <remarks>Derived type for the <see cref="T:Sitecore.ContentSearch.AbstractDocumentBuilder`1"/> must skip read restriction of the item.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.#ctor(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IProviderUpdateContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.AbstractDocumentBuilder`1" /> class.
            </summary>
            <param name="indexable">The indexable.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractDocumentBuilder`1.Options">
            <summary>Gets the options.</summary>
            <value>The options.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractDocumentBuilder`1.Indexable">
            <summary>Gets the indexable.</summary>
            <value>The indexable.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractDocumentBuilder`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractDocumentBuilder`1.Index">
            <summary>
            Gets the index.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractDocumentBuilder`1.IsTemplate">
            <summary>
            Gets a value indicating whether is template.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractDocumentBuilder`1.IsMedia">
            <summary>
            Gets a value indicating whether is media.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractDocumentBuilder`1.IsParallel">
            <summary>
            Gets a value indicating whether this instance is running in parallel index mode.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractDocumentBuilder`1.IsParallelComputedFieldsProcessing">
            <summary>
            Gets a value indicating whether computed fields are processed in one thread or in parallel threads.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractDocumentBuilder`1.ParallelOptions">
            <summary>
            Gets a value indicating whether this instance is running in parallel index mode.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractDocumentBuilder`1.Settings">
            <summary>Gets or sets the settings.</summary>
            <value>The settings.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractDocumentBuilder`1.ParallelForeachProxy">
            <summary>
            Gets the parallel foreach proxy.
            </summary>
            <value>
            The parallel foreach proxy.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.BuildDocument">
            <summary>
            Initiate building of an index document 
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.AddItemFields">
            <summary>
            The add item fields.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.GetFieldsByItemList(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Get all fields of the indexable.
            </summary>
            <param name="indexable"></param>
            <returns>Fields.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.GetFieldsByIncludedList(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Get fields of the indexable according to the included fields list.
            </summary>
            <param name="indexable"></param>
            <returns>Fields.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.GetFieldByKeyFromIndexable(Sitecore.ContentSearch.IIndexable,System.String)">
            <summary>
            Retrives a field from the indexable by the key.
            </summary>
            <param name="indexable">The indexable</param>
            <param name="fieldKey">The field key.</param>
            <returns>Field</returns>
            <remarks>Supported keys: Sitecore ID and string name.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.ProcessFieldsInParallel(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IIndexableDataField})">
            <summary>
            Adds the items fields in parallel.
            </summary>
            <param name="fields">Fields to add.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.ProcessFieldsInSequence(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IIndexableDataField})">
            <summary>
            Adds the items fields in sequence using a single thread.
            </summary>
            <param name="fields">Fields to add.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.CheckAndAddField(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IIndexableDataField)">
            <summary>The check and add field.</summary>
            <param name="indexable">The indexable.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.AddSpecialField(System.String,System.Object,System.Boolean)">
            <summary>
            The add special field.
            </summary>
            <param name="fieldName">
            The field name.
            </param>
            <param name="fieldValue">
            The field value.
            </param>
            <param name="append">
            The append.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.AddSpecialFields">
            <summary>The add special fields.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.AddField(System.String,System.Object,System.Boolean)">
            <summary>The add field.</summary>
            <param name="fieldName">The field name.</param>
            <param name="fieldValue">The field value.</param>
            <param name="append">The append.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.AddField(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>The add field.</summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.AddBoost">
            <summary>
            The add boost.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.AddComputedIndexFields">
            <summary>
            Adds the computed index fields.
            </summary>
            <exception cref="T:System.AggregateException"></exception>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.AddComputedIndexFieldsInSequence">
            <summary>
            Adds the computed index fields in single thread.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.AddComputedIndexFieldsInParallel">
            <summary>
            Adds the computed index fields in parallel threads.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.IsTextField(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Return if the field contains text content.  
            </summary>
            <param name="field">The checked field</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractDocumentBuilder`1.AddComputedIndexField(Sitecore.ContentSearch.ComputedFields.IComputedIndexField,System.Object)">
            <summary>
            Adds value of computed field to an index document
            </summary>
            <param name="computedIndexField">Computed field</param>
            <param name="fieldValue">Value produced by the computed field</param>
        </member>
        <member name="T:Sitecore.ContentSearch.AbstractFieldNameTranslator">
            <summary>
            The abstract field name translator.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractFieldNameTranslator.MapFieldsToType(System.Collections.Generic.IEnumerable{System.String},System.Type,Sitecore.ContentSearch.MappingTargetType)">
            <summary>Maps the type of the document fields to.</summary>
            <param name="type">The type.</param>
            <param name="target">The mapping target.</param>
            <param name="fieldNames">The field names.</param>
            <returns>Document field to property map.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractFieldNameTranslator.GetTypeFieldNames(System.String)">
            <summary>Gets the names of the type field.</summary>
            <param name="fieldName">Name of the field.</param>
            <returns>Type field name.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractFieldNameTranslator.GetIndexFieldNameFormatterAttribute(System.Reflection.MemberInfo)">
            <summary>Gets the index field name formatter attribute.</summary>
            <param name="member">The member.</param>
            <returns>The member attribute.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Abstractions.AbstractSearchContext">
            <inheritdoc />
            <summary>
            Defines the abstract search context class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.AbstractSearchContext.#ctor(Sitecore.ContentSearch.ISearchIndex,Sitecore.ContentSearch.Abstractions.Factories.ILinqToIndexFactory,Sitecore.ContentSearch.Security.SearchSecurityOptions)">
            <summary>
            The constructor.
            </summary>
            <param name="index">Search index.</param>
            <param name="linqToIndexFactory">Factory that produces the <see cref="T:Sitecore.ContentSearch.Linq.Indexing.ILinqToIndex`1"/> items.</param>
            <param name="securityOptions">Search security options.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Abstractions.AbstractSearchContext.Index">
            <summary>Gets the index.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Abstractions.AbstractSearchContext.ConvertQueryDatesToUtc">
            <summary>
            Gets or sets a value indicating whether dates during the querying will be always convert to dates with UTC kind.
            </summary>
            <value>
            <c>true</c> if convert dates to date with UTC kind; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Abstractions.AbstractSearchContext.SecurityOptions">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.ContentSearch.Abstractions.AbstractSearchContext.LinqToIndexFactory">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.AbstractSearchContext.GetTermsByFieldName(System.String,System.String)">
            <summary>
            Gets the name of the terms by field.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.AbstractSearchContext.GetQueryable``1">
            <summary>Gets the queryable.</summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <returns>The <see cref="T:System.Linq.IQueryable`1" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.AbstractSearchContext.GetQueryable``1(Sitecore.ContentSearch.Linq.Common.IExecutionContext)">
            <summary>Gets the queryable.</summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="executionContext">The execution context.</param>
            <returns>The <see cref="T:System.Linq.IQueryable`1" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.AbstractSearchContext.GetQueryable``1(Sitecore.ContentSearch.Linq.Common.IExecutionContext[])">
            <summary>Gets the queryable.</summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="executionContexts">The execution contexts.</param>
            <returns>
            The <see cref="T:System.Linq.IQueryable" />.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.AbstractSearchContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.AbstractSearchContext.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.CachedLocatorInstance`1.#ctor(Sitecore.ContentSearch.Abstractions.IObjectLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Abstractions.CachedLocatorInstance`1"/> class.
            </summary>
            <param name="locator">The locator.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.CachedLocatorInstance`1.#ctor(Sitecore.ContentSearch.Abstractions.IObjectLocator,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Abstractions.CachedLocatorInstance`1"/> class.
            </summary>
            <param name="locator">The locator.</param>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.CachedLocatorInstance`1.#ctor(Sitecore.ContentSearch.Abstractions.IObjectLocator,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Abstractions.CachedLocatorInstance`1"/> class.
            </summary>
            <param name="locator">The locator.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.CachedLocatorInstance`1.#ctor(Sitecore.ContentSearch.Abstractions.IObjectLocator,System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Abstractions.CachedLocatorInstance`1"/> class.
            </summary>
            <param name="locator">The locator.</param>
            <param name="key">The key.</param>
            <param name="instance">The instance.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Abstractions.CachedLocatorInstance`1.Instance">
            <summary>Gets the instance.</summary>
            <value>The instance.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.CachedLocatorInstance`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.CachedLocatorInstance`1.UpdateValueCallback(System.String,System.Object)">
            <summary>Updates the value callback.</summary>
            <param name="key">The key.</param>
            <param name="instance">The instance.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Abstractions.Factories.AbstractContextFactory`1">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.Factories.AbstractContextFactory`1.CreateDeleteContext(Sitecore.ContentSearch.ISearchIndex)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.Factories.AbstractContextFactory`1.CreateUpdateContext(Sitecore.ContentSearch.ISearchIndex)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.Factories.AbstractContextFactory`1.CreateSearchContext(Sitecore.ContentSearch.ISearchIndex,Sitecore.ContentSearch.Security.SearchSecurityOptions)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.Factories.AbstractContextFactory`1.GetSearchContext(`0,Sitecore.ContentSearch.Security.SearchSecurityOptions)">
            <summary>
            Factory method to create a <see cref="T:Sitecore.ContentSearch.IProviderSearchContext"/>
            </summary>
            <param name="searchIndex">The search index.</param>
            <param name="options">The search security options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.Factories.AbstractContextFactory`1.GetDeleteContext(`0)">
            <summary>
            Factory method to create a <see cref="T:Sitecore.ContentSearch.IProviderDeleteContext"/>
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.Factories.AbstractContextFactory`1.GetUpdateContext(`0)">
            <summary>
            Factory method to create a <see cref="T:Sitecore.ContentSearch.IProviderUpdateContext"/>
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Abstractions.Factories.AbstractLinqToIndexFactory">
            <summary>
            Factory that based on configuration to create LinqToIndex Obj
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.Factories.AbstractLinqToIndexFactory.CreateLinqToIndex``1(Sitecore.ContentSearch.IProviderSearchContext,Sitecore.ContentSearch.Linq.Common.IExecutionContext[])">
            <summary>
            create Linq To Index
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="context">Search Context</param>
            <param name="executionContexts">ExecutionContexts</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.Factories.AbstractLinqToIndexFactory.Create``1(Sitecore.ContentSearch.IProviderSearchContext,Sitecore.ContentSearch.Linq.Common.IExecutionContext[])">
            <summary>
            Create the Linq to Index
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="context">Search Context</param>
            <param name="executionContexts">ExecutionContexts</param>
            <returns>Linq to Index</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Abstractions.Factories.ILinqToIndexFactory">
            <summary>
            Linq to Index Factory that create LinqToIndex 
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.Factories.ILinqToIndexFactory.CreateLinqToIndex``1(Sitecore.ContentSearch.IProviderSearchContext,Sitecore.ContentSearch.Linq.Common.IExecutionContext[])">
            <summary>
            Create Linq to Index obj
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="context">Search Context</param>
            <param name="executionContexts">Execution Contexts</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Abstractions.Factories.IProviderContextFactory">
            <summary>
            Implements a factory that produces contexts.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.Factories.IProviderContextFactory.CreateDeleteContext(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Create the <see cref="T:Sitecore.ContentSearch.IProviderDeleteContext"/>
            </summary>
            <returns>The delete context.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.Factories.IProviderContextFactory.CreateUpdateContext(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Create the <see cref="T:Sitecore.ContentSearch.IProviderUpdateContext"/>
            </summary>
            <returns>The update context.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.Factories.IProviderContextFactory.CreateSearchContext(Sitecore.ContentSearch.ISearchIndex,Sitecore.ContentSearch.Security.SearchSecurityOptions)">
            <summary>
            Create the <see cref="T:Sitecore.ContentSearch.IProviderSearchContext"/>
            </summary>
            <param name="searchIndex">The search index</param>
            <param name="options">Search security options</param>
            <returns>The search context.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Abstractions.IObjectLocator">
            <summary>
            The ObjectLocator interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.IObjectLocator.GetInstance(System.Type)">
            <summary>
            Gets the instance resolved for of the specified type.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <returns>The instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.IObjectLocator.GetInstance(System.Type,System.String)">
            <summary>
            Gets the instance resolved for of the specified type and key.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <param name="key">The key.</param>
            <returns>The instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.IObjectLocator.GetAllInstances(System.Type)">
            <summary>
            Gets the instance resolved for of the specified type.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <returns>Instances.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.IObjectLocator.GetInstance``1">
            <summary>
            Gets the instance of the specified type.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <returns>The instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.IObjectLocator.GetInstance``1(System.String)">
            <summary>
            Gets the instance of the specified type and key.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="key">The key.</param>
            <returns>The instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.IObjectLocator.GetAllInstances``1">
            <summary>
            Gets all instances of the specified type.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <returns>Instances.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.IObjectLocator.Register``1(System.Converter{Sitecore.ContentSearch.Abstractions.IObjectLocator,``0})">
            <summary>
            Registers the specified factory.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.IObjectLocator.Register``1(System.String,System.Converter{Sitecore.ContentSearch.Abstractions.IObjectLocator,``0})">
            <summary>
            Registers the specified factory for the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.IObjectLocator.Register(System.String,System.Type,System.Converter{Sitecore.ContentSearch.Abstractions.IObjectLocator,System.Object})">
            <summary>
            Registers the specified factory for the specified key and type.
            </summary>
            <param name="key">The key.</param>
            <param name="serviceType">Type of the service.</param>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.IObjectLocator.IsEmpty">
            <summary>
            Determines whether locator is empty.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.IObjectLocator.Clear">
            <summary>
            Clears locator object.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Abstractions.ISettings">
            <summary>
            The interface to proxy Settings API.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.AliasesActive">
            <summary>
            Gets a value indicating whether aliases are active.
            </summary>
            <value>
            True, if aliases are active, otherwise false. Default value: true.
            </value>
            <remarks>
              <para>When Sitecore renders a page, it first tries to determine the 
            current item from the path on the query string. If the path does not
            match an item, it search the alias list for matching pages. An alias 
            is a simple pointer to an item in Sitecore. If a match is found, that 
            page is rendered.</para>
              <para>Aliases are configured in /sitecore/system/aliases.</para>
              <para>Aliases cause a small performance loss as the alias list
            has to be searched, if the page was not found.</para>
              <para>This setting controls if the alias list search or not.</para>
              <para>The name of the web.config setting is "AliasesActive".</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.AllowLogoutOfAllUsers">
            <summary>
            Gets a value indicating whether the logout screen presents all users or
            just users with the same name.
            </summary>
            <value>
            True, if all users are shown, otherwise false. Default value: false.
            </value>
            <remarks>
              <para>&gt;When a user logs in, Sitecore checks if the maximum number of
            users has been reached (as specified in the license). If so, the
            logout user web page is shown allowing the user to logout a
            existing session.</para>
              <para>This flags is the user is allowed to logout only sessions with
            the same name as the user, or all other sessions. For instance if
            the flag is false, the user "Andy" may only logout other sessions
            created by the user "Andy". If the flag is true, "Andy" can also logout
            sessions created by "Bob".</para>
              <para>The name of the web.config setting is "AllowLogoutOfAllUsers".</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.AppendQSToUrlRendering">
            <summary>
            Gets a value indicating whether main query strings are appended to URL renderings?
            </summary>
            <value>Default value: true.</value>
            <remarks>
            If true, query strings of the main page will be
            passed on the all URL renderings on the page.
            </remarks>
            <example>
            If a layout contains a URL rendering with the URL
            <c>http://www.google.com/search.</c>, and the layout is
            triggered by the URL <c>http://localhost/home.aspx?q=sitecore.</c>,
            the URL rendering will request the URL <c>http://www.google.com/search?q=sitecore.</c>
            </example>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.AutomaticDataBind">
            <summary>
            Gets a value indicating whether the DataBind function is called by the
            web engine.
            </summary>
            <value>
            True, if <see cref="M:System.Web.UI.Control.DataBind"/>
            is called, otherwise false. Default value: false.
            </value>
            <remarks>
            This settings holds the default value for the
            <see cref="P:Sitecore.Configuration.StateContext.DataBind"/> State variable.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.AutomaticLockOnSave">
            <summary>
            Gets a value indicating whether the item is automatically locked on save.
            </summary>
            <value>
             <c>true</c> if the item is automatically locked on save; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.AutomaticUnlockOnSaved">
            <summary>
            Gets a value indicating whether the item is automatically unlocked on saved.
            </summary>
            <value>
             <c>true</c> if  the item is automatically unlocked on saved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.CheckSecurityOnLanguages">
            <summary>
            Gets a value indicating whether security on languages should be checked.
            </summary>
            <value>Default value: false.</value>
            <remarks>
              <para>If true, the security settings on individual languages
            will be checked.</para>
              <para>This allows the administrator to hide languages from
            individual users. For instance, security may be set that
            allows a user to read English and write German.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ClientLanguage">
            <summary>
            Gets the default client language.
            </summary>
            <value>Default value: "en"</value>
            <remarks>
              <para>Determines the language of the user interface in the
            Sitecore client.</para>
              <para>This setting will be ignored if a specific client
            language has been specified for the user (in the user settings).</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.CustomErrorsMode">
            <summary>
            Gets the custom errors mode.
            </summary>
            <value>The custom errors mode.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ConfigurationIsSet">
            <summary>
            Gets a value indicating whether configuration is set.
            </summary>
            <value><c>true</c> if configuration is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DataFolder">
            <summary>
            Gets the path to the data folder.
            </summary>
            <value>Default value: "/data"</value>
            <remarks>
              <para>The data folder is the place where data, index, audit
            and log files are stored.</para>
              <para>The value can be a virtual or physical path.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DebugBorderColor">
            <summary>
            Gets the color of debug borders.
            </summary>
            <value>Default value: "red"</value>
            <remarks>
            This is the CSS color value to use when drawing borders
            around elements on the Sitecore debug page (/sitecore/debug).
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DebugBorderTag">
            <summary>
            Gets the html tag to use for debug borders (usually span or div).
            </summary>
            <value>Default value: "span"</value>
            <remarks>
            This is the html tag to use when drawing borders
            around elements on the Sitecore debug page (/sitecore/debug).
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DebugEnabled">
            <summary>
            Gets a value indicating whether ASP.NET debugging is enabled.
            </summary>
            <value><c>true</c> if debug is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DebugFolder">
            <summary>
            Gets the path to the debug folder.
            </summary>
            <value>Default value: <see cref="P:Sitecore.Configuration.Settings.DataFolder"/></value>
            <remarks>
              <para>The debug folder is the place where debug files are stored.</para>
              <para>The value can be a virtual or physical path.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultBaseTemplate">
            <summary>
            Gets the GUID of the default base templates.
            </summary>
            <value>The default base template.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultDesktop">
            <summary>
            Gets the default desktop.
            </summary>
            <value>Default value: "/sitecore/client/desktops/standard/default.aspx"</value>
            <remarks>
            Gets the path of the aspx page that defines the
            default layout (frameset) of the Sitecore client.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultIcon">
            <summary>
            Gets the path to the default icon for items in the
            Sitecore client.
            </summary>
            <value>Default value: "/sitecore/client/images/document.gif"</value>
            <remarks>
              <para>Gets the path of the default image file to show next
            to items in the tree view of the Sitecore client.</para>
              <para>The image shown can be overridden by filling out the
            Icon field on an item or its template.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultItem">
            <summary>
            Gets the default item for the Sitecore client.
            </summary>
            <value>Default value: "/home"</value>
            <remarks>
            This is the path to the item that will be the selected
            when starting the Sitecore client (unless overridden by user
            settings).
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultLanguage">
            <summary>
            Gets the default language for the web site.
            </summary>
            <value>Default value: "en"</value>
            <remarks>
              <para>This is the default language of all content on the
            web site.</para>
              <para>If multiple sites are specified using the &lt;sites&gt;
            section of web.config, the current URL will be matched against
            the sites specified in that section.</para>
              <para>If a match is found, the language of that site
            definition is used. Otherwise, the value of the 'DefaultLanguage'
            setting is used.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultLayoutFile">
            <summary>
            Gets the path to the layout file to use for items
            that do not specify a layout file themselves.
            </summary>
            <value>Default value: "/default.aspx"</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultPageName">
            <summary>
            Gets the name of the default ASPX page.
            </summary>
            <value>The name of the default page.</value>
            <remarks>Default value: default.aspx</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultPublishingTargets">
            <summary>
            Gets a pipe separated list of publishing group names.
            </summary>
            <value>Default value: "||"</value>
            <remarks>
            Groups in this list will be preselected in the
            Publish and Preview dialogs.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultRegionalIsoCode">
            <summary>
            Gets the default regional ISO code.
            </summary>
            <value>The default regional ISO code.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultShellControl">
            <summary>
            Gets the default shell control.
            </summary>
            <value>Default value: "Cyclops"</value>
            <remarks>
            This specifies the default XML control to use in /sitecore/shell/default.aspx,
            if none is specified.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultSortOrder">
            <summary>
            Gets the default value of the sort order attribute.
            </summary>
            <value>Default value: 0</value>
            <remarks>
            Sort order is used for displaying items in the
            Sitecore client and for API functions that returns sorted
            sets.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultSQLTimeout">
            <summary>
            Gets the default timeout for SQL commands.
            </summary>
            <value>Default value: 5 minutes</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultTheme">
            <summary>
            Gets the default Sitecore client theme.
            </summary>
            <value>Default value: "standard"</value>
            <remarks>
            A theme is a set of colors and fonts used in the
            Sitecore client (i.e. a 'skin').
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultThumbnail">
            <summary>
            Gets the path to the default thumbnail for items in the
            Sitecore client.
            </summary>
            <value>Default value: "/sitecore/client/images/document.gif"</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DisableBrowserCaching">
            <summary>
            Gets a value indicating whether browser caching of pages should be disabled.
            </summary>
            <value>Default value: true.</value>
            <remarks>
            If true, a HTTP header value disabling browser caching
            will be written to all outgoing pages.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.EmailValidation">
            <summary>
            Gets a regular expression used for e-mail validation
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.EnableEventQueues">
            <summary>
            Gets a value indicating whether Sitecore sends local events to the event queue, and whether the 
            local instance handles events in the queue from remote instances.
            </summary>
            <value>
            <c>true</c> if Sitecore writes local events to the event queue and handles events in the queue from remote instances; 
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.EnableSiteConfigFiles">
            <summary>
            Gets a value that indicates whether the SiteResolver pipeline processor checks for the existence of a "site.config"
            file in the physical subdirectory corresponding to the requested URL.
            </summary>
            <value>
            <c>true</c> if the SiteResolver pipeline processor checks for the existence of a "site.config" file; 
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.EnableXslDocumentFunction">
            <summary>
            Gets a value indicating whether XSLT document() support should be enabled.
            </summary>
            <remarks>
              <para>If this is not enabled, it will be an error if the XSLT file contains 'document()' references.</para>
              <para>Document support can be set for individual XSLT files by using the <see cref="P:Sitecore.Web.UI.WebControls.XslFile.EnableDocument"/> property.</para>
              <para>Default value: true.</para>
            </remarks>
            <value><c>true</c> if document() support is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.EnableXslScripts">
            <summary>
            Gets a value indicating whether XSLT script support should be enabled.
            </summary>
            <remarks>
              <para>If script support is not enabled, it will be an error if the XSLT file contains script blocks.</para>
              <para>Script support can be set for individual XSLT files by using the <see cref="P:Sitecore.Web.UI.WebControls.XslFile.EnableScript"/> property.</para>
              <para>Default value: false.</para>
            </remarks>
            <value><c>true</c> if script support is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ErrorPage">
            <summary>
            Gets the page to redirect to, if a generic error occurs.
            </summary>
            <value>Default value: "/sitecore/service/error.aspx"</value>
            <remarks>
            If an error occurs during processing of an incoming
            request, an error message will be shown using the page
            pointed to
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.FastPublishing">
            <summary>
            Gets a value indicating whether use fast publishing.
            </summary>
            <value>
             <c>true</c> if the fast publishing is used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.FastQueryDescendantsDisabled">
            <summary>
            Gets a value indicating whether improve performance of item creation/moving/deletion.
            Setting this to 'true' will make fast query return incorrect results when selecting items using the Ancestors/Descendants axes.
            </summary>
            <value><c>true</c> if axes info are refreshed; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GenerateThumbnails">
            <summary>
            Gets a value indicating whether thumbnails of uploaded image files
            should be generated.
            </summary>
            <value>Default value: true.</value>
            <remarks>
              <para>If true, a thumbnail will be generated each time an
            image file is uploaded.</para>
              <para>The thumbnail will be stored in the <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.MediaFolder"/>.</para>
            </remarks>
            <seealso cref="M:Sitecore.ContentSearch.Abstractions.ISettings.ThumbnailWidth"/>
            <seealso cref="M:Sitecore.ContentSearch.Abstractions.ISettings.ThumbnailHeight"/>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GridPageSize">
            <summary>
            Gets the number of rows in a UI grid.
            </summary>
            <value>The number of rows in a UI grid.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.HashEncryptionProvider">
            <summary>
            Gets the hash encryption provider.
            </summary>
            <value>The hash encryption provider.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.HealthMonitorInterval">
            <summary>
            Gets the health monitor interval.
            </summary>
            <value>The health monitor interval (default: 10 minutes).</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.HeartbeatInterval">
            <summary>
            Gets the interval between heartbeats.
            </summary>
            <value>Default value: 00:00:05 (5 seconds)</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.IgnoreUrlPrefixes">
            <summary>
            Gets a pipe separated list of URL prefixes to ignore
            when mapping friendly URLs.
            </summary>
            <value>Default value: "/sitecore|/layouts/|/images/|/trace.axd"</value>
            <remarks>
              <para>Normally, URL requests coming in are mapped to an
            item and the request is redirected to the items layout page.</para>
              <para>For example, if the item <c>/home/news.</c> has the
            layout <c>/layouts/newslist.aspx.</c>, the URL
            <c>http://localhost/home/news.aspx.</c> will be redirected
            to <c>http://localhost/layouts/newslist.aspx?path=[id of the News item]</c>.</para>
              <para>To prevent this redirection to take place for physical aspx pages,
            their prefixes can be added to <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.IgnoreUrlPrefixes"/>.</para>
              <para>For example, if an aspx page called <c>/forms/registration.aspx.</c>
            existed, the prefix <c>/forms/</c> could be added to web.config to prevent
            requests for this page to be redirected.</para>
              <para>Elements must be lowercase and non-empty.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ImageTypes">
            <summary>
            Gets a pipe separated list of image file
            types (extensions).
            </summary>
            <value>Default value: "|gif|jpg|png|"</value>
            <remarks>
              <para>List of file extension that are to be considered
            images by the Sitecore system.</para>
              <para>Used for determining if thumbnails should be
            generated when uploading files.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.IndexFolder">
            <summary>
            Gets the index folder.
            </summary>
            <value>The index folder.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.InvalidItemNameChars">
            <summary>
            Gets the invalid item name chars.
            </summary>
            <value>The invalid item name chars.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ItemNameValidation">
            <summary>
            Gets the item name validation.
            </summary>
            <value>The item name validation.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ItemNotFoundUrl">
            <summary>
            Gets the URL to redirect to, if an item being linked to is not found.
            </summary>
            <value>Default value: "/sitecore/service/notfound.aspx"</value>
            <remarks>
            If a dynamic link is made for a non-existing item on the
            web site, the request is redirected to the URL pointed to
            by this setting.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.KeepLockAfterSaveForAdminUsers">
            <summary>
            Gets a value indicating whether the item is kept locked after save in Page Editor for Administrator users.
            </summary>
            <value>
             <c>true</c> if  the item is kept locked on saved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.LayoutFolder">
            <summary>
            Gets the path to the layout file root folder.
            </summary>
            <value>Default value: "/layouts"</value>
            <remarks>
              <para>The layout folder is the place where layout files are stored.</para>
              <para>The value can be a virtual or physical path.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.LayoutNotFoundUrl">
            <summary>
            Gets the URL to redirect to, if an items layout is not found.
            </summary>
            <value>Default value: "/sitecore/service/nolayout.aspx"</value>
            <remarks>
            If a request for an item with an empty or a non-existing
            layout comes in, the request is redirected to the URL pointed to
            by this setting.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.LayoutPageEvent">
            <summary>
            Gets the name of page event where the layout pipeline will be run.
            </summary>
            <value>The layout page event.</value>
            <remarks>
              <para>Presently, there are three valid values: 'preInit', 'init' or 'load'.</para>
              <para>Default value is: 'preInit'.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.LicenseFile">
            <summary>
            Gets the path to the license file.
            </summary>
            <value>
            Default value: <c><see cref="M:Sitecore.IO.FileUtil.MakePath(System.String,System.String)"/>(DataFolder, "license.xml")</c>
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.LinkItemNotFoundUrl">
            <summary>
            Gets the URL to redirect to, if an item is not found.
            </summary>
            <value>Default value: "/sitecore/service/notfound.aspx"</value>
            <remarks>
            If a request for a non-existing item comes in on the
            web site, the request is redirected to the url pointed to
            by this setting.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.LogFolder">
            <summary>
            Gets the path to the log folder.
            </summary>
            <value>Default value: <see cref="P:Sitecore.Configuration.Settings.DataFolder"/></value>
            <remarks>
              <para>The log folder is the place where log files are stored.</para>
              <para>The value can be a virtual or physical path.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.LoginLayout">
            <summary>
            Gets the name of the layout to use for logging
            in (to extranet)
            </summary>
            <value>Default value: [an empty string]</value>
            <remarks>
              <para>If the web site is protected (see <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.ProtectedSite"/>),
            the layout specified by this setting will be shown, when an
            unauthorized person tries to view the site.</para>
              <para>If no <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.LoginLayout"/> is specified,
            the <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.ProtectedSite"/> setting will have no effect.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.LoginPage">
            <summary>
            Gets the path to the page to use for logging
            in (to extranet)
            </summary>
            <value>Default value: [an empty string]</value>
            <remarks>
              <para>If the web site is protected (see <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.ProtectedSite"/>),
            the layout specified by this setting will be shown, when an
            unauthorized person tries to view the site.</para>
              <para>If no <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.LoginPage"/> is specified,
            the user will be redirected to an error page.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MailServer">
            <summary>
            Gets the mail server.
            </summary>
            <value>The mail server.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MailServerPassword">
            <summary>
            Gets the mail server password.
            </summary>
            <value>The mail server password.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MailServerPort">
            <summary>
            Gets the mail server port.
            </summary>
            <value>The mail server port.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MailServerUserName">
            <summary>
            Gets the name of the mail server user.
            </summary>
            <value>The name of the mail server user.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MasterVariablesReplacer">
            <summary>
            Gets the type of a class used for replacing variables when creating a master.
            </summary>
            <value>The master variables replacer.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MaxCallLevel">
            <summary>
            Gets the maximum allowed depth of a recursive
            method call.
            </summary>
            <value>Default value: The current value of <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.MaxTreeDepth"/></value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MaxItemNameLength">
            <summary>
            Gets the maximum length of an item name.
            </summary>
            <value>Default value: 100</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MaxSqlBatchStatements">
            <summary>
            Gets the maximum number of statements to put in a <c>SqlBatch</c>.
            </summary>
            <value>The maximum number. Default value: 150</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MaxTreeDepth">
            <summary>
            Gets the maximum allowed depth of an item tree.
            </summary>
            <value>Default value: 20</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MaxWorkerThreads">
            <summary>
            Gets the maximum number of worker threads to use.
            </summary>
            <value>Default value: 20</value>
            <remarks>Used by the ManagedThreadPool.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MediaFolder">
            <summary>
            Gets the path to the media library root folder.
            </summary>
            <value>Default value: "/upload"</value>
            <remarks>
              <para>The media folder is the place where images, pdf's,
            and other media files are stored.</para>
              <para>The value can be a virtual or physical path.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.NoAccessUrl">
            <summary>
            Gets the URL to redirect to, if access to an item
            is denied.
            </summary>
            <value>Default value: "/sitecore/service/noaccess.aspx"</value>
            <remarks>
            If a request for an item for which the current user
            does not have read rights is detected, the request is
            redirected to the URL pointed to by this setting.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.NoLicenseUrl">
            <summary>
            Gets the URL to redirect to, if a license is missing.
            </summary>
            <value>Default value: "/sitecore/service/nolicense.aspx"</value>
            <remarks>
            If a required license is missing, page requests will
            be redirected to the URL pointed to by this setting.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.PackagePath">
            <summary>
            Gets the path where package files are located.
            </summary>
            <value>
            Default value: <c><see cref="M:Sitecore.IO.FileUtil.MakePath(System.String,System.String)"/>(DataFolder, "packages")</c>
            </value>
            <remarks>
              <para>When installing packages, the package files must be
            located in this folder.</para>
              <para>Also, when generating new packages, the files will be
            saved in this folder.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.PageStateStore">
            <summary>
            Gets the page state store.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.PortalPrincipalResolver">
            <summary>
            Gets the portal principal resolver.
            </summary>
            <value>The portal principal resolver.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.PortalStorage">
            <summary>
            Gets the portal storage.
            </summary>
            <value>The portal storage.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ProfileItemDatabase">
            <summary>
            Gets the database where user profile items are stored.
            </summary>
            <value>The profile item database.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ProcessHistoryCount">
            <summary>
            Gets the number of process histories to show at
            startup.
            </summary>
            <value>Default value: 2</value>
            <remarks>
              <para>For diagnostic purposes, the shutdown reason for
            previous ASP.NET worker processes are shown in the Sitecore
            log file.</para>
              <para>This setting determines how many processes to look
            back (max. 100).</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ProtectedSite">
            <summary>
            Gets a value indicating whether the entire site is protected (require login).
            </summary>
            <value>Default value: false.</value>
            <remarks>
              <para>If true, no page on the site can be accessed without
            logging in to the extranet security subsystem.</para>
              <para>For this to work, the setting <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.LoginLayout"/>
            <b>must.</b> also be set.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.RecycleBinActive">
            <summary>
            Gets a value indicating whether recycle bin is active.
            </summary>
            <value>Default value: true.</value>
            <remarks>
              <para>If true, deleted items are moved to the recycle bin
            rather than being physically deleted.</para>
              <para>If false, items are always physically deleted.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.RamBufferSize">
            <summary>
            Gets a value indicating the Ram Buffer Size for the Lucene Indexes
            </summary>
            <value>Default value: 16MB.</value>
            <remarks>
              <para>This will store X amount of MB in ram before flushing that to the file system</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MaxFacets">
            <summary>
            Gets a value indicating the maxium number of possible facets to return
            </summary>
            <value>Default value: 2048.</value>
            <remarks>
              <para>If you increase this it can affect performance and memory consumption</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.MaxDocumentBufferSize">
            <summary>
            Gets a value indicating the Max Doc Buffer Size for the Lucene Indexes
            </summary>
            <value>Default value: 10 Documents.</value>
            <remarks>
              <para>This will store X amount of documents in ram before flushing that to the file system</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.IndexMergeFactor">
            <summary>
            Gets a value indicating the Max Doc Buffer Size for the Lucene Indexes
            </summary>
            <value>Default value: 10 Documents.</value>
            <remarks>
              <para>This will store X amount of documents in ram before flushing that to the file system</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.RedirectUrlPrefixes">
            <summary>
            Gets a list of paths for which the RewritePath method should not be used for security reasons.
            For more details see the RedirectURLPrefixes setting in the web.config file.
            </summary>
            <value>List of paths.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.RequireLockBeforeEditing">
            <summary>
            Gets a value indicating whether a lock is required before editing.
            </summary>
            <value>
             <c>true</c> if a lock is required before editing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.SerializationFolder">
            <summary>
            Gets the serialization folder.
            </summary>
            <value>The serialization folder.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.SerializationPassword">
            <summary>
            Gets the password used for deserializing users.
            </summary>
            <value>The serialization password.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.InstanceName">
            <summary>
            Gets the name of the Sitecore server instance.
            </summary>
            <value>The name of the Sitecore server instance.</value>
            <remarks>Default value: <see cref="M:Sitecore.MainUtil.GetMachineName"/>.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.Sites">
            <summary>
            Gets the list of sites.
            </summary>
            <value>Default value: [empty list]</value>
            <remarks>
              <para>A single Sitecore database can contain multiple sites
            with different root paths and languages.</para>
              <para>This setting returns a list of <see cref="T:Sitecore.Web.SiteInfo"/>
            objects describing the individual sites in a multi-site
            installation.</para>
              <para>The site data is collected from the &lt;sites&gt;
            section in web.config.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.SystemBlockedUrl">
            <summary>
            Gets the URL to redirect to, if the system has been blocked.
            </summary>
            <value>Default value: "/sitecore/blocked.aspx"</value>
            <remarks>
            If the system has been blocked, page requests will
            be redirected to the URL pointed to by this setting.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.TempFolderPath">
            <summary>
            Gets the temp folder path.
            </summary>
            <value>The temp folder path.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ThumbnailHeight">
            <summary>
            Gets the max height of auto-generated image thumbnails.
            </summary>
            <value>Default value: 50</value>
            <remarks>
              <para>When images are uploaded to the media library, a thumbnail
            is generated (see <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.GenerateThumbnails"/>).</para>
              <para>If zero, the <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.ThumbnailWidth"/> property decides
            the size (scaling is done proportionally).</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ThumbnailsBackgroundColor">
            <summary>
            Gets the color of the thumbnails background.
            </summary>
            <value>The color of the thumbnails background.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ThumbnailWidth">
            <summary>
            Gets the maximum width of auto-generated image
            thumbnails.
            </summary>
            <value>Default value: 0</value>
            <remarks>
              <para>When images are uploaded to the media library, a thumbnail
            is generated (see <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.GenerateThumbnails"/>).</para>
              <para>If zero, the <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.ThumbnailHeight"/> property decides
            the size (scaling is done proportionally).</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.UnlockAfterCopy">
            <summary>
            Gets a value indicating whether to unlock items after copying.
            </summary>
            <remarks>
            Only the copies are unlocked. The original items stay locked.
            </remarks>
            <value><c>true</c> if items should be unlocked after copying; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.VersionFilePath">
            <summary>
            Gets the path to the version file.
            </summary>
            <value>The version file path.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ViewStateStore">
            <summary>
            Indicates if ViewState is cached in the GlobalCache in SheerUI.
            </summary>
            <value>The view state store.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.Wallpaper">
            <summary>
            Gets the wallpaper.
            </summary>
            <value>The wallpaper.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.WallpapersPath">
            <summary>
            Gets the wallpapers path.
            </summary>
            <value>The wallpapers path.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.WebStylesheet">
            <summary>
            Gets the path to the default web site stylesheet.
            </summary>
            <value>Default value: /default.css.</value>
            <remarks>
            The stylesheet pointed to by this setting is
            automatically added to all pages descending
            from <c>Sitecore.BasePage"</c>.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.WelcomeTitle">
            <summary>
            Gets the welcome title to show on the login page.
            </summary>
            <value>Default value: "" (empty string)</value>
            <remarks>The title to show on the Sitecore client login page.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.XHtmlSchemaFile">
            <summary>
            Gets the XHTML schema file.
            </summary>
            <value>The XHTML schema file.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.XmlControlAspxFile">
            <summary>
            Gets the extension used for xml control files.
            </summary>
            <value>Default value: "xml"</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.XmlControlExtension">
            <summary>
            Gets the extension used for xml control files.
            </summary>
            <value>Default value: "xml"</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ConnectionStringExists(System.String)">
            <summary>
            Determines if the specified connection string exists.
            </summary>
            <param name="connectionStringName">
            Name of the connection string.
            </param>
            <returns>
            The connection string exists.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.PipelineProfilingEnabled">
            <summary>
            Gets a value indicating that pipelines profiler is enabled.
            </summary>
            <remarks>
            When <c>true</c>, performance of all core pipelines is measured and available at /sitecore/admin/pipelines.aspx
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.PipelineProfilingMeasureCpuTime">
            <summary>
            Gets a value indicating that pipelines profiler should measure CPU consumption of the pipelines.
            </summary>
            <remarks>
            When <c>false</c>, CPU Time will not be measured and will not be displayed on /sitecore/admin/pipelines.aspx
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ClientPersistentLoginDuration">
            <summary>
            Gets the timeout in days for the client "remember me" feature.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultDomainName">
            <summary>
            Gets the name of the default domain.
            </summary>
            <value>The name of the default domain.</value>
            <remarks>Default value: <c>default</c></remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.DefaultMembershipProviderWildcard">
            <summary>
            Gets the default membership wildcard used by the providers.
            </summary>
            <value>The membership wildcard. Default value: %</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.SaveRawUrl">
            <summary>
            Gets a value indicating whether the original request URL is passed to the login page 
            (saved in <c>'URL'</c> query string parameter).
            </summary>
            <value><c>true</c> if raw URL of original request should be passed to the login page otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ClientSessionTimeout">
            <summary>
            Gets the timeout in minutes of an 
            user session.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.VirtualMembershipWildcard">
            <summary>
            Gets the membership wildcard to use in high level code.
            </summary>
            <value>The membership wildcard. Default value: *</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.AutoScheduleSmartPublish">
            <summary>
            Gets a value indicating whether to automatically schedule a smart publish when proxy definitions etc. change?
            </summary>
            <value>
             <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.CheckSecurity">
            <summary>
            Gets a value indicating whether to check security rights when publishing.
            </summary>
            <remarks>
              <para>Only read and write rights are used.</para>
              <para>Default value: false.</para>
            </remarks>
            <value><c>true</c> if security should be checked; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.CompareRevisions">
            <summary>
            Gets a value indicating whether publishing compares the revisions.
            </summary>
            <value>
             <c>true</c> if publishing compares the revisions; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.LogInterval">
            <summary>
            Gets the log interval.
            </summary>
            <value>The log interval.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.PublishDialogPollingInterval">
            <summary>
            Gets the publish dialog polling interval.
            </summary>
            <value>The publish dialog polling interval.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.PublishEmptyItems">
            <summary>
            Gets a value indicating whether empty items (i.e. items without publishable versions) should be published.
            </summary>
            <value><c>true</c> if empty items should be published; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.PublishingInstance">
            <summary>
            Gets the publish server instance name.
            </summary>
            <value>The publish server.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.RequireTargetDeleteRightWhenCheckingSecurity">
            <summary>
            Gets a value indicating whether to check for delete rights on target items when publishing.
            </summary>
            <remarks>
              <para>Only used when <see cref="M:Sitecore.ContentSearch.Abstractions.ISettings.CheckSecurity"/> is <c>true</c>.</para>
              <para>If set to <c>false</c> all publishing users will be able to publish deletions.</para>
              <para>Default value: true.</para>
            </remarks>
            <value><c>true</c> if delete right should be checked; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.StatusUpdateInterval">
            <summary>
            Gets the time between updating the status cache for running publishing jobs.
            </summary>
            <value>The update interval.</value>
            <remarks>Default value: 2 seconds.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ThreadPriority">
            <summary>
            Gets the thread priority of publishing jobs.
            </summary>
            <value>
            The priority. Default value is ThreadPriority.BelowNormal/>
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.TimeBeforeStatusExpires">
            <summary>
            Gets the time before a cached status registration expires.
            </summary>
            <value>The time before status expires.</value>
            <remarks>Default value: 2 hours.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.QueryMaxItems">
            <summary>
            Gets the max items.
            </summary>
            <value>The max items.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ImagesAsXhtml">
            <summary>
            Gets a value indicating whether to render images as XHTML.
            </summary>
            <value><c>true</c> if images should be rendered as XHTML; otherwise, <c>false</c>.</value>
            <remarks>Default value: true</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.ProcessDuplicatePlaceholders">
            <summary>
            Gets a value indicating whether to process duplicate placeholders.
            </summary>
            <value>
             <c>true</c> if duplicate placeholders should be processed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.SiteResolving">
            <summary>
            Gets a value indicating whether resolving site information while rendering item links.
            </summary>
            <value><c>true</c> if site resolving is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.SiteResolvingMatchCurrentLanguage">
            <summary>
            Gets a value indicating whether current language is used to resolve site while rendering item links.
            </summary>
            <value>
            	<c>true</c> if feature enabled otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.SiteResolvingMatchCurrentSite">
            <summary>
            Gets a value indicating whether current site has higher priority in site resolving while rendering item links.
            </summary>
            <value>
            	<c>true</c> if feature enabled otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.TypesThatShouldNotBeExpanded">
            <summary>
            Gets a <see cref="T:Sitecore.Collections.Set`1"/> of the types that should not be expanded during page building.
            </summary>
            <value>The types that should not be expanded.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetAppSetting(System.String)">
            <summary>
            Gets named application setting.
            </summary>
            <param name="name"> The application setting name.</param>
            <returns>The app setting.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetAppSetting(System.String,System.String)">
            <summary>
            Gets named application setting.
            </summary>
            <param name="name">
            The application setting name.
            </param> <param name="defaultValue">The default value.</param>
            <returns> The app setting. </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetBoolSetting(System.String,System.Boolean)">
            <summary>
            Gets boolean setting.
            </summary>
            <param name="name"> Name of the s.</param>
            <param name="defaultValue"> if set to <c>true</c> this instance is default value.</param>
            <returns>The boolean setting. </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetConnectionString(System.String)">
            <summary>
            Gets a named connection string.
            </summary>
            <param name="connectionStringName"> Name of the connection string.</param>
            <returns> The connection string.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetDoubleSetting(System.String,System.Double)">
            <summary>
            Gets double setting.
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The long setting.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetFileSetting(System.String)">
            <summary>
            Gets named setting contains a file path.
            </summary>
            <param name="name"> Name of the s.</param>
            <returns>The file setting.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetFileSetting(System.String,System.String)">
            <summary>
            Gets named setting contains a file path.
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value. </param>
            <returns>The file setting.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetIntSetting(System.String,System.Int32)">
            <summary>
            Gets int setting.
            </summary>
            <param name="name"> The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns> The int setting.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetLongSetting(System.String,System.Int64)">
            <summary>
            Gets long setting.
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The long setting.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetSetting(System.String)">
            <summary>
            Gets named setting.
            </summary>
            <param name="name"> The setting name.</param>
            <returns>The setting. </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetSetting(System.String,System.String)">
            <summary>
            Gets named setting with default.
            </summary>
            <param name="name"> The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The setting.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetSystemSection``1(System.String)">
            <summary>
            Gets a system section from web.config (i.e. a section located beneath system.web).
            </summary>
            <param name="sectionName">Name of the section.</param>
            <returns> The system section.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetTimeSpanSetting(System.String,System.String)">
            <summary>
            Gets setting contains a time span (hh:mm:ss)
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The time span setting.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetTimeSpanSetting(System.String,System.TimeSpan)">
            <summary>
            Gets setting contains a time span (hh:mm:ss)
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The time span setting. </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ISettings.GetTimeSpanSetting(System.String,System.TimeSpan,System.Globalization.CultureInfo)">
            <summary>
            Gets the time span setting.
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="cultureInfo">The culture info.</param>
            <returns>The time span setting. </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Abstractions.ObjectLocator">
            <summary>
            Default implementation of IObjectLocator interface.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Abstractions.ObjectLocator.callbacks">
            <summary>The list of component callbacks</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Abstractions.ObjectLocator.componentsByName">
            <summary>
            The list of registered components by name.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Abstractions.ObjectLocator.componentsByType">
            <summary>
            The list of registered components by type.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Abstractions.ObjectLocator"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.#ctor(Sitecore.ContentSearch.Abstractions.ObjectLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Abstractions.ObjectLocator"/> class.
            </summary>
            <param name="locator">The locator.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.GetInstance(System.Type)">
            <summary>
            Gets the instance resolved for of the specified type.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <returns>
            The instance.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.GetInstance(System.Type,System.String)">
            <summary>
            Gets the instance resolved for of the specified type and key.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <param name="key">The key.</param>
            <returns>
            The instance.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.GetAllInstances(System.Type)">
            <summary>
            Gets the instance resolved for of the specified type.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <returns>
            Instances.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.GetInstance``1">
            <summary>
            Gets the instance of the specified type.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <returns>
            The instance.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.GetInstance``1(System.String)">
            <summary>
            Gets the instance of the specified type and key.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="key">The key.</param>
            <returns>
            The instance.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.GetAllInstances``1">
            <summary>
            Gets all instances of the specified type.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <returns>
            Instances.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.Register``1(System.Converter{Sitecore.ContentSearch.Abstractions.IObjectLocator,``0})">
            <summary>
            Registers the specified factory.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.Register``1(System.String,System.Converter{Sitecore.ContentSearch.Abstractions.IObjectLocator,``0})">
            <summary>
            Registers the specified factory for the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.Register(System.String,System.Type,System.Converter{Sitecore.ContentSearch.Abstractions.IObjectLocator,System.Object})">
            <summary>
            Registers the specified factory for the specified key and type.
            </summary>
            <param name="key">The key.</param>
            <param name="serviceType">Type of the service.</param>
            <param name="factory">The factory.</param>
            <exception cref="T:System.ApplicationException"></exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.IsEmpty">
            <summary>
            Determines whether locator is empty.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.ObjectLocator.Clear">
            <summary>
            Clears locator object.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Abstractions.SettingsWrapper">
            <summary>
            The Sitecore proxy of ISettings interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.AliasesActive">
            <summary>
            Gets a value indicating whether aliases are active.
            </summary>
            <returns></returns>
            <value>
            True, if aliases are active, otherwise false. Default value: true.
              </value>
            <remarks>
              <para>When Sitecore renders a page, it first tries to determine the
            current item from the path on the query string. If the path does not
            match an item, it search the alias list for matching pages. An alias
            is a simple pointer to an item in Sitecore. If a match is found, that
            page is rendered.</para>
              <para>Aliases are configured in /sitecore/system/aliases.</para>
              <para>Aliases cause a small performance loss as the alias list
            has to be searched, if the page was not found.</para>
              <para>This setting controls if the alias list search or not.</para>
              <para>The name of the web.config setting is "AliasesActive".</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.AllowLogoutOfAllUsers">
            <summary>
            Gets a value indicating whether the logout screen presents all users or
            just users with the same name.
            </summary>
            <returns></returns>
            <value>
            True, if all users are shown, otherwise false. Default value: false.
              </value>
            <remarks>
              <para>&gt;When a user logs in, Sitecore checks if the maximum number of
            users has been reached (as specified in the license). If so, the
            logout user web page is shown allowing the user to logout a
            existing session.</para>
              <para>This flags is the user is allowed to logout only sessions with
            the same name as the user, or all other sessions. For instance if
            the flag is false, the user "Andy" may only logout other sessions
            created by the user "Andy". If the flag is true, "Andy" can also logout
            sessions created by "Bob".</para>
              <para>The name of the web.config setting is "AllowLogoutOfAllUsers".</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.AppendQSToUrlRendering">
            <summary>
            Gets a value indicating whether main query strings are appended to URL renderings?
            </summary>
            <returns></returns>
            <value>Default value: true.</value>
              <example>
            If a layout contains a URL rendering with the URL
              <c>http://www.google.com/search.</c>, and the layout is
            triggered by the URL <c>http://localhost/home.aspx?q=sitecore.</c>,
            the URL rendering will request the URL <c>http://www.google.com/search?q=sitecore.</c>
              </example>
            <remarks>
            If true, query strings of the main page will be
            passed on the all URL renderings on the page.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.AutomaticDataBind">
            <summary>
            Gets a value indicating whether the DataBind function is called by the
            web engine.
            </summary>
            <returns></returns>
            <value>
            True, if <see cref="M:System.Web.UI.Control.DataBind" />
            is called, otherwise false. Default value: false.
              </value>
            <remarks>
            This settings holds the default value for the
            <see cref="P:Sitecore.Configuration.StateContext.DataBind" /> State variable.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.AutomaticLockOnSave">
            <summary>
            Gets a value indicating whether the item is automatically locked on save.
            </summary>
            <returns></returns>
            <value>
              <c>true</c> if the item is automatically locked on save; otherwise, <c>false</c>.
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.AutomaticUnlockOnSaved">
            <summary>
            Gets a value indicating whether the item is automatically unlocked on saved.
            </summary>
            <returns></returns>
            <value>
              <c>true</c> if  the item is automatically unlocked on saved; otherwise, <c>false</c>.
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.CheckSecurityOnLanguages">
            <summary>
            Gets a value indicating whether security on languages should be checked.
            </summary>
            <returns></returns>
            <value>Default value: false.</value>
            <remarks>
              <para>If true, the security settings on individual languages
            will be checked.</para>
              <para>This allows the administrator to hide languages from
            individual users. For instance, security may be set that
            allows a user to read English and write German.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ClientLanguage">
            <summary>
            Gets the default client language.
            </summary>
            <returns></returns>
            <value>Default value: "en"</value>
            <remarks>
              <para>Determines the language of the user interface in the
            Sitecore client.</para>
              <para>This setting will be ignored if a specific client
            language has been specified for the user (in the user settings).</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.CustomErrorsMode">
            <summary>
            Gets the custom errors mode.
            </summary>
            <returns></returns>
            <value>The custom errors mode.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ConfigurationIsSet">
            <summary>
            Gets a value indicating whether configuration is set.
            </summary>
            <returns></returns>
            <value><c>true</c> if configuration is set; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DataFolder">
            <summary>
            Gets the path to the data folder.
            </summary>
            <returns></returns>
            <value>Default value: "/data"</value>
            <remarks>
              <para>The data folder is the place where data, index, audit
            and log files are stored.</para>
              <para>The value can be a virtual or physical path.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DebugBorderColor">
            <summary>
            Gets the color of debug borders.
            </summary>
            <returns></returns>
            <value>Default value: "red"</value>
            <remarks>
            This is the CSS color value to use when drawing borders
            around elements on the Sitecore debug page (/sitecore/debug).
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DebugBorderTag">
            <summary>
            Gets the html tag to use for debug borders (usually span or div).
            </summary>
            <returns></returns>
            <value>Default value: "span"</value>
            <remarks>
            This is the html tag to use when drawing borders
            around elements on the Sitecore debug page (/sitecore/debug).
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DebugEnabled">
            <summary>
            Gets a value indicating whether ASP.NET debugging is enabled.
            </summary>
            <returns></returns>
            <value><c>true</c> if debug is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DebugFolder">
            <summary>
            Gets the path to the debug folder.
            </summary>
            <returns></returns>
            <value>Default value: <see cref="P:Sitecore.Configuration.Settings.DataFolder" /></value>
            <remarks>
              <para>The debug folder is the place where debug files are stored.</para>
              <para>The value can be a virtual or physical path.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultBaseTemplate">
            <summary>
            Gets the GUID of the default base templates.
            </summary>
            <returns></returns>
            <value>The default base template.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultDesktop">
            <summary>
            Gets the default desktop.
            </summary>
            <returns></returns>
            <value>Default value: "/sitecore/client/desktops/standard/default.aspx"</value>
            <remarks>
            Gets the path of the aspx page that defines the
            default layout (frameset) of the Sitecore client.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultIcon">
            <summary>
            Gets the path to the default icon for items in the
            Sitecore client.
            </summary>
            <returns></returns>
            <value>Default value: "/sitecore/client/images/document.gif"</value>
            <remarks>
              <para>Gets the path of the default image file to show next
            to items in the tree view of the Sitecore client.</para>
              <para>The image shown can be overridden by filling out the
            Icon field on an item or its template.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultItem">
            <summary>
            Gets the default item for the Sitecore client.
            </summary>
            <returns></returns>
            <value>Default value: "/home"</value>
            <remarks>
            This is the path to the item that will be the selected
            when starting the Sitecore client (unless overridden by user
            settings).
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultLanguage">
            <summary>
            Gets the default language for the web site.
            </summary>
            <returns></returns>
            <value>Default value: "en"</value>
            <remarks>
              <para>This is the default language of all content on the
            web site.</para>
              <para>If multiple sites are specified using the &lt;sites&gt;
            section of web.config, the current URL will be matched against
            the sites specified in that section.</para>
              <para>If a match is found, the language of that site
            definition is used. Otherwise, the value of the 'DefaultLanguage'
            setting is used.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultLayoutFile">
            <summary>
            Gets the path to the layout file to use for items
            that do not specify a layout file themselves.
            </summary>
            <returns></returns>
            <value>Default value: "/default.aspx"</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultPageName">
            <summary>
            Gets the name of the default ASPX page.
            </summary>
            <returns></returns>
            <value>The name of the default page.</value>
            <remarks>
            Default value: default.aspx
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultPublishingTargets">
            <summary>
            Gets a pipe separated list of publishing group names.
            </summary>
            <returns></returns>
            <value>Default value: "||"</value>
            <remarks>
            Groups in this list will be preselected in the
            Publish and Preview dialogs.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultRegionalIsoCode">
            <summary>
            Gets the default regional ISO code.
            </summary>
            <returns></returns>
            <value>The default regional ISO code.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultShellControl">
            <summary>
            Gets the default shell control.
            </summary>
            <returns></returns>
            <value>Default value: "Cyclops"</value>
            <remarks>
            This specifies the default XML control to use in /sitecore/shell/default.aspx,
            if none is specified.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultSortOrder">
            <summary>
            Gets the default value of the sort order attribute.
            </summary>
            <returns></returns>
            <value>Default value: 0</value>
            <remarks>
            Sort order is used for displaying items in the
            Sitecore client and for API functions that returns sorted
            sets.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultSQLTimeout">
            <summary>
            Gets the default timeout for SQL commands.
            </summary>
            <returns></returns>
            <value>Default value: 5 minutes</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultTheme">
            <summary>
            Gets the default Sitecore client theme.
            </summary>
            <returns></returns>
            <value>Default value: "standard"</value>
            <remarks>
            A theme is a set of colors and fonts used in the
            Sitecore client (i.e. a 'skin').
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultThumbnail">
            <summary>
            Gets the path to the default thumbnail for items in the
            Sitecore client.
            </summary>
            <returns></returns>
            <value>Default value: "/sitecore/client/images/document.gif"</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DisableBrowserCaching">
            <summary>
            Gets a value indicating whether browser caching of pages should be disabled.
            </summary>
            <returns></returns>
            <value>Default value: true.</value>
            <remarks>
            If true, a HTTP header value disabling browser caching
            will be written to all outgoing pages.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.EmailValidation">
            <summary>
            Gets a regular expression used for e-mail validation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.EnableEventQueues">
            <summary>
            Gets a value indicating whether Sitecore sends local events to the event queue, and whether the
            local instance handles events in the queue from remote instances.
            </summary>
            <returns></returns>
            <value>
              <c>true</c> if Sitecore writes local events to the event queue and handles events in the queue from remote instances;
            otherwise, <c>false</c>.
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.EnableSiteConfigFiles">
            <summary>
            Gets a value that indicates whether the SiteResolver pipeline processor checks for the existence of a "site.config"
            file in the physical subdirectory corresponding to the requested URL.
            </summary>
            <returns></returns>
            <value>
              <c>true</c> if the SiteResolver pipeline processor checks for the existence of a "site.config" file;
            otherwise, <c>false</c>.
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.EnableXslDocumentFunction">
            <summary>
            Gets a value indicating whether XSLT document() support should be enabled.
            </summary>
            <returns></returns>
            <value><c>true</c> if document() support is enabled; otherwise, <c>false</c>.</value>
            <remarks>
              <para>If this is not enabled, it will be an error if the XSLT file contains 'document()' references.</para>
              <para>Document support can be set for individual XSLT files by using the <see cref="P:Sitecore.Web.UI.WebControls.XslFile.EnableDocument" /> property.</para>
              <para>Default value: true.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.EnableXslScripts">
            <summary>
            Gets a value indicating whether XSLT script support should be enabled.
            </summary>
            <returns></returns>
            <value><c>true</c> if script support is enabled; otherwise, <c>false</c>.</value>
            <remarks>
              <para>If script support is not enabled, it will be an error if the XSLT file contains script blocks.</para>
              <para>Script support can be set for individual XSLT files by using the <see cref="P:Sitecore.Web.UI.WebControls.XslFile.EnableScript" /> property.</para>
              <para>Default value: false.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ErrorPage">
            <summary>
            Gets the page to redirect to, if a generic error occurs.
            </summary>
            <returns></returns>
            <value>Default value: "/sitecore/service/error.aspx"</value>
            <remarks>
            If an error occurs during processing of an incoming
            request, an error message will be shown using the page
            pointed to
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.FastPublishing">
            <summary>
            Gets a value indicating whether use fast publishing.
            </summary>
            <returns></returns>
            <value>
              <c>true</c> if the fast publishing is used; otherwise, <c>false</c>.
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.FastQueryDescendantsDisabled">
            <summary>
            Gets a value indicating whether improve performance of item creation/moving/deletion.
            Setting this to 'true' will make fast query return incorrect results when selecting items using the Ancestors/Descendants axes.
            </summary>
            <returns></returns>
            <value><c>true</c> if axes info are refreshed; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GenerateThumbnails">
            <summary>
            Gets a value indicating whether thumbnails of uploaded image files
            should be generated.
            </summary>
            <returns></returns>
            <value>Default value: true.</value>
              <seealso cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ThumbnailWidth" />
              <seealso cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ThumbnailHeight" />
            <remarks>
              <para>If true, a thumbnail will be generated each time an
            image file is uploaded.</para>
              <para>The thumbnail will be stored in the <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MediaFolder" />.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GridPageSize">
            <summary>
            Gets the number of rows in a UI grid.
            </summary>
            <returns></returns>
            <value>The number of rows in a UI grid.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.HashEncryptionProvider">
            <summary>
            Gets the hash encryption provider.
            </summary>
            <returns></returns>
            <value>The hash encryption provider.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.HealthMonitorInterval">
            <summary>
            Gets the health monitor interval.
            </summary>
            <returns></returns>
            <value>The health monitor interval (default: 10 minutes).</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.HeartbeatInterval">
            <summary>
            Gets the interval between heartbeats.
            </summary>
            <returns></returns>
            <value>Default value: 00:00:05 (5 seconds)</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.IgnoreUrlPrefixes">
            <summary>
            Gets a pipe separated list of URL prefixes to ignore
            when mapping friendly URLs.
            </summary>
            <returns></returns>
            <value>Default value: "/sitecore|/layouts/|/images/|/trace.axd"</value>
            <remarks>
              <para>Normally, URL requests coming in are mapped to an
            item and the request is redirected to the items layout page.</para>
              <para>For example, if the item <c>/home/news.</c> has the
            layout <c>/layouts/newslist.aspx.</c>, the URL
              <c>http://localhost/home/news.aspx.</c> will be redirected
            to <c>http://localhost/layouts/newslist.aspx?path=[id of the News item]</c>.</para>
              <para>To prevent this redirection to take place for physical aspx pages,
            their prefixes can be added to <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.IgnoreUrlPrefixes" />.</para>
              <para>For example, if an aspx page called <c>/forms/registration.aspx.</c>
            existed, the prefix <c>/forms/</c> could be added to web.config to prevent
            requests for this page to be redirected.</para>
              <para>Elements must be lowercase and non-empty.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ImageTypes">
            <summary>
            Gets a pipe separated list of image file
            types (extensions).
            </summary>
            <returns></returns>
            <value>Default value: "|gif|jpg|png|"</value>
            <remarks>
              <para>List of file extension that are to be considered
            images by the Sitecore system.</para>
              <para>Used for determining if thumbnails should be
            generated when uploading files.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.IndexFolder">
            <summary>
            Gets the index folder.
            </summary>
            <returns></returns>
            <value>The index folder.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.InvalidItemNameChars">
            <summary>
            Gets the invalid item name chars.
            </summary>
            <returns></returns>
            <value>The invalid item name chars.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ItemNameValidation">
            <summary>
            Gets the item name validation.
            </summary>
            <returns></returns>
            <value>The item name validation.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ItemNotFoundUrl">
            <summary>
            Gets the URL to redirect to, if an item being linked to is not found.
            </summary>
            <returns></returns>
            <value>Default value: "/sitecore/service/notfound.aspx"</value>
            <remarks>
            If a dynamic link is made for a non-existing item on the
            web site, the request is redirected to the URL pointed to
            by this setting.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.KeepLockAfterSaveForAdminUsers">
            <summary>
            Gets a value indicating whether the item is kept locked after save in Page Editor for Administrator users.
            </summary>
            <returns></returns>
            <value>
              <c>true</c> if  the item is kept locked on saved; otherwise, <c>false</c>.
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.LayoutFolder">
            <summary>
            Gets the path to the layout file root folder.
            </summary>
            <returns></returns>
            <value>Default value: "/layouts"</value>
            <remarks>
              <para>The layout folder is the place where layout files are stored.</para>
              <para>The value can be a virtual or physical path.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.LayoutNotFoundUrl">
            <summary>
            Gets the URL to redirect to, if an items layout is not found.
            </summary>
            <returns></returns>
            <value>Default value: "/sitecore/service/nolayout.aspx"</value>
            <remarks>
            If a request for an item with an empty or a non-existing
            layout comes in, the request is redirected to the URL pointed to
            by this setting.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.LayoutPageEvent">
            <summary>
            Gets the name of page event where the layout pipeline will be run.
            </summary>
            <returns></returns>
            <value>The layout page event.</value>
            <remarks>
              <para>Presently, there are three valid values: 'preInit', 'init' or 'load'.</para>
              <para>Default value is: 'preInit'.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.LicenseFile">
            <summary>
            Gets the path to the license file.
            </summary>
            <returns></returns>
            <value>
            Default value: <c><see cref="M:Sitecore.IO.FileUtil.MakePath(System.String,System.String)" />(DataFolder, "license.xml")</c>
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.LinkItemNotFoundUrl">
            <summary>
            Gets the URL to redirect to, if an item is not found.
            </summary>
            <returns></returns>
            <value>Default value: "/sitecore/service/notfound.aspx"</value>
            <remarks>
            If a request for a non-existing item comes in on the
            web site, the request is redirected to the url pointed to
            by this setting.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.LogFolder">
            <summary>
            Gets the path to the log folder.
            </summary>
            <returns></returns>
            <value>Default value: <see cref="P:Sitecore.Configuration.Settings.DataFolder" /></value>
            <remarks>
              <para>The log folder is the place where log files are stored.</para>
              <para>The value can be a virtual or physical path.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.LoginLayout">
            <summary>
            Gets the name of the layout to use for logging
            in (to extranet)
            </summary>
            <returns></returns>
            <value>Default value: [an empty string]</value>
            <remarks>
              <para>If the web site is protected (see <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ProtectedSite" />),
            the layout specified by this setting will be shown, when an
            unauthorized person tries to view the site.</para>
              <para>If no <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.LoginLayout" /> is specified,
            the <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ProtectedSite" /> setting will have no effect.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.LoginPage">
            <summary>
            Gets the path to the page to use for logging
            in (to extranet)
            </summary>
            <returns></returns>
            <value>Default value: [an empty string]</value>
            <remarks>
              <para>If the web site is protected (see <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ProtectedSite" />),
            the layout specified by this setting will be shown, when an
            unauthorized person tries to view the site.</para>
              <para>If no <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.LoginPage" /> is specified,
            the user will be redirected to an error page.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MailServer">
            <summary>
            Gets the mail server.
            </summary>
            <returns></returns>
            <value>The mail server.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MailServerPassword">
            <summary>
            Gets the mail server password.
            </summary>
            <returns></returns>
            <value>The mail server password.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MailServerPort">
            <summary>
            Gets the mail server port.
            </summary>
            <returns></returns>
            <value>The mail server port.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MailServerUserName">
            <summary>
            Gets the name of the mail server user.
            </summary>
            <returns></returns>
            <value>The name of the mail server user.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MasterVariablesReplacer">
            <summary>
            Gets the type of a class used for replacing variables when creating a master.
            </summary>
            <returns></returns>
            <value>The master variables replacer.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MaxCallLevel">
            <summary>
            Gets the maximum allowed depth of a recursive
            method call.
            </summary>
            <returns></returns>
            <value>Default value: The current value of <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MaxTreeDepth" /></value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MaxItemNameLength">
            <summary>
            Gets the maximum length of an item name.
            </summary>
            <returns></returns>
            <value>Default value: 100</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MaxSqlBatchStatements">
            <summary>
            Gets the maximum number of statements to put in a <c>SqlBatch</c>.
            </summary>
            <returns></returns>
            <value>The maximum number. Default value: 150</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MaxTreeDepth">
            <summary>
            Gets the maximum allowed depth of an item tree.
            </summary>
            <returns></returns>
            <value>Default value: 20</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MaxWorkerThreads">
            <summary>
            Gets the maximum number of worker threads to use.
            </summary>
            <returns></returns>
            <value>Default value: 20</value>
            <remarks>
            Used by the ManagedThreadPool.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MediaFolder">
            <summary>
            Gets the path to the media library root folder.
            </summary>
            <returns></returns>
            <value>Default value: "/upload"</value>
            <remarks>
              <para>The media folder is the place where images, pdf's,
            and other media files are stored.</para>
              <para>The value can be a virtual or physical path.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.NoAccessUrl">
            <summary>
            Gets the URL to redirect to, if access to an item
            is denied.
            </summary>
            <returns></returns>
            <value>Default value: "/sitecore/service/noaccess.aspx"</value>
            <remarks>
            If a request for an item for which the current user
            does not have read rights is detected, the request is
            redirected to the URL pointed to by this setting.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.NoLicenseUrl">
            <summary>
            Gets the URL to redirect to, if a license is missing.
            </summary>
            <returns></returns>
            <value>Default value: "/sitecore/service/nolicense.aspx"</value>
            <remarks>
            If a required license is missing, page requests will
            be redirected to the URL pointed to by this setting.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.PackagePath">
            <summary>
            Gets the path where package files are located.
            </summary>
            <returns></returns>
            <value>
            Default value: <c><see cref="M:Sitecore.IO.FileUtil.MakePath(System.String,System.String)" />(DataFolder, "packages")</c>
              </value>
            <remarks>
              <para>When installing packages, the package files must be
            located in this folder.</para>
              <para>Also, when generating new packages, the files will be
            saved in this folder.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.PageStateStore">
            <summary>
            Gets the page state store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.PortalPrincipalResolver">
            <summary>
            Gets the portal principal resolver.
            </summary>
            <returns></returns>
            <value>The portal principal resolver.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.PortalStorage">
            <summary>
            Gets the portal storage.
            </summary>
            <returns></returns>
            <value>The portal storage.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ProfileItemDatabase">
            <summary>
            Gets the database where user profile items are stored.
            </summary>
            <returns></returns>
            <value>The profile item database.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ProcessHistoryCount">
            <summary>
            Gets the number of process histories to show at
            startup.
            </summary>
            <returns></returns>
            <value>Default value: 2</value>
            <remarks>
              <para>For diagnostic purposes, the shutdown reason for
            previous ASP.NET worker processes are shown in the Sitecore
            log file.</para>
              <para>This setting determines how many processes to look
            back (max. 100).</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ProtectedSite">
            <summary>
            Gets a value indicating whether the entire site is protected (require login).
            </summary>
            <returns></returns>
            <value>Default value: false.</value>
            <remarks>
              <para>If true, no page on the site can be accessed without
            logging in to the extranet security subsystem.</para>
              <para>For this to work, the setting <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.LoginLayout" />
              <b>must.</b> also be set.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.RecycleBinActive">
            <summary>
            Gets a value indicating whether recycle bin is active.
            </summary>
            <returns></returns>
            <value>Default value: true.</value>
            <remarks>
              <para>If true, deleted items are moved to the recycle bin
            rather than being physically deleted.</para>
              <para>If false, items are always physically deleted.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.RamBufferSize">
            <summary>
            Gets a value indicating the Ram Buffer Size for the Lucene Indexes
            </summary>
            <returns></returns>
            <value>Default value: 16MB.</value>
            <remarks>
            This will store X amount of MB in ram before flushing that to the file system
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MaxFacets">
            <summary>
            Gets a value indicating the maxium number of possible facets to return
            </summary>
            <returns></returns>
            <value>Default value: 2048.</value>
            <remarks>
            If you increase this it can affect performance and memory consumption
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.MaxDocumentBufferSize">
            <summary>
            Gets a value indicating the Max Doc Buffer Size for the Lucene Indexes
            </summary>
            <returns></returns>
            <value>Default value: 10 Documents.</value>
            <remarks>
            This will store X amount of documents in ram before flushing that to the file system
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.IndexMergeFactor">
            <summary>
            Gets a value indicating the Max Doc Buffer Size for the Lucene Indexes
            </summary>
            <returns></returns>
            <value>Default value: 10 Documents.</value>
            <remarks>
            This will store X amount of documents in ram before flushing that to the file system
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.RedirectUrlPrefixes">
            <summary>
            Gets a list of paths for which the RewritePath method should not be used for security reasons.
            For more details see the RedirectURLPrefixes setting in the web.config file.
            </summary>
            <returns></returns>
            <value>List of paths.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.RequireLockBeforeEditing">
            <summary>
            Gets a value indicating whether a lock is required before editing.
            </summary>
            <returns></returns>
            <value>
              <c>true</c> if a lock is required before editing; otherwise, <c>false</c>.
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.SerializationFolder">
            <summary>
            Gets the serialization folder.
            </summary>
            <returns></returns>
            <value>The serialization folder.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.SerializationPassword">
            <summary>
            Gets the password used for deserializing users.
            </summary>
            <returns></returns>
            <value>The serialization password.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.InstanceName">
            <summary>
            Gets the name of the Sitecore server instance.
            </summary>
            <returns></returns>
            <value>The name of the Sitecore server instance.</value>
            <remarks>
            Default value: <see cref="M:Sitecore.MainUtil.GetMachineName" />.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.Sites">
            <summary>
            Gets the list of sites.
            </summary>
            <returns></returns>
            <value>Default value: [empty list]</value>
            <remarks>
              <para>A single Sitecore database can contain multiple sites
            with different root paths and languages.</para>
              <para>This setting returns a list of <see cref="T:Sitecore.Web.SiteInfo" />
            objects describing the individual sites in a multi-site
            installation.</para>
              <para>The site data is collected from the &lt;sites&gt;
            section in web.config.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.SystemBlockedUrl">
            <summary>
            Gets the URL to redirect to, if the system has been blocked.
            </summary>
            <returns></returns>
            <value>Default value: "/sitecore/blocked.aspx"</value>
            <remarks>
            If the system has been blocked, page requests will
            be redirected to the URL pointed to by this setting.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.TempFolderPath">
            <summary>
            Gets the temp folder path.
            </summary>
            <returns></returns>
            <value>The temp folder path.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ThumbnailHeight">
            <summary>
            Gets the max height of auto-generated image thumbnails.
            </summary>
            <returns></returns>
            <value>Default value: 50</value>
            <remarks>
              <para>When images are uploaded to the media library, a thumbnail
            is generated (see <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GenerateThumbnails" />).</para>
              <para>If zero, the <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ThumbnailWidth" /> property decides
            the size (scaling is done proportionally).</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ThumbnailsBackgroundColor">
            <summary>
            Gets the color of the thumbnails background.
            </summary>
            <returns></returns>
            <value>The color of the thumbnails background.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ThumbnailWidth">
            <summary>
            Gets the maximum width of auto-generated image
            thumbnails.
            </summary>
            <returns></returns>
            <value>Default value: 0</value>
            <remarks>
              <para>When images are uploaded to the media library, a thumbnail
            is generated (see <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GenerateThumbnails" />).</para>
              <para>If zero, the <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ThumbnailHeight" /> property decides
            the size (scaling is done proportionally).</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.UnlockAfterCopy">
            <summary>
            Gets a value indicating whether to unlock items after copying.
            </summary>
            <returns></returns>
            <value><c>true</c> if items should be unlocked after copying; otherwise, <c>false</c>.</value>
            <remarks>
            Only the copies are unlocked. The original items stay locked.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.VersionFilePath">
            <summary>
            Gets the path to the version file.
            </summary>
            <returns></returns>
            <value>The version file path.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ViewStateStore">
            <summary>
            Indicates if ViewState is cached in the GlobalCache in SheerUI.
            </summary>
            <returns></returns>
            <value>The view state store.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.Wallpaper">
            <summary>
            Gets the wallpaper.
            </summary>
            <returns></returns>
            <value>The wallpaper.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.WallpapersPath">
            <summary>
            Gets the wallpapers path.
            </summary>
            <returns></returns>
            <value>The wallpapers path.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.WebStylesheet">
            <summary>
            Gets the path to the default web site stylesheet.
            </summary>
            <returns></returns>
            <value>Default value: /default.css.</value>
            <remarks>
            The stylesheet pointed to by this setting is
            automatically added to all pages descending
            from <c>Sitecore.BasePage"</c>.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.WelcomeTitle">
            <summary>
            Gets the welcome title to show on the login page.
            </summary>
            <returns></returns>
            <value>Default value: "" (empty string)</value>
            <remarks>
            The title to show on the Sitecore client login page.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.XHtmlSchemaFile">
            <summary>
            Gets the XHTML schema file.
            </summary>
            <returns></returns>
            <value>The XHTML schema file.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.XmlControlAspxFile">
            <summary>
            Gets the extension used for xml control files.
            </summary>
            <returns></returns>
            <value>Default value: "xml"</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.XmlControlExtension">
            <summary>
            Gets the extension used for xml control files.
            </summary>
            <returns></returns>
            <value>Default value: "xml"</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ConnectionStringExists(System.String)">
            <summary>
            Determines if the specified connection string exists.
            </summary>
            <param name="connectionStringName">Name of the connection string.</param>
            <returns>
            The connection string exists.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetAppSetting(System.String)">
            <summary>
            Gets named application setting.
            </summary>
            <param name="name">The application setting name.</param>
            <returns>
            The app setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetAppSetting(System.String,System.String)">
            <summary>
            Gets named application setting.
            </summary>
            <param name="name">The application setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The app setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetBoolSetting(System.String,System.Boolean)">
            <summary>
            Gets boolean setting.
            </summary>
            <param name="name">Name of the s.</param>
            <param name="defaultValue">if set to <c>true</c> this instance is default value.</param>
            <returns>
            The boolean setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetConnectionString(System.String)">
            <summary>
            Gets a named connection string.
            </summary>
            <param name="connectionStringName">Name of the connection string.</param>
            <returns>
            The connection string.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetDoubleSetting(System.String,System.Double)">
            <summary>
            Gets double setting.
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The long setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetFileSetting(System.String)">
            <summary>
            Gets named setting contains a file path.
            </summary>
            <param name="name">Name of the s.</param>
            <returns>
            The file setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetFileSetting(System.String,System.String)">
            <summary>
            Gets named setting contains a file path.
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The file setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetIntSetting(System.String,System.Int32)">
            <summary>
            Gets int setting.
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The int setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetLongSetting(System.String,System.Int64)">
            <summary>
            Gets long setting.
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The long setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetSetting(System.String)">
            <summary>
            Gets named setting.
            </summary>
            <param name="name">The setting name.</param>
            <returns>
            The setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetSetting(System.String,System.String)">
            <summary>
            Gets named setting with default.
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetSystemSection``1(System.String)">
            <summary>
            Gets a system section from web.config (i.e. a section located beneath system.web).
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sectionName">Name of the section.</param>
            <returns>
            The system section.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetTimeSpanSetting(System.String,System.String)">
            <summary>
            Gets setting contains a time span (hh:mm:ss)
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The time span setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetTimeSpanSetting(System.String,System.TimeSpan)">
            <summary>
            Gets setting contains a time span (hh:mm:ss)
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The time span setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.GetTimeSpanSetting(System.String,System.TimeSpan,System.Globalization.CultureInfo)">
            <summary>
            Gets the time span setting.
            </summary>
            <param name="name">The setting name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="cultureInfo">The culture info.</param>
            <returns>
            The time span setting.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.PipelineProfilingEnabled">
            <summary>
            Gets a value indicating that pipelines profiler is enabled.
            </summary>
            <returns></returns>
            <remarks>
            When <c>true</c>, performance of all core pipelines is measured and available at /sitecore/admin/pipelines.aspx
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.PipelineProfilingMeasureCpuTime">
            <summary>
            Gets a value indicating that pipelines profiler should measure CPU consumption of the pipelines.
            </summary>
            <returns></returns>
            <remarks>
            When <c>false</c>, CPU Time will not be measured and will not be displayed on /sitecore/admin/pipelines.aspx
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ClientPersistentLoginDuration">
            <summary>
            Gets the timeout in days for the client "remember me" feature.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultDomainName">
            <summary>
            Gets the name of the default domain.
            </summary>
            <returns></returns>
            <value>The name of the default domain.</value>
            <remarks>
            Default value: <c>default</c>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.DefaultMembershipProviderWildcard">
            <summary>
            Gets the default membership wildcard used by the providers.
            </summary>
            <returns></returns>
            <value>The membership wildcard. Default value: %</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.SaveRawUrl">
            <summary>
            Gets a value indicating whether the original request URL is passed to the login page
            (saved in <c>'URL'</c> query string parameter).
            </summary>
            <returns></returns>
            <value><c>true</c> if raw URL of original request should be passed to the login page otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ClientSessionTimeout">
            <summary>
            Gets the timeout in minutes of an
            user session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.VirtualMembershipWildcard">
            <summary>
            Gets the membership wildcard to use in high level code.
            </summary>
            <returns></returns>
            <value>The membership wildcard. Default value: *</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.AutoScheduleSmartPublish">
            <summary>
            Gets a value indicating whether to automatically schedule a smart publish when proxy definitions etc. change?
            </summary>
            <returns></returns>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.CheckSecurity">
            <summary>
            Gets a value indicating whether to check security rights when publishing.
            </summary>
            <returns></returns>
            <value><c>true</c> if security should be checked; otherwise, <c>false</c>.</value>
            <remarks>
              <para>Only read and write rights are used.</para>
              <para>Default value: false.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.CompareRevisions">
            <summary>
            Gets a value indicating whether publishing compares the revisions.
            </summary>
            <returns></returns>
            <value>
              <c>true</c> if publishing compares the revisions; otherwise, <c>false</c>.
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.LogInterval">
            <summary>
            Gets the log interval.
            </summary>
            <returns></returns>
            <value>The log interval.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.PublishDialogPollingInterval">
            <summary>
            Gets the publish dialog polling interval.
            </summary>
            <returns></returns>
            <value>The publish dialog polling interval.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.PublishEmptyItems">
            <summary>
            Gets a value indicating whether empty items (i.e. items without publishable versions) should be published.
            </summary>
            <returns></returns>
            <value><c>true</c> if empty items should be published; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.PublishingInstance">
            <summary>
            Gets the publish server instance name.
            </summary>
            <returns></returns>
            <value>The publish server.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.RequireTargetDeleteRightWhenCheckingSecurity">
            <summary>
            Gets a value indicating whether to check for delete rights on target items when publishing.
            </summary>
            <returns></returns>
            <value><c>true</c> if delete right should be checked; otherwise, <c>false</c>.</value>
            <remarks>
              <para>Only used when <see cref="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.CheckSecurity" /> is <c>true</c>.</para>
              <para>If set to <c>false</c> all publishing users will be able to publish deletions.</para>
              <para>Default value: true.</para>
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.StatusUpdateInterval">
            <summary>
            Gets the time between updating the status cache for running publishing jobs.
            </summary>
            <returns></returns>
            <value>The update interval.</value>
            <remarks>
            Default value: 2 seconds.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ThreadPriority">
            <summary>
            Gets the thread priority of publishing jobs.
            </summary>
            <returns></returns>
            <value>
            The priority. Default value is ThreadPriority.BelowNormal/&gt;
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.TimeBeforeStatusExpires">
            <summary>
            Gets the time before a cached status registration expires.
            </summary>
            <returns></returns>
            <value>The time before status expires.</value>
            <remarks>
            Default value: 2 hours.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.QueryMaxItems">
            <summary>
            Gets the max items.
            </summary>
            <returns></returns>
            <value>The max items.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ImagesAsXhtml">
            <summary>
            Gets a value indicating whether to render images as XHTML.
            </summary>
            <returns></returns>
            <value><c>true</c> if images should be rendered as XHTML; otherwise, <c>false</c>.</value>
            <remarks>
            Default value: true
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.ProcessDuplicatePlaceholders">
            <summary>
            Gets a value indicating whether to process duplicate placeholders.
            </summary>
            <returns></returns>
            <value>
              <c>true</c> if duplicate placeholders should be processed; otherwise, <c>false</c>.
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.SiteResolving">
            <summary>
            Gets a value indicating whether resolving site information while rendering item links.
            </summary>
            <returns></returns>
            <value><c>true</c> if site resolving is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.SiteResolvingMatchCurrentLanguage">
            <summary>
            Gets a value indicating whether current language is used to resolve site while rendering item links.
            </summary>
            <returns></returns>
            <value>
              <c>true</c> if feature enabled otherwise, <c>false</c>.
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.SiteResolvingMatchCurrentSite">
            <summary>
            Gets a value indicating whether current site has higher priority in site resolving while rendering item links.
            </summary>
            <returns></returns>
            <value>
              <c>true</c> if feature enabled otherwise, <c>false</c>.
              </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Abstractions.SettingsWrapper.TypesThatShouldNotBeExpanded">
            <summary>
            Gets a <see cref="T:Sitecore.Collections.Set`1" /> of the types that should not be expanded during page building.
            </summary>
            <returns></returns>
            <value>The types that should not be expanded.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.AbstractSearchIndex">
            <summary>The abstract search index.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.AbstractSearchIndex.isDisposed">
            <summary>The is disposed flag</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.AbstractSearchIndex.initialized">
            <summary>The initialized</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.#ctor(Sitecore.ContentSearch.Abstractions.Factories.IProviderContextFactory,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.AbstractSearchIndex"/> class.
            </summary>
            <param name="providerContextFactory">The factory to create context objects.</param>
            <param name="group">The group of the index.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.#ctor(Sitecore.ContentSearch.Abstractions.Factories.IProviderContextFactory,Sitecore.ContentSearch.Maintenance.IIndexPropertyStore,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.AbstractSearchIndex"/> class.
            </summary>
            <param name="providerContextFactory">The factory to create context objects.</param>
            <param name="propertyStore">Storage for index properties.</param>
            <param name="group">The group of the index.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.Summary">
            <summary>Gets the summary.</summary>
            <value>The summary.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.Schema">
            <summary>Gets the schema.</summary>
            <value>The schema.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.PropertyStore">
            <summary>Gets or sets the property storage for the index</summary>
            <value>The property store.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.Configuration">
            <summary>Gets or sets the configuration.</summary>
            <value>The configuration.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.Operations">
            <summary>Gets the index operations.</summary>
            <value>The index operations.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.EnableItemLanguageFallback">
            <summary>
            Gets a value indicating whether index will store item language fallback values.
            </summary>
            <value>
            <c>true</c> if will store item language fallback values otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.EnableFieldLanguageFallback">
            <summary>
            Gets a value indicating whether index will store field language fallback values.
            </summary>
            <value>
            <c>true</c> if index will store field language fallback values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.ShardingStrategy">
            <summary>Gets or sets the sharding strategy.</summary>
            <value>The sharding strategy.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.ShardFactory">
            <summary>Gets the shard factory.</summary>
            <value>The shard factory.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.Shards">
            <summary>Gets the shards.</summary>
            <value>The shards.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.UpdateStrategies">
            <summary>Gets or sets the update strategies .</summary>
            <value>The sharding strategy.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.ParallelForeachProxy">
            <summary>
            Gets the parallel foreach proxy.
            </summary>
            <value>
            The parallel foreach proxy.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.Group">
            <summary>
            Gets the group of the index.
            </summary>
            <value>
            The group of the index.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.IndexingState">
            <summary>Gets the state of the indexing.</summary>
            <value>The state of the indexing.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.Crawlers">
            <summary>Gets the crawlers.</summary>
            <value>The crawlers.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.IsSharded">
            <summary>Gets a value indicating whether this instance is sharded.</summary>
            <value>
            <c>true</c> if this instance is sharded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.Locator">
            <summary>
            Gets or sets the object locator abstraction for static legacy Sitecore helpers.
            </summary>
            <value>The object locator.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.FieldNameTranslator">
            <summary>
            FieldNameTranslator
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.IsInitialized">
            <summary>
            Gets a value indicating whether this instance is initialized.
            </summary>
            <value>
            <c>true</c> if this instance is initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.LogAction">
            <summary>
            Gets or sets the log action.
            </summary>
            <value>
            The log action.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.AbstractSearchIndex.ProviderContextFactory">
            <summary>
            The provider context factory
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Initialize">
            <summary>Initializes this instance.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.AddStrategy(Sitecore.ContentSearch.Maintenance.Strategies.IIndexUpdateStrategy)">
            <summary>Adds the Strategy.</summary>
            <param name="strategy">The index update strategy.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Rebuild">
            <summary>Rebuilds this index.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Rebuild(Sitecore.ContentSearch.IndexingOptions)">
            <summary>Rebuilds this index.</summary>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Refresh(Sitecore.ContentSearch.IIndexable)">
            <summary>Refreshes the index</summary>
            <param name="indexableStartingPoint">The indexable starting point.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Refresh(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Refreshes the index</summary>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Update(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>Updates a specific indexable item</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Update(Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Updates a specific indexable item</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Update(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IIndexableUniqueId})">
            <summary>Updates a set of indexable items</summary>
            <param name="indexableUniqueIds">The indexable unique ids.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Update(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IIndexableUniqueId},Sitecore.ContentSearch.IndexingOptions)">
            <summary>Updates a set of indexable items</summary>
            <param name="indexableUniqueIds">The indexable unique ids.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Delete(Sitecore.ContentSearch.IIndexableId)">
            <summary>Deletes the specified indexable id.</summary>
            <param name="indexableId">The indexable id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Delete(Sitecore.ContentSearch.IIndexableId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Deletes the specified indexable id.</summary>
            <param name="indexableId">The indexable id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Delete(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>Deletes the specified indexable unique id.</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Delete(Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Deletes the specified indexable unique id.</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Reset">
            <summary>Resets this index.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.PerformRebuild(Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>Performs the rebuild.</summary>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Refresh">
            <summary>Refreshes this instance.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.CreateUpdateContext">
            <summary>The create update context.</summary>
            <returns>The <see cref="T:Sitecore.ContentSearch.IProviderUpdateContext" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.CreateDeleteContext">
            <summary>The create delete context.</summary>
            <returns>The <see cref="T:Sitecore.ContentSearch.IProviderDeleteContext" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.CreateSearchContext(Sitecore.ContentSearch.Security.SearchSecurityOptions)">
            <summary>Creates the search context.</summary>
            <param name="options">Search security options.</param>
            <returns>The <see cref="T:Sitecore.ContentSearch.IProviderSearchContext" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Update(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IndexableInfo})">
            <summary>Updates a set of indexable items</summary>
            <param name="indexableInfo">The indexable info.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.RebuildAsync(Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>Rebuilds the async.</summary>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The index rebuilding task.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.RefreshAsync(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>Refreshes the index</summary>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The index refresh task.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.StopIndexing">
            <summary>Stops the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.PauseIndexing">
            <summary>Pauses the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.ResumeIndexing">
            <summary>Resumes the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.UpdateDependents(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexable)">
            <inheritdoc cref="T:Sitecore.ContentSearch.ISearchIndex"/>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.AddCrawler(Sitecore.ContentSearch.IProviderCrawler)">
            <summary>The add crawler.</summary>
            <param name="crawler">The crawler.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.AddCrawler(Sitecore.ContentSearch.IProviderCrawler,System.Boolean)">
            <summary>Adds the crawler.</summary>
            <param name="crawler">The crawler.</param>
            <param name="initializeCrawler">True if the crawler should be initialized.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.RemoveCrawler(Sitecore.ContentSearch.IProviderCrawler)">
            <summary>Removes the crawler.</summary>
            <param name="crawler">The crawler.</param>
            <returns>true if <paramref name="crawler"/> is successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.RemoveAllCrawlers">
            <summary>Removes all crawlers.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.GetIndexingDependencies(Sitecore.ContentSearch.IIndexable)">
            <inheritdoc cref="T:Sitecore.ContentSearch.ISearchIndex"/>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.PerformRefresh(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>Performs the refresh.</summary>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.PerformUpdate(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IIndexableUniqueId},Sitecore.ContentSearch.IndexingOptions)">
            <summary>Performs the update.</summary>
            <param name="indexableUniqueIds">The indexable unique ids.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.PerformUpdate(Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Performs the update.</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.PerformUpdate(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IndexableInfo},Sitecore.ContentSearch.IndexingOptions)">
            <summary>Performs the update.</summary>
            <param name="indexableInfo">The indexable info.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.PerformDelete(Sitecore.ContentSearch.IIndexableId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>
            Performs the delete operation.
            </summary>
            <param name="indexableId">The indexable id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.PerformDelete(Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Performs the delete.</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.ShouldStartIndexing(Sitecore.ContentSearch.IndexingOptions)">
            <summary>Determines if indexing should be started.</summary>
            <param name="indexingOptions">The indexing options.</param>
            <returns>
              <c>true</c> if indexing should be started; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.WaitUntilUnPaused">
            <summary>Waits until un paused.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.InitializeSearchIndexInitializables(System.Object[])">
            <summary>Initializes the search index initializables.</summary>
            <param name="instances">The instances.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.Dispose(System.Boolean)">
            <summary>Releases unmanaged and - optionally - managed resources.</summary>
            <param name="isDisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.VerifyNotDisposed">
            <summary>Verifies the not disposed.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.CheckInvalidConfiguration">
            <summary>
            Checks the invalid configuration.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.CreateIndexEntryOperationContext(Sitecore.ContentSearch.IndexableInfo)">
            <summary>
            Creates the index entry operation context.
            </summary>
            <param name="info">The information.</param>
            <returns>Operation context with data from indexable info.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.PerformRebuildAsync(System.Object)">
            <summary>Performs the async rebuild.</summary>
            <param name="rebuildAsyncTaskArgs">The rebuild async task args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.PerformRefreshAsync(System.Object)">
            <summary>Performs the refresh async.</summary>
            <param name="rebuildAsyncTaskArgs">The rebuild async task args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.AbstractSearchIndex.InitializeCachedInstances">
            <summary>Initializes the cached instances.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.AbstractSearchIndex.AsyncTaskArgs">
            <summary>The async task args.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.AbstractSearchIndex.AsyncTaskArgs.IndexableStartingPoint">
            <summary>The indexable starting point</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.AbstractSearchIndex.AsyncTaskArgs.IndexingOptions">
            <summary>The indexing options</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.AbstractSearchIndex.AsyncTaskArgs.CancellationToken">
            <summary>The cancellation token</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Attributes.AllowBreakingChangeAttribute">
            <summary>
            Represents a custom attribute that allows to ignore breaking changes found by APICheck.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Attributes.DefaultIndexFieldNameFormatterAttributeReader">
            <summary>
            DefaultIndexFieldNameFormatterAttributeReader
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Attributes.DefaultIndexFieldNameFormatterAttributeReader.ReadFromMember(System.Reflection.MemberInfo)">
            <summary>
            read IIndexFieldNameFormatterAttribute from Member Info
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Attributes.IIndexFieldNameFormatterAttributeReader">
            <summary>
            Reads the <see cref="T:Sitecore.ContentSearch.IIndexFieldNameFormatterAttribute"/> attribute.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Attributes.IIndexFieldNameFormatterAttributeReader.ReadFromMember(System.Reflection.MemberInfo)">
            <summary>
            Read the <see cref="T:Sitecore.ContentSearch.IIndexFieldNameFormatterAttribute"/> attribute from given <see cref="T:System.Reflection.MemberInfo"/>.
            </summary>
            <param name="member">The member that owns the attribute.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.BaseDocumentFieldsToTypeMapper">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.BaseDocumentFieldsToTypeMapper.#ctor(Sitecore.ContentSearch.AbstractFieldNameTranslator)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.BaseDocumentFieldsToTypeMapper.MapDocumentFieldsToType(System.Collections.Generic.IEnumerable{System.String},System.Type,Sitecore.ContentSearch.MappingTargetType)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.BaseDocumentFieldsToTypeMapper.MapDocumentFieldsToTypeIndexer(System.Type,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Map Document Fields To Type Indexer
            </summary>
            <param name="type">Type</param>
            <param name="documentFieldNames">List of document Field Names</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.BaseDocumentFieldsToTypeMapper.MapDocumentFieldsToTypeProperties(System.Type,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Map Document Fields To Type Properties
            </summary>
            <param name="type">Type</param>
            <param name="documentFieldNames">List of document Field Names</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.BaseDocumentFieldsToTypeMapper.GetProperties(System.Type)">
            <summary>
            Get the PropertyInfo from Type, virtual enabled so that inherited class can choose its method to map the type
            </summary>
            <param name="type">Type</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.BaseDocumentFieldsToTypeMapper.IsCollapsedProperty(System.Reflection.PropertyInfo)">
            <summary>
            Check whether the PropertyInfo is Collapsed
            </summary>
            <param name="prop">Type</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.BaseDocumentFieldsToTypeMapper.ProcessProperties(System.Type,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.List{System.String}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}@,System.String,System.String)">
            <summary>
            Process all the properties given document fields
            </summary>
            <param name="type">Type</param>
            <param name="documentFields">Document Fields</param>
            <param name="mappedProperties">Mapped Properties</param>
            <param name="rootIndexName">Root Index Name</param>
            <param name="rootPropertyName">Root Property Name</param>
        </member>
        <member name="M:Sitecore.ContentSearch.BaseDocumentFieldsToTypeMapper.ProcessProperty(System.Reflection.PropertyInfo,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.List{System.String}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}@,System.String,System.String)">
            <summary>
            Process individual property
            </summary>
            <param name="prop">PropertyInfo</param>
            <param name="documentFields">Fields of the document</param>
            <param name="mappedProperties">Mapped properties</param>
            <param name="rootIndexName">Root Index Name</param>
            <param name="rootPropertyName">Root Propertt Name</param>
        </member>
        <member name="M:Sitecore.ContentSearch.BaseDocumentFieldsToTypeMapper.ReadIndexFieldName(System.Reflection.PropertyInfo,System.String,System.String,System.String@,System.String@)">
            <summary>
            Read the Index Field Name from the property and append them with the root index name and root property name respectively
            </summary>
            <param name="prop">PropertyInfo</param>
            <param name="rootIndexName">Root Index Name</param>
            <param name="rootPropertyName">Root Property Name</param>
            <param name="indexFieldName">Output: Index field name</param>
            <param name="propertyName">Output: Property name</param>
        </member>
        <member name="M:Sitecore.ContentSearch.BaseDocumentFieldsToTypeMapper.ProcessCollapsedProperty(System.Reflection.PropertyInfo,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.List{System.String}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}@,System.String,System.String)">
            <summary>
            Process the collapsed property
            </summary>
            <param name="prop">PropertyInfo</param>
            <param name="map">map</param>
            <param name="mappedProperties">mapped Properties</param>
            <param name="indexFieldName">Output: Index field name</param>
            <param name="propertyName">Output: Property name</param>
        </member>
        <member name="M:Sitecore.ContentSearch.BaseDocumentFieldsToTypeMapper.AddMapping(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.String,System.String)">
            <summary>
            Add Mapping of propertyName to the indexFieldName in mappedProperties
            </summary>
            <param name="mappedProperties">List of mapped properties</param>
            <param name="indexFieldName">Index field name</param>
            <param name="propertyName">Property name</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Boosting.BoostingManager">
            <summary>
            The boosting manager.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Boosting.BoostingManager.Helper">
            <summary>
            The Helper.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Boosting.BoostingManager.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Boosting.BoostingManager.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Boosting.BoostingManager.ResolveFieldBoosting(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>The resolve field boosting.</summary>
            <param name="field">The field.</param>
            <returns>The <see cref="T:System.Single" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Boosting.BoostingManager.ResolveItemBoosting(Sitecore.ContentSearch.IIndexable)">
            <summary>The resolve item boosting.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Single" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Boosting.BoostingProvider">
            <summary>The <see cref="T:Sitecore.ContentSearch.Boosting.BoostingProvider" /> class.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Boosting.BoostingProvider.ResolveFieldBoosting(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>The resolve field boosting.</summary>
            <param name="field">The field.</param>
            <returns>The <see cref="T:System.Single" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Boosting.BoostingProvider.ResolveItemBoosting(Sitecore.ContentSearch.IIndexable)">
            <summary>The resolve item boosting.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Single" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Boosting.BoostingProviderCollection">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Boosting.BoostingProviderCollection"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Boosting.BoostingProviderCollection.Item(System.String)">
            <summary>Gets the <see cref="T:Sitecore.ContentSearch.Boosting.BoostingProvider"/> with the specified name.</summary>
            <param name="name">The name.</param>
            <returns>The result.</returns>
            <returns>The provider with the specified name.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Boosting.BoostMacro">
            <summary>
            The macro for boosting action
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Boosting.BoostMacro.Execute(System.Xml.Linq.XElement,System.String,Sitecore.Text.UrlString,System.String)">
            <summary>
            Executes the specified macro.
            </summary>
            <param name="element">
            The element.
            </param>
            <param name="name">
            The name of the field.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Boosting.GiveBoost`1">
            <summary>
            Defines the run class.
            </summary>
            <typeparam name="T">The rule context.</typeparam>
        </member>
        <member name="P:Sitecore.ContentSearch.Boosting.GiveBoost`1.Boost">
            <summary>
            Gets or sets the boost
            </summary>
            <value>The script id.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Boosting.GiveBoost`1.Apply(`0)">
            <summary>
            Executes the specified rule context.
            </summary>
            <param name="ruleContext">The rule context.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Boosting.PipelineBasedBoostingProvider">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Boosting.PipelineBasedBoostingProvider"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Boosting.PipelineBasedBoostingProvider.ResolveFieldBoosting(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>The resolve field boosting.</summary>
            <param name="field">The field.</param>
            <returns>The <see cref="T:System.Single" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Boosting.PipelineBasedBoostingProvider.ResolveItemBoosting(Sitecore.ContentSearch.IIndexable)">
            <summary>The resolve item boosting.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Single" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Boosting.RuleBoostingContext">
            <summary>
            The rule boosting context.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Boosting.RuleBoostingContext.#ctor(Sitecore.Data.Items.Item)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Boosting.RuleBoostingContext"/> class.
            </summary>
            <param name="item">
            The item.
            </param>
        </member>
        <member name="P:Sitecore.ContentSearch.Boosting.RuleBoostingContext.Boost">
            <summary>
            Gets or sets the boost.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.BuiltinFields">
            <summary>
            Internal fields of quick-search index.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Content">
            <summary>
            Content field. This field is searched by default.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.ID">
            <summary>
            Internal document ID. This is used by index itself to maintain documents.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Sites">
            <summary>
            Internal document sites collection. Each document can belong to one or many sites.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Database">
            <summary>
            The database the item belongs to.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Path">
            <summary>
            Indexed path of the item.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Name">
            <summary>
            Name of the item.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.DisplayName">
            <summary>
            The Display Name of the item.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Language">
            <summary>
            Language of the indexed data.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Creator">
            <summary>
            Account that created the item.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.UpdatedBy">
            <summary>
            Account that last modified the item.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.CreatedBy">
            <summary>
            Account that created the item.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Editor">
            <summary>
            Account the last modified the item.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Created">
            <summary>
            Date when the item was created.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Updated">
            <summary>
            Date when the item was last modified.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Hidden">
            <summary>
            Flag field whether the item is hidden in the UI.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Template">
            <summary>
            Item template id.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.AllTemplates">
            <summary>
            All item's templates.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.TemplateName">
            <summary>
            Item template name.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Icon">
            <summary>
            Item icon.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Links">
            <summary>
            Item's outgoing links.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Tags">
            <summary>
            Crawler-specific item tags.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Group">
            <summary>
            ID of the group that the document belongs to. I.e. item id for different versions of the same item.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.LatestVersion">
            <summary>
            Flag field: whether this version of the item is the latest version in its language.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Lock">
            <summary>
            Lock field.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Version">
            <summary>
            The version
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.IsClone">
            <summary>
            The item a clone
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.FullPath">
            <summary>
            The full path
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.IndexName">
            <summary>
            The name of the index
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.UniqueId">
            <summary>
            The unique id of an item
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.DataSource">
            <summary>
            The data source of where the indexed item originated
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Parent">
            <summary>
            The ID parent of the parent item
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Bucket">
            <summary>
            The display name of the bucket
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.SmallCreatedDate">
            <summary>
            The small created date.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.SmallUpdatedDate">
            <summary>
            The small updated date.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Url">
            <summary>
            The url.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Semantics">
            <summary>
            The semantics.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.IndexTimestamp">
            <summary>
            Time then item was indexed
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.HasChildren">
            <summary>
            Field value that represents whether or not item has children.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.Hash">
            <summary>
            A hash representation of the hash fields. Used for determining if two documents are equal or not.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.DocumentType">
            <summary>The document type</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.LockOwner">
            <summary>
            The owner that lock the item
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.BuiltinFields.ReadAccess">
            <summary>
            Accounts that have <see cref="P:Sitecore.Security.AccessControl.AccessRight.ItemRead"/> access to the item.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Commands.IContentSearchCommand">
            <summary>
            The IContentSearchCommand interface.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.CommitPolicyExecutor">
            <summary>
            The commit policy executor.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.CommitPolicyExecutor.commitPolicies">
            <summary>The policies.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.CommitPolicyExecutor.CommitPolicies">
            <summary>Gets the commit policies.</summary>
            <value>The commit policies.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.CommitPolicyExecutor.AddCommitPolicy(Sitecore.ContentSearch.ICommitPolicy)">
            <summary>Adds a commit policy.</summary>
            <param name="commitPolicy">The commit policy.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.CommitPolicyExecutor.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the specified index.</summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.CommitPolicyExecutor.IndexModified(Sitecore.ContentSearch.IProviderUpdateContext,System.Object,Sitecore.ContentSearch.IndexOperation)">
            <summary>
            Notifies the commit policy that the index have been modified and executes actions depending on the policy.
            </summary>
            <param name="context">The context.</param>
            <param name="document">The document.</param>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.CommitPolicyExecutor.Committed">
            <summary>Notifies the commit policy that commit have been performed.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.CommitPolicyExecutor.Clone">
            <summary>Creates a new object that is a copy of the current instance.</summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.AbstractComputedIndexField">
            <summary>
            The abstract computed index field.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.AbstractComputedIndexField.FieldName">
            <summary>Gets or sets the name of the field.</summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.AbstractComputedIndexField.ReturnType">
            <summary>Gets or sets the return type.</summary>
            <value>The return type.</value>
            <remarks>Used for index schema generation.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.AbstractComputedIndexField.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>Computes the field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The computed field value.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.AbstractComputedIndexField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ComputedFields.AbstractComputedIndexField"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.AbstractComputedIndexField.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ComputedFields.AbstractComputedIndexField"/> class.
            </summary>
            <param name="configNode">The configuration node.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.ActivePersonalization">
            <summary>
            The active personalization.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.ActivePersonalization.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.AllTemplates">
            <summary>
            A configurable computed field for indexing the base templates of an item.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ComputedFields.AllTemplates.DeepAttr">
            <summary>
            Config node attribute indicating whether templates should be crawled beyond iniital base templates.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ComputedFields.AllTemplates.IncludeStandardTemplateAttr">
            <summary>
            Config node attribute indicating whether the standard template (and its base templates) should be indexed.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.AllTemplates.#ctor(System.Xml.XmlNode)">
            <summary>
            Instantiates the computed field with a configuration node.
            </summary>
            <param name="configurationNode">The config node</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.AllTemplates.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Retrieves a list of the indexable item's base template ids, according to the behaviors
            configured in the configuration node provided in the constructor.
            </summary>
            <param name="indexable">The <c>SitecoreIndexableItem</c> to retrieve base templates from.</param>
            <returns>An <code>IList&lt;ID&gt;</code> of base template ids.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.CalculatedDimension">
            <summary>
            The calculated dimension.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.CalculatedDimension.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.CalculatedDimension.GetDimensions(System.Int32,System.Int32)">
            <summary>
            The get file size.
            </summary>
            <param name="width">
            The file width.
            </param>
            <param name="height">
            The file height.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="F:Sitecore.ContentSearch.ComputedFields.CompositeTextField.index">
            <summary>The index</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.CompositeTextField.MatchField">
            <summary>Gets or sets the match field.</summary>
            <value>The match field.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.CompositeTextField.MatchValue">
            <summary>Gets or sets the match value.</summary>
            <value>The match value.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.CompositeTextField.Separator">
            <summary>Gets or sets the separator.</summary>
            <value>The separator.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.CompositeTextField.ComposeMultiValueField">
            <summary>
            Gets or sets a value indicating whether to compose a multi value field.
            </summary>
            <value>
            <c>true</c> if a multi value field is composed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.CompositeTextField.JoinFields">
            <summary>Gets or sets the join fields.</summary>
            <value>The join fields.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.CompositeTextField.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the current instance.</summary>
            <param name="searchIndex">Index of the search.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.CompositeTextField.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>Computes the field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The computed field value.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.CompositeTextField.GetAttribute``1(System.String,System.Xml.XmlNode,``0)">
            <summary>Gets the attribute.</summary>
            <typeparam name="T"></typeparam>
            <param name="attributeName">Name of the attribute.</param>
            <param name="configNode">The configuration node.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.CreatedDate">
            <summary>The created date.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.CreatedDate.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>Computes the field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The computed field value.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.Culture">
            <summary>
            The culture.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.Culture.FieldName">
            <summary>
            Gets or sets the field name.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.Culture.ReturnType">
            <summary>
            Gets or sets the return type.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.Culture.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            The compute field value.
            </summary>
            <param name="itm">
            The itm.
            </param>
            <returns>
            The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.DateRangeFacet">
            <summary>
            The date range facet.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.DateRangeFacet.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.DateRangeFacet.GetDateRange(System.DateTime)">
            <summary>Gets the date range.</summary>
            <param name="dateTime">The date time.</param>
            <returns>The date range.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.DateRangeFacetUpdated">
            <summary>
            The date range facet.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.DateRangeFacetUpdated.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.DateRangeFacetUpdated.GetDateRange(System.DateTime)">
            <summary>Gets the date range.</summary>
            <param name="dateTime">The date time.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.DateRangeMonthFacet">
            <summary>
            The date range month facet.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.DateRangeMonthFacet.GetDateRange(System.DateTime)">
            <summary>Gets the date range.</summary>
            <param name="dateTime">The date time.</param>
            <returns>Year Month representation of the date</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.DateRangeWeekFacet">
            <summary>
            The date range week facet.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.DateRangeWeekFacet.GetDateRange(System.DateTime)">
            <summary>Gets the date range.</summary>
            <param name="dateTime">The date time.</param>
            <returns>Year/Week representation of the date</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.DateRangeYearFacet">
            <summary>
            The date range year facet.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.DateRangeYearFacet.GetDateRange(System.DateTime)">
            <summary>Gets the date range.</summary>
            <param name="dateTime">The date time.</param>
            <returns>Year representation of the date</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.FileSizeGrouping">
            <summary>
            The file size grouping.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.FileSizeGrouping.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.FileSizeGrouping.GetFileSize(System.Int32)">
            <summary>
            The get file size.
            </summary>
            <param name="fileSize">
            The file size.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.HasChildren">
            <summary>
            The has clones.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.HasChildren.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.HasClones">
            <summary>
            The has clones.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.HasClones.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.HasPublishingRestrictions">
            <summary>
            The has publishing restrictions.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.HasPublishingRestrictions.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.IComputedIndexField">
            <summary>
            The ComputedIndexField interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.IComputedIndexField.FieldName">
            <summary>Gets or sets the name of the field.</summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.IComputedIndexField.ReturnType">
            <summary>Gets or sets the return type.</summary>
            <value>The return type.</value>
            <remarks>Used for index schema generation.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.IComputedIndexField.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>Computes the field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The computed field value.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.IsBucket.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.IsClone">
            <summary>
            The is clone.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.IsClone.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.IsItemInWorkflow">
            <summary>
            The is item in workflow.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.IsItemInWorkflow.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.IsLocked">
            <summary>
            The is locked.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.IsLocked.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.IsPointOfInterest">
            <summary>
            Computed field for storing flag indicating if item is Point of interest
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.IsPointOfInterest.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            ComputeFieldValue for POI
            </summary>
            <param name="indexable"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.IsPointOfInterest.Verify(Sitecore.Data.Items.Item)">
            <summary>
            verify if item is of POI
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.IsTemplate">
            <summary>
            The is template.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.IsTemplate.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.ItemLinks">
            <summary>
            The item links.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.ItemLinks.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.ItemReferences">
            <summary>
            The item links.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.ItemReferences.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor">
            <summary>
            The media item content extractor. Inherit from this class to customize which content extractor is used per MIME type / file extension.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.mimeTypeComputedFields">
            <summary>
            The computed fields by mime type.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.extensionComputedFields">
            <summary>
            The computed fields by extension.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.fallbackComputedIndexFields">
            <summary>
            The fallback computed index fields
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.extensionIncludes">
            <summary>
            The extension includes
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.extensionExcludes">
            <summary>
            The extension excludes
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.mimeTypeIncludes">
            <summary>
            The MIME type includes
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.mimeTypeExcludes">
            <summary>
            The MIME type excludes
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor" /> class.
            </summary>
            <param name="configurationNode">The configuration node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.Transform``1(System.Collections.IEnumerable)">
            <summary>
            Shims the specified enumerable.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumerable">The enumerable.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>Computes the field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The computed field value.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.AddMediaItemContentExtractorByMimeType(System.String,Sitecore.ContentSearch.ComputedFields.IComputedIndexField)">
            <summary>Adds the media item content extractor by MIME type.</summary>
            <param name="mimeType">The MIME type.</param>
            <param name="computedField">The computed field.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.AddMediaItemContentExtractorByFileExtension(System.String,Sitecore.ContentSearch.ComputedFields.IComputedIndexField)">
            <summary>Adds the media item content extractor by file extension.</summary>
            <param name="extension">The extension.</param>
            <param name="computedField">The computed field.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.AddFallbackMediaItemContentExtractor(Sitecore.ContentSearch.ComputedFields.IComputedIndexField)">
            <summary>Adds the fallback media item content extractor.</summary>
            <param name="computedField">The computed field.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.Initialize">
            <summary>Initializes this instance.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor.Initialize(System.Xml.XmlNode)">
            <summary>
            Initializes the computed field from configuration node.
            </summary>
            <param name="configurationNode">The configuration node.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.MediaItemHtmlTextExtractor">
            <summary>
            The media item html text extractor.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.MediaItemHtmlTextExtractor.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.MediaItemIFilterTextExtractor">
            <summary>
            The Media Item IFilter Text Extractor.
            </summary>
            <remarks>Uses the <a href="http://msdn.microsoft.com/en-us/library/ms691105(v=vs.85).aspx">IFilter</a> interface to extract text from documents.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.MediaItemIFilterTextExtractor.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.MediaItemIFilterTextExtractor.CopyStream(System.IO.Stream,System.IO.Stream)">
            <summary>Copies the stream.</summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.ParsedCreatedBy">
            <summary>
            The parsed created by.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.ParsedCreatedBy.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.ParsedLanguage">
            <summary>
            The parsed language.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.ParsedLanguage.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.ParsedLockOwner.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>
            The name of the field.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.ParsedLockOwner.ReturnType">
            <summary>
            Gets or sets the return type.
            </summary>
            <value>
            The return type.
            </value>
            <remarks>
            Used for index schema generation.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.ParsedLockOwner.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computes the field value.
            </summary>
            <param name="indexable">The indexable.</param>
            <returns>
            The computed field value.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.ParsedUpdatedBy">
            <summary>
            The parsed updated by.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.ParsedUpdatedBy.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.ReadAccess">
            <summary>
            Represents <see cref="P:Sitecore.Security.AccessControl.AccessRight.ItemRead"/> from Security field in content items.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.ReadAccess.#ctor(System.Xml.XmlNode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.ReadAccess.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.ReadAccess.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.Site">
            <summary>
            The site.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.Site.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.UpdatedDate">
            <summary>The updated date.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.UpdatedDate.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>Computes the field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The computed field value.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ComputedFields.UrlLink">
            <summary>
            The url link.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.UrlLink.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ComputedFields.UrlLink"/> class.
            </summary>
            <param name="configuration">The configuration node.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.ComputedFields.UrlLink.SiteName">
            <summary>
            Returns name of the configured site. 
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.UrlLink.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.UrlLink.BuildContentItemLink(Sitecore.Data.Items.Item,Sitecore.Sites.SiteContext)">
            <summary>
            Constructs a link to the content item.
            </summary>
            <param name="item">The content item for which the link is built.</param>
            <param name="siteContext"><see cref="T:Sitecore.Sites.SiteContext"/> of the configured site.</param>
            <returns>A link to the item.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ComputedFields.UrlLink.BuildMediaItemLink(Sitecore.Data.Items.Item,Sitecore.Sites.SiteContext)">
            <summary>
            Constructs a link to the media item.
            </summary>
            <param name="item">The media item for which the link is built.</param>
            <param name="siteContext"><see cref="T:Sitecore.Sites.SiteContext"/> of the configured site.</param>
            <returns>A link to the item.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentSearchConfiguration">
            <summary>
            The provider index search configuration.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentSearchConfiguration.indexes">
            <summary>The indexes.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentSearchConfiguration.Indexes">
            <summary>Gets or sets the indexes.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentSearchConfiguration.InitializeIndexWithDefaultConfiguration(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Initializes the index with configuration from DefaultIndexConfigurationPath if it is not set explicitly.
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentSearchManager">
            <summary>
            The search manager.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentSearchManager.SyncRoot">
            <summary>
            The sync root
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentSearchManager.ProviderHelper">
            <summary>
            The provider helper.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentSearchManager.configuration">
            <summary>
            The configuration.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentSearchManager.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentSearchManager.SearchConfiguration">
            <summary>
            Gets the search configuration.
            </summary>
            <value>
            The search configuration.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentSearchManager.Indexes">
            <summary>
            Gets the collection of indexes.
            </summary>
            <value>The collection of indexes.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentSearchManager.GetContextIndexName(Sitecore.ContentSearch.IIndexable)">
            <summary>Given an Item, this will return the name of the Index that it will use to search on</summary>
            <returns>The Name of the Index</returns>
            <param name="indexable">The indexable item which will be used to determine (based off the item path) which index will be used for the search.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentSearchManager.GetIndex(System.String)">
            <summary>Gets the index.</summary>
            <param name="name">The name.</param>
            <returns>The <see cref="T:Sitecore.ContentSearch.ISearchIndex" />.</returns>
            <exception cref="T:System.ArgumentException">The index with the specified <paramref name="name"/> could not be found.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentSearchManager.GetIndex(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Gets the index.
            </summary>
            <param name="indexable">The indexable item.</param>
            <example>ContentSearchManager.GetIndex((SitecoreIndexableItem)item)</example>
            <returns>The <see cref="T:Sitecore.ContentSearch.ISearchIndex"/>.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentSearchManager.CreateSearchContext(Sitecore.ContentSearch.IIndexable)">
            <summary>Creates the search context.</summary>
            <param name="indexable">The indexable.</param>
            <example>ContentSearchManager.CreateSearchContext((SitecoreIndexableItem)item)</example>
            <returns>Search context.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentSearchManager.Initialize">
            <summary>Initializes <see cref="T:Sitecore.ContentSearch.ContentSearchManager"/>.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentSearchManager.ResetConfiguration">
            <summary>
            Resets the Content Search configuration.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ContextOperationStatistics">
            <summary>
            The context operation statistics.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContextOperationStatistics.addCount">
            <summary>The add count</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContextOperationStatistics.updateCount">
            <summary>The update count</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContextOperationStatistics.deleteUniqueCount">
            <summary>The delete unique count</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContextOperationStatistics.deleteGroupCount">
            <summary>The delete group count</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContextOperationStatistics.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContextOperationStatistics"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContextOperationStatistics.#ctor(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContextOperationStatistics"/> class.
            </summary>
            <param name="initialAddCount">The initial add count.</param>
            <param name="initialUpdateCount">The initial update count.</param>
            <param name="initialDeleteUniqueCount">The initial delete unique count.</param>
            <param name="initialDeleteGroupCount">The initial delete group count.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContextOperationStatistics.IncrementAddCounter">
            <summary>Increments the add counter.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContextOperationStatistics.DecrementAddCounter">
            <summary>Decrements the add counter.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContextOperationStatistics.IncrementUpdateCounter">
            <summary>Increments the update counter.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContextOperationStatistics.DecrementUpdateCounter">
            <summary>Decrements the update counter.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContextOperationStatistics.IncrementDeleteUniqueCounter">
            <summary>Increments the delete unique counter.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContextOperationStatistics.DecrementDeleteUniqueCounter">
            <summary>Decrements the delete unique counter.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContextOperationStatistics.IncrementDeleteGroupCounter">
            <summary>Increments the delete group counter.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContextOperationStatistics.DecrementDeleteGroupCounter">
            <summary>Decrements the delete group counter.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ContextOperationStatistics.IsEmpty">
            <summary>Gets a value indicating whether this instance is empty.</summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ContextOperationStatistics.AddCount">
            <summary>Gets the add count.</summary>
            <value>The add count.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ContextOperationStatistics.UpdateCount">
            <summary>Gets the update count.</summary>
            <value>The update count.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ContextOperationStatistics.DeleteUniqueCount">
            <summary>Gets the delete unique count.</summary>
            <value>The delete unique count.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ContextOperationStatistics.DeleteGroupCount">
            <summary>Gets the delete group count.</summary>
            <value>The delete group count.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.ContextOperationStatistics.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.AbstractTypeConverter">
            <summary>
            The abstract type converter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Converters.AbstractTypeConverter.searchIndex">
            <summary>The search index</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.AbstractTypeConverter.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the current instance.</summary>
            <param name="searchIndex">Index of the search.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.AbstractTypeConverter.GetFieldFormat(Sitecore.ContentSearch.Converters.IndexFieldConverterContext)">
            <summary>Gets the field format.</summary>
            <param name="context">The context.</param>
            <returns>The formatting string</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.AbstractTypeConverter.GetFieldFormat(System.String,System.Type)">
            <summary>Gets the field format.</summary>
            <param name="fieldName">Name of the field.</param>
            <param name="type">The type.</param>
            <returns>The formatting string</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.IIndexFieldStorageValueFormatter">
            <summary>
            The IndexFieldStorageValueFormatter interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IIndexFieldStorageValueFormatter.AddConverter(System.Type,System.ComponentModel.TypeConverter)">
            <summary>
            The add converter.
            </summary>
            <param name="sourceType">The source type.</param>
            <param name="converter">The converter.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.IndexFieldConverterContext">
            <summary>
            The index field converter context.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldConverterContext.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Converters.IndexFieldConverterContext"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Converters.IndexFieldConverterContext.Container">
            <summary>
            Gets the container representing this <see cref="T:System.ComponentModel.TypeDescriptor" /> request.
            </summary>
            <returns>An <see cref="T:System.ComponentModel.IContainer" /> with the set of objects for this <see cref="T:System.ComponentModel.TypeDescriptor" />; otherwise, null if there is no container or if the <see cref="T:System.ComponentModel.TypeDescriptor" /> does not use outside objects.</returns>
        </member>
        <member name="P:Sitecore.ContentSearch.Converters.IndexFieldConverterContext.Instance">
            <summary>
            Gets the object that is connected with this type descriptor request.
            </summary>
            <returns>The object that invokes the method on the <see cref="T:System.ComponentModel.TypeDescriptor" />; otherwise, null if there is no object responsible for the call.</returns>
        </member>
        <member name="P:Sitecore.ContentSearch.Converters.IndexFieldConverterContext.PropertyDescriptor">
            <summary>
            Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is associated with the given context item.
            </summary>
            <returns>The <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the given context item; otherwise, null if there is no <see cref="T:System.ComponentModel.PropertyDescriptor" /> responsible for the call.</returns>
        </member>
        <member name="P:Sitecore.ContentSearch.Converters.IndexFieldConverterContext.FieldName">
            <summary>Gets the name of the field.</summary>
            <value>The name of the field.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldConverterContext.GetService(System.Type)">
            <summary>Gets the service object of the specified type.</summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>
            A service object of type <paramref name="serviceType" />.-or- null if there is no service object of type <paramref name="serviceType" />.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldConverterContext.OnComponentChanging">
            <summary>
            Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.
            </summary>
            <returns>true if this object can be changed; otherwise, false.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldConverterContext.OnComponentChanged">
            <summary>
            Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.IndexFieldCoordinateValueConverter">
            <summary>
            Converter to convert <see cref="T:Sitecore.ContentSearch.Data.Coordinate"/>
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldCoordinateValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Override CanConvertFrom 
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldCoordinateValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Override CanConvertTo
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldCoordinateValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Override ConvertFrom
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldCoordinateValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Override ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.IndexFieldDateTimeOffsetValueConverter">
            <summary>
            The index field date time offset value converter.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.IndexFieldEnumerableConverter">
            <summary>
            The index field enumerable converter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Converters.IndexFieldEnumerableConverter.indexFieldStorageValueFormatter">
            <summary>
            The index field storage value formatter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Converters.IndexFieldEnumerableConverter.canConvertCache">
            <summary>
            The CanConvert cache.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Converters.IndexFieldEnumerableConverter.cache">
            <summary>
            The cache.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldEnumerableConverter.#ctor(Sitecore.ContentSearch.Converters.IndexFieldStorageValueFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Converters.IndexFieldEnumerableConverter" /> class.
            </summary>
            <param name="indexFieldStorageValueFormatter">The index field storage value formatter.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldEnumerableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>The convert to.</summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value.</param>
            <param name="destinationType">The destination type.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
            <exception cref="T:System.InvalidOperationException">Unsupported destination type.</exception>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.IndexFieldGuidValueConverter">
            <summary>
            The index field guid value converter.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.IndexFieldIDValueConverter">
            <summary>
            The index field id value converter.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.IndexFieldItemUriValueConverter">
            <summary>
            Defines the IndexFieldItemUriValueConverter type.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Converters.IndexFieldItemUriValueConverter.AddIndexNameToValue">
            <summary>
            Gets or sets a value indicating whether index name should be added to converted value.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Converters.IndexFieldItemUriValueConverter.IndexName">
            <summary>
            Gets or sets the name of the index.
            </summary>
            <value>
            The name of the index.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldItemUriValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldItemUriValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldItemUriValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldItemUriValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.IndexFieldShortIDValueConverter">
            <summary>
            The index field short id value converter.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.IndexFieldSitecoreItemUniqueIDValueConverter">
            <summary>
            Defines the IndexFieldSitecoreItemUniqueIDValueConverter type.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldSitecoreItemUniqueIDValueConverter.#ctor(Sitecore.ContentSearch.Converters.IndexFieldItemUriValueConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Converters.IndexFieldSitecoreItemUniqueIDValueConverter"/> class.
            </summary>
            <param name="indexFieldItemUriValueConverter">
            The index field item uri value converter.
            </param>
        </member>
        <member name="P:Sitecore.ContentSearch.Converters.IndexFieldSitecoreItemUniqueIDValueConverter.ItemUriConverter">
            <summary>
            Gets or sets the item URI converter.
            </summary>
            <value>
            The item URI converter.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldSitecoreItemUniqueIDValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldSitecoreItemUniqueIDValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldSitecoreItemUniqueIDValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldSitecoreItemUniqueIDValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.IndexFieldStorageValueFormatter">
            <summary>
            The index field storage value formatter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Converters.IndexFieldStorageValueFormatter.converters">
            <summary>
            The converters.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Converters.IndexFieldStorageValueFormatter.enumerableConverter">
            <summary>
            The enumerable converter
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Converters.IndexFieldStorageValueFormatter.Converters">
            <summary>
            Gets the converters.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Converters.IndexFieldStorageValueFormatter.EnumerableConverter">
            <summary>Gets or sets the enumerable converter.</summary>
            <value>The enumerable converter.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldStorageValueFormatter.FormatValueForIndexStorage(System.Object,System.String)">
            <summary>The format value for index storage.</summary>
            <param name="value">The value.</param>
            <param name="fieldName">Name of the field.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldStorageValueFormatter.ReadFromIndexStorage(System.Object,System.String,System.Type)">
            <summary>Reads from index storage.</summary>
            <param name="indexValue">The index value.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="destinationType">Type of the destination.</param>
            <returns>Formatted value from index storage.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="destinationType" /> is null.</exception>
            <exception cref="T:System.InvalidCastException"><paramref name="indexValue" /> could not be cast to <paramref name="destinationType" />.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldStorageValueFormatter.AddConverter(System.Type,System.ComponentModel.TypeConverter)">
            <summary>
            The add converter.
            </summary>
            <param name="sourceType">The source type.</param>
            <param name="converter">The converter.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.IndexFieldUtcDateTimeValueConverter">
            <summary>
            IndexFieldUTCDateTimeValueConverter
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldUtcDateTimeValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from.
            </summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value.</param>
            <returns>Returns date/time in UTC.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.IndexFieldUtcDateTimeValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts to.
            </summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value.</param>
            <param name="destinationType">Type of the destination.</param>
            <returns>Returns date converted to the local date/time that is specified on the server.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.ITypeConverters">
            <summary>
            The TypeConverters interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.ITypeConverters.GetTypeConverter(System.Type)">
            <summary>
            The get type converter.
            </summary>
            <param name="sourceType">The source Type.</param>
            <returns>The <see cref="T:System.ComponentModel.TypeConverter"/>.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.SystemTypeConverter">
            <summary>
            The system type converter.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.SystemTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.SystemTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.SystemTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.SystemTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Converters.TypeConverters">
            <summary>
            The type converters.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Converters.TypeConverters.converters">
            <summary>The converters.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Converters.TypeConverters.convertersByBaseType">
            <summary>The converters by base type</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.TypeConverters.GetTypeConverter(System.Type)">
            <summary>
            The get type converter.
            </summary>
            <param name="type">The type.</param>
            <returns>The <see cref="T:System.ComponentModel.TypeConverter"/>.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.TypeConverters.AddConverter(System.Type,System.ComponentModel.TypeConverter)">
            <summary>
            The add converter.
            </summary>
            <param name="sourceType">The source type.</param>
            <param name="converter">The converter.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Converters.TypeConverters.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the current instance.</summary>
            <param name="searchIndex">Index of the search.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Crawler`1">
            <summary>
            The crawler.
            </summary>
            <typeparam name="T">The of the indexable.</typeparam>
        </member>
        <member name="F:Sitecore.ContentSearch.Crawler`1.LogIndexUpdateCountEveryNTimes">
            <summary>The log index update count every n times</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Crawler`1.index">
            <summary>
            The index.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Crawler`1.state">
            <summary>The state</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Crawler`1.stopCrawlingOnError">
            <summary>
            Indicates whether crawling  process should be stopped on error.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Crawler`1.indexingGuard">
            <summary>
            The circular references indexing guard
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Crawler`1" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.#ctor(Sitecore.ContentSearch.IIndexOperations)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Crawler`1" /> class.
            </summary>
            <param name="indexOperations">The index operations.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Crawler`1.StopOnError">
            <summary>
            Gets or sets a value indicating whether crawling should be stopped on error.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Crawler`1.DocumentOptions">
            <summary>
            Gets the document options.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Crawler`1.Index">
            <summary>Gets the index.</summary>
            <value>The index.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Crawler`1.ParallelForeachProxy">
            <summary>
            Gets the parallel foreach proxy.
            </summary>
            <value>
            The parallel foreach proxy.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Crawler`1.Operations">
            <summary>
            Gets or sets the operations.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the specified index.</summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.HasItemsToIndex">
            <summary>Determines whether the crawler has items to index.</summary>
            <returns>
              <c>true</c> if the crawler has items to index, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.RebuildFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Rebuilds from root.</summary>
            <param name="context">The context.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.RebuildFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>The rebuild from root.</summary>
            <param name="context">The context.</param>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.RefreshFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Refreshes from root.</summary>
            <param name="context">The context.</param>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.RefreshFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>The refresh from root.</summary>
            <param name="context">The context.</param>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:System.ArgumentException">indexableStartingPoint</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.RefreshFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,`0,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Refreshes from root.</summary>
            <param name="context">The context.</param>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.RefreshFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,`0,Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>Refreshes from root.</summary>
            <param name="context">The context.</param>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.Update(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Updates specific indexable</summary>
            <param name="context">update context</param>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.Update(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexEntryOperationContext,Sitecore.ContentSearch.IndexingOptions)">
            <summary>
            Updates specific item.
            </summary>
            <param name="context">The context.</param>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="operationContext">The operation context.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.Delete(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexableId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Deletes the indexable.</summary>
            <param name="context">The context.</param>
            <param name="indexableId">The indexable id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.Delete(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Deletes the indexable.</summary>
            <param name="context">The context.</param>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.StopIndexing">
            <summary>Stops the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.PauseIndexing">
            <summary>Pauses the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.ResumeIndexing">
            <summary>Resumes the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.GetIndexableAndCheckDeletes(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>Gets the indexable and check deletes.</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <returns>The indexable if it has not been deleted.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.GetIndexable(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>Gets the indexable.</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <returns>The indexable.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.GroupShouldBeDeleted(Sitecore.ContentSearch.IIndexableId)">
            <summary>
            Determines if the group should be deleted.
            </summary>
            <param name="indexableId">The indexable id.</param>
            <returns>true if the whole group should be deleted; otherwise false</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.IndexUpdateNeedDelete(`0)">
            <summary>Determines if index updates need delete to call delete.</summary>
            <param name="indexable">The indexable.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.GetIndexablesToUpdateOnDelete(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>Gets the indexables to update on delete.</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <returns>The indexables to update.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.DoAdd(Sitecore.ContentSearch.IProviderUpdateContext,`0)">
            <summary>Adds the indexable.</summary>
            <param name="context">The context.</param>
            <param name="indexable">The indexable.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.DoUpdate(Sitecore.ContentSearch.IProviderUpdateContext,`0)">
            <summary>Updates the indexable.</summary>
            <param name="context">The context.</param>
            <param name="indexable">The indexable.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.DoUpdate(Sitecore.ContentSearch.IProviderUpdateContext,`0,Sitecore.ContentSearch.IndexEntryOperationContext)">
            <summary>
            Executes the update event.
            </summary>
            <param name="context">The context.</param>
            <param name="indexable">The indexable.</param>
            <param name="operationContext">The operation context.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.IsExcludedFromIndex(`0,System.Boolean)">
            <summary>
            Determines whether the specified <paramref name="indexable"/> is excluded from the index.
            </summary>
            <param name="indexable">The indexable.</param>
            <param name="checkLocation">if set to <c>true</c> check the indexable location.</param>
            <returns>
              <c>true</c> if the specified <paramref name="indexable"/> is excluded from the index; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.IsExcludedFromIndex(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>
            Determines whether the specified <paramref name="indexableUniqueId" /> is excluded from the index.
            </summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <returns>
              <c>true</c> if the specified <paramref name="indexableUniqueId" /> is excluded from the index; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.IsExcludedFromIndex(Sitecore.ContentSearch.IIndexableUniqueId,System.Boolean)">
            <summary>
            Determines whether [is excluded from index] [the specified indexable unique id].
            </summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="checkLocation">if set to <c>true</c> [check location].</param>
            <returns>
              <c>true</c> if [is excluded from index] [the specified indexable unique id]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.OnStopIndexing">
            <summary>Called when indexing should be stopped.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.OnPauseIndexing">
            <summary>Called when indexing should be paused.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.OnResumeIndexing">
            <summary>Called when indexing should be resumed.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.ShouldStartIndexing(Sitecore.ContentSearch.IndexingOptions)">
            <summary>Determines if indexing should be started.</summary>
            <param name="indexingOptions">The indexing options.</param>
            <returns>
              <c>true</c> if indexing should be started; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Crawler`1.WaitUntilUnPaused">
            <summary>Waits until un paused.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.CultureExecutionContext">
            <summary>
            The culture execution context.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.CultureExecutionContext.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.CultureExecutionContext" /> class.
            </summary>
            <param name="culture">The culture.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.CultureExecutionContext.#ctor(System.Globalization.CultureInfo,Sitecore.ContentSearch.CulturePredicateType)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.CultureExecutionContext" /> class.
            </summary>
            <param name="culture">The culture.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.CultureExecutionContext.Culture">
            <summary>Gets or sets the culture.</summary>
            <value>The culture.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.CultureExecutionContext.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.CultureExecutionContext.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Cultures">
            <summary>
            The cultures.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.afrikaans">
            <summary>
            The afrikaans.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.albania">
            <summary>
            The albania.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.algeria">
            <summary>
            The algeria.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.arabic">
            <summary>
            The arabic.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.armenia">
            <summary>
            The armenia.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.australia">
            <summary>
            The australia.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.austria">
            <summary>
            The austria.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.azeri">
            <summary>
            The azeri.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.bahrain">
            <summary>
            The bahrain.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.basque">
            <summary>
            The basque.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.belarusian">
            <summary>
            The belarusian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.belgium">
            <summary>
            The belgium.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.belize">
            <summary>
            The belize.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.bulgarian">
            <summary>
            The bulgarian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.canada">
            <summary>
            The canada.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.caribbean">
            <summary>
            The caribbean.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.catalan">
            <summary>
            The catalan.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.china">
            <summary>
            The china.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.chinaSimplified">
            <summary>
            The china simplified.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.chinaTraditional">
            <summary>
            The china traditional.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.croatian">
            <summary>
            The croatian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.cyrillic">
            <summary>
            The cyrillic.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.czech">
            <summary>
            The czech.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.danish">
            <summary>
            The danish.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.dhivehi">
            <summary>
            The dhivehi.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.dutch">
            <summary>
            The dutch.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.egypt">
            <summary>
            The egypt.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.englishSouthAfrica">
            <summary>
            The english south africa.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.estonia">
            <summary>
            The estonia.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.faroese">
            <summary>
            The faroese.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.farsi">
            <summary>
            The farsi.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.finnish">
            <summary>
            The finnish.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.french">
            <summary>
            The french.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.frenchBelgium">
            <summary>
            The french belgium.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.frenchCanada">
            <summary>
            The french canada.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.frenchSwitzerland">
            <summary>
            The french switzerland.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures._frenchLuxembourg">
            <summary>
            The french luxembourg.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.frenchMonaco">
            <summary>
            The french monaco.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.galician">
            <summary>
            The galician.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.georgian">
            <summary>
            The georgian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.german">
            <summary>
            The german.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.germanSwitzerland">
            <summary>
            The german switzerland.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.greek">
            <summary>
            The greek.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.hebrew">
            <summary>
            The hebrew.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.hindi">
            <summary>
            The hindi.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.hongKong">
            <summary>
            The hong kong.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.hungarian">
            <summary>
            The hungarian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.icelandic">
            <summary>
            The icelandic.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.india">
            <summary>
            The india.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.indonesia">
            <summary>
            The indonesia.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.iran">
            <summary>
            The iran.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.iraq">
            <summary>
            The iraq.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.ireland">
            <summary>
            The ireland.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.israel">
            <summary>
            The israel.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.italian">
            <summary>
            The italian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.italianSwitzerland">
            <summary>
            The italian switzerland.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.jamaica">
            <summary>
            The jamaica.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.japanese">
            <summary>
            The japanese.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.jordan">
            <summary>
            The jordan.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.kannada">
            <summary>
            The kannada.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.kazakh">
            <summary>
            The kazakh.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.konkani">
            <summary>
            The konkani.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.korean">
            <summary>
            The korean.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.kuwait">
            <summary>
            The kuwait.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.kyrgyz">
            <summary>
            The kyrgyz.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.latin">
            <summary>
            The latin.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.latvian">
            <summary>
            The latvian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.lebanon">
            <summary>
            The lebanon.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.liechtenstein">
            <summary>
            The liechtenstein.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.libya">
            <summary>
            The libya.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.lithuanian">
            <summary>
            The lithuanian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.luxembourg">
            <summary>
            The luxembourg.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.macau">
            <summary>
            The macau.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.maldives">
            <summary>
            The maldives.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.morocco">
            <summary>
            The morocco.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.netherlands">
            <summary>
            The netherlands.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.newZealand">
            <summary>
            The new zealand.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.norwegian">
            <summary>
            The norwegian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.oman">
            <summary>
            The oman.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.philippines">
            <summary>
            The philippines.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.pirate">
            <summary>
            The pirate.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.polish">
            <summary>
            The polish.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.portuguese">
            <summary>
            The portuguese.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.qatar">
            <summary>
            The qatar.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.romanian">
            <summary>
            The romanian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.russian">
            <summary>
            The russian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.saudiArabia">
            <summary>
            The saudi arabia.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.singapore">
            <summary>
            The singapore.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.southAfrica">
            <summary>
            The south africa.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.spanish">
            <summary>
            The spanish.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.swedish">
            <summary>
            The swedish.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.syria">
            <summary>
            The syria.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.taiwan">
            <summary>
            The taiwan.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.thai">
            <summary>
            The thai.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.trashTalk">
            <summary>
            The trash talk.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.trinidadAndTobago">
            <summary>
            The trinidad and tobago.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.tunisia">
            <summary>
            The tunisia.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.turkish">
            <summary>
            The turkish.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.ukrainian">
            <summary>
            The ukrainian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.unitedArabEmirates">
            <summary>
            The united arab emirates.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.unitedKingdom">
            <summary>
            The united kingdom.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.unitedStates">
            <summary>
            The united states.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.vietnamese">
            <summary>
            The vietnamese.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.yeOldEnglish">
            <summary>
            The ye old english.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.yemen">
            <summary>
            The yemen.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.zimbabwe">
            <summary>
            The zimbabwe.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Cultures.klingon">
            <summary>The klingon</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Afrikaans">
            <summary>
            Gets the afrikaans.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Albania">
            <summary>
            Gets the albania.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Algeria">
            <summary>
            Gets the algeria.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Arabic">
            <summary>
            Gets the arabic.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Armenia">
            <summary>
            Gets the armenia.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Australia">
            <summary>
            Gets the australia.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Austria">
            <summary>
            Gets the austria.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Azeri">
            <summary>
            Gets the azeri.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Bahrain">
            <summary>
            Gets the bahrain.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Basque">
            <summary>
            Gets the basque.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Belarusian">
            <summary>
            Gets the belarusian.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Belgium">
            <summary>
            Gets the belgium.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Belize">
            <summary>
            Gets the belize.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Bulgarian">
            <summary>
            Gets the bulgarian.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Canada">
            <summary>
            Gets the canada.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Caribbean">
            <summary>
            Gets the caribbean.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Catalan">
            <summary>
            Gets the catalan.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.China">
            <summary>
            Gets the china.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.ChinaSimplified">
            <summary>
            Gets the china simplified.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.ChinaTraditional">
            <summary>
            Gets the china traditional.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Croatian">
            <summary>Gets the croatian.</summary>
            <value>The croatian.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Cyrillic">
            <summary>
            Gets the cyrillic.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Czech">
            <summary>
            Gets the czech.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Danish">
            <summary>
            Gets the danish.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Dhivehi">
            <summary>Gets the dhivehi.</summary>
            <value>The dhivehi.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Dutch">
            <summary>
            Gets the dutch.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Egypt">
            <summary>
            Gets the egypt.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.EnglishSouthAfrica">
            <summary>Gets the english south africa.</summary>
            <value>The english south africa.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Estonia">
            <summary>
            Gets the estonia.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Faroese">
            <summary>
            Gets the faroese.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Farsi">
            <summary>
            Gets the farsi.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Finnish">
            <summary>
            Gets the finnish.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.French">
            <summary>
            Gets the french.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.FrenchBelgium">
            <summary>
            Gets the french belgium.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.FrenchCanada">
            <summary>
            Gets the french canada.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.FrenchMonaco">
            <summary>
            Gets the french monaco.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.FrenchSwitzerland">
            <summary>
            Gets the french switzerland.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Galician">
            <summary>
            Gets the galician.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Georgian">
            <summary>
            Gets the georgian.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.German">
            <summary>
            Gets the german.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.GermanSwitzerland">
            <summary>
            Gets the german switzerland.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Greek">
            <summary>
            Gets the greek.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Hebrew">
            <summary>
            Gets the hebrew.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Hindi">
            <summary>
            Gets the hindi.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.HongKong">
            <summary>
            Gets the hong kong.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Hungarian">
            <summary>
            Gets the hungarian.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Icelandic">
            <summary>
            Gets the icelandic.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.India">
            <summary>
            Gets the india.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Indonesia">
            <summary>
            Gets the indonesia.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Iran">
            <summary>
            Gets the iran.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Iraq">
            <summary>
            Gets the iraq.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Ireland">
            <summary>
            Gets the ireland.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Israel">
            <summary>
            Gets the israel.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Italian">
            <summary>
            Gets the italian.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.ItalianSwitzerland">
            <summary>
            Gets the italian switzerland.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Jamaica">
            <summary>Gets the jamaica.</summary>
            <value>The jamaica.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Japanese">
            <summary>
            Gets the japanese.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Jordan">
            <summary>
            Gets the jordan.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Kannada">
            <summary>
            Gets the kannada.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Kazakh">
            <summary>
            Gets the kazakh.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Konkani">
            <summary>
            Gets the konkani.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Korean">
            <summary>
            Gets the korean.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Kuwait">
            <summary>
            Gets the kuwait.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Kyrgyz">
            <summary>
            Gets the kyrgyz.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Latin">
            <summary>
            Gets the latin.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Latvian">
            <summary>
            Gets the latvian.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Lebanon">
            <summary>
            Gets the lebanon.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Liechtenstein">
            <summary>Gets the liechtenstein.</summary>
            <value>The liechtenstein.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Libya">
            <summary>
            Gets the libya.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Lithuanian">
            <summary>
            Gets the lithuanian.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Luxembourg">
            <summary>
            Gets the luxembourg.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Macau">
            <summary>
            Gets the macau.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Maldives">
            <summary>
            Gets the maldives.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Morocco">
            <summary>
            Gets the morocco.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Netherlands">
            <summary>
            Gets the netherlands.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.NewZealand">
            <summary>
            Gets the new zealand.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Norwegian">
            <summary>
            Gets the norwegian.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Oman">
            <summary>
            Gets the oman.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Philippines">
            <summary>
            Gets the philippines.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Pirate">
            <summary>
            Gets the pirate booty
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Polish">
            <summary>
            Gets the polish.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Portuguese">
            <summary>
            Gets the portuguese.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Qatar">
            <summary>
            Gets the qatar.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Romanian">
            <summary>
            Gets the romanian.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Russian">
            <summary>
            Gets the russian.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.SaudiArabia">
            <summary>
            Gets the saudi arabia.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Singapore">
            <summary>
            Gets the singapore.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.SouthAfrica">
            <summary>
            Gets the south africa.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Spanish">
            <summary>
            Gets the spanish.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Swedish">
            <summary>
            Gets the swedish.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Syria">
            <summary>
            Gets the syria.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Taiwan">
            <summary>
            Gets the taiwan.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Thai">
            <summary>
            Gets the thai.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.TrashTalk">
            <summary>
            Gets the trash talk.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.TrinidadAndTobago">
            <summary>
            Gets the trinidad and tobago.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Tunisia">
            <summary>
            Gets the tunisia.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Turkish">
            <summary>
            Gets the turkish.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Ukrainian">
            <summary>Gets the ukrainian.</summary>
            <value>The ukrainian.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.UnitedArabEmirates">
            <summary>
            Gets the united arab emirates.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.UnitedKingdom">
            <summary>
            Gets the united kingdom.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.UnitedStates">
            <summary>
            Gets the united states.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Vietnamese">
            <summary>
            Gets the vietnamese.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.YeOldEnglish">
            <summary>
            Fetch ye old english for ya
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Yemen">
            <summary>
            Gets the yemen.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Zimbabwe">
            <summary>
            Gets the zimbabwe.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.FrenchLuxembourg">
            <summary>
            Gets the french luxembourg.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Cultures.Klingon">
            <summary>Tlhap tlhIngan Hol.</summary>
            <value>TlhIngan Hol.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.DateTimeFormatterAttribute">
            <summary>
            Defines DateTime formatter attribute.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.DateTimeFormatterAttribute.#ctor(Sitecore.ContentSearch.DateTimeFormatterAttribute.DateTimeKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DateTimeFormatterAttribute"/> class.
            </summary>
            <param name="kind">The kind of date time.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.DateTimeFormatterAttribute.DateTimeKind">
            <summary>
            DateTime Kind.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DateTimeFormatterAttribute.DateTimeKind.Utc">
            <summary>
            The UTC time.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DateTimeFormatterAttribute.DateTimeKind.ServerTime">
            <summary>
            The server time
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DateTimeFormatterAttribute.Kind">
            <summary>
            Gets or sets the kind of the date time.
            </summary>
            <value>The kind of the date time.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.DefaultDocumentMapper`1">
            <summary>
            The default document mapper.
            </summary>
            <typeparam name="TDocument">The index document type</typeparam>
        </member>
        <member name="F:Sitecore.ContentSearch.DefaultDocumentMapper`1.index">
            <summary>The index.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DefaultDocumentMapper`1.typeMapCache">
            <summary>The type map cache.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapper`1.ObjectFactory">
            <summary>Gets or sets the object factory.</summary>
            <value>The object factory.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapper`1.Settings">
            <summary>Gets or sets the settings.</summary>
            <value>The settings.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>The initialize.</summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.GetDocumentFieldsToRead``1(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Gets the document fields to read.</summary>
            <typeparam name="TElement">The type of the element.</typeparam>
            <param name="executionContexts">The execution contexts.</param>
            <returns>The document fields to read.</returns>
            <remarks>
            Used to specify which fields the index document should contain.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.GetDocumentFieldsToRead(System.Type,System.String,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Gets the document fields to read.</summary>
            <param name="elementType">Type of the element.</param>
            <param name="collapsedFieldRootName">Name of the collapsed field root.</param>
            <param name="executionContexts">The execution contexts.</param>
            <returns>The document fields to read.</returns>
            <remarks>
            Used to specify which fields the index document should contain.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.GetCollapsedDocumentFieldsToRead(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext},Sitecore.ContentSearch.DocumentTypeMapInfo,System.String)">
            <summary>Gets the collapsed document fields to read.</summary>
            <param name="executionContexts">The execution contexts.</param>
            <param name="documentTypeMapInfo">The document type map info.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.MapToType``1(`0,Sitecore.ContentSearch.Linq.Methods.SelectMethod,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IFieldQueryTranslator},System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext},Sitecore.ContentSearch.Security.SearchSecurityOptions)">
            <summary>Maps to type.</summary>
            <typeparam name="TElement">The type of the element.</typeparam>
            <param name="document">The document.</param>
            <param name="selectMethod">The select method.</param>
            <param name="virtualFieldProcessors">The virtual field processors.</param>
            <param name="executionContexts">The execution contexts.</param>
            <param name="securityOptions">The security options.</param>
            <returns>The <see cref="!:TElement" />.</returns>
            <exception cref="T:System.InvalidOperationException">Invalid number of select delegate parameters.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.GetDocumentFieldNames(`0)">
            <summary>Gets the document field names.</summary>
            <param name="document">The document.</param>
            <returns>The document field names.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.ReadDocumentFields(`0,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IFieldQueryTranslator})">
            <summary>Reads the document fields.</summary>
            <param name="document">The document.</param>
            <param name="fieldNames">The field names.</param>
            <param name="virtualFieldProcessors">The virtual field processors.</param>
            <returns>The document fields.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.CreateElementInstance(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Creates the element instance.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="fieldValues">The field values.</param>
            <param name="executionContexts">The execution contexts.</param>
            <returns>The element instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.MapFieldValuesToType``1(System.Collections.Generic.IDictionary{System.String,System.Object},``0,Sitecore.ContentSearch.DocumentTypeMapInfo)">
            <summary>Maps the type of the field values to.</summary>
            <typeparam name="TElement">The type of the element.</typeparam>
            <param name="fieldValues">The field values.</param>
            <param name="result">The result.</param>
            <param name="documentTypeMapInfo">The document type map info.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.GetPotentialTypeMaps``1(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Gets the potential type maps.</summary>
            <typeparam name="TElement">The type of the element.</typeparam>
            <param name="executionContexts">The execution contexts.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.GetTypeMap``1">
            <summary>
            Gets the type map.
            </summary>
            <typeparam name="TElement">The type of the element.</typeparam>
            <returns>The type map.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.GetTypeMap(System.Type)">
            <summary>Gets the type map.</summary>
            <param name="delegateArgumentType">Type of the delegate argument.</param>
            <returns>Type map.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapper`1.GetObjectFactory(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Gets the object factory.</summary>
            <param name="executionContexts">The execution contexts.</param>
            <returns>The object factory.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryDelegateRule">
            <summary>
            The default document mapper factory delegate rule.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DefaultDocumentMapperFactoryDelegateRule.fields">
            <summary>The fields</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DefaultDocumentMapperFactoryDelegateRule.matchesFunction">
            <summary>The matches function</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryDelegateRule.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Type}},System.Func{System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryDelegateRule" /> class.
            </summary>
            <param name="creationType">Type of the creation.</param>
            <param name="fields">The fields.</param>
            <param name="matchesFunction">The fields.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryDelegateRule.#ctor(System.Type,System.Type,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Type}},System.Func{System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryDelegateRule" /> class.
            </summary>
            <param name="creationType">Type of the creation.</param>
            <param name="baseType">Type of the creation.</param>
            <param name="fields">The fields.</param>
            <param name="matchesFunction">The fields.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryDelegateRule.GetRequiredDocumentFields(Sitecore.ContentSearch.AbstractFieldNameTranslator)">
            <summary>Gets the required document fields.</summary>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns>List of fieldnames that is required for the rule to execute.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryDelegateRule.GetWeight(System.Type)">
            <summary>Gets the weight.</summary>
            <param name="baseType">Type of the base.</param>
            <returns>The rule weight.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryDelegateRule.MatchesDocument(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},Sitecore.ContentSearch.Linq.Parsing.IIndexValueFormatter,Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>Matches the document.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="fieldValues">The field values.</param>
            <param name="valueFormatter">The value formatter.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns>
              <c>true</c> if the document matches the rule; otherwise <c>false</c>
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryDelegateRule.UpdateRuleKey">
            <summary>Updates the rule key.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule">
            <summary>
            The default document mapper factory rule.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule" /> class.
            </summary>
            <param name="creationType">Type of the creation.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule" /> class.
            </summary>
            <param name="creationType">Type of the creation.</param>
            <param name="baseType">Type of the base.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule" /> class.
            </summary>
            <param name="creationType">Type of the creation.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule" /> class.
            </summary>
            <param name="creationType">Type of the creation.</param>
            <param name="baseType">Type of the base.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule.#ctor(System.Type,System.Type,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule" /> class.
            </summary>
            <param name="creationType">Type of the creation.</param>
            <param name="baseType">Type of the base.</param>
            <param name="customWeight">The custom weight.</param>
            <exception cref="T:System.ArgumentException">creationType is null.</exception>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule.FieldComparisons">
            <summary>Gets or sets the field comparisons.</summary>
            <value>The field comparisons.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule.AddFieldComparison(Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleFieldComparison)">
            <summary>Adds the field comparison.</summary>
            <param name="comparison">The comparison.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule.AddFieldComparison(System.String,Sitecore.ContentSearch.Linq.Common.ComparisonType,System.Object,System.Type)">
            <summary>Adds the field comparison.</summary>
            <param name="fieldName">Name of the field.</param>
            <param name="comparison">The comparison.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule.GetRequiredDocumentFields(Sitecore.ContentSearch.AbstractFieldNameTranslator)">
            <summary>Gets the required document fields.</summary>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns>List of fieldnames that is required for the rule to execute.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule.GetWeight(System.Type)">
            <summary>Gets the weight.</summary>
            <param name="baseType">Type of the base.</param>
            <returns>The rule weight.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule.MatchesDocument(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},Sitecore.ContentSearch.Linq.Parsing.IIndexValueFormatter,Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>Matches the document.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="fieldValues">The field values.</param>
            <param name="valueFormatter">The value formatter.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns><c>true</c> if the document matches the rule; otherwise <c>false</c></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRule.UpdateRuleKey">
            <summary>Updates the rule key.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase">
            <summary>
            The default document mapper factory rule base.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase" /> class.
            </summary>
            <param name="creationType">Type of the creation.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase" /> class.
            </summary>
            <param name="creationType">Type of the creation.</param>
            <param name="baseType">Type of the base.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase" /> class.
            </summary>
            <param name="creationType">Type of the creation.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase" /> class.
            </summary>
            <param name="creationType">Type of the creation.</param>
            <param name="baseType">Type of the base.</param>
            <exception cref="T:System.ArgumentException">creationType is null.</exception>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.BaseType">
            <summary>Gets or sets the type of the base.</summary>
            <value>The type of the base.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.CreationType">
            <summary>Gets or sets the type of the creation.</summary>
            <value>The type of the creation.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.TypeDistanceWeight">
            <summary>Gets or sets the type distance weight.</summary>
            <value>The type distance weight.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.CustomWeight">
            <summary>Gets or sets the custom weight.</summary>
            <value>The custom weight.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.RuleKey">
            <summary>Gets or sets the rule key.</summary>
            <value>The rule key.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.GetRequiredDocumentFields(Sitecore.ContentSearch.AbstractFieldNameTranslator)">
            <summary>Gets the required document fields.</summary>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns>List of fieldnames that is required for the rule to execute.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.MatchesDocument(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},Sitecore.ContentSearch.Linq.Parsing.IIndexValueFormatter,Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>Matches the document.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="fieldValues">The field values.</param>
            <param name="valueFormatter">The value formatter.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns>
              <c>true</c> if the document matches the rule; otherwise <c>false</c>
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.GetWeight(System.Type)">
            <summary>Gets the weight.</summary>
            <param name="baseType">Type of the base.</param>
            <returns>The rule weight.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.Clone">
            <summary>Creates a new object that is a copy of the current instance.</summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleBase.UpdateRuleKey">
            <summary>Updates the rule key.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleExecutionContext">
            <summary>
            The default document mapper factory execution context.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleExecutionContext.#ctor(Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleExecutionContext" /> class.
            </summary>
            <param name="rules">The rules.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleExecutionContext.RuleMap">
            <summary>Gets the rule map.</summary>
            <value>The rule map.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleExecutionContext.AddRule(Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule)">
            <summary>Adds the rule.</summary>
            <param name="rule">The rule.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleFieldComparison">
            <summary>
            The default document mapper factory rule field comparison.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleFieldComparison.#ctor(System.String,System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleFieldComparison" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="comparison">The comparison.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleFieldComparison.#ctor(System.String,Sitecore.ContentSearch.Linq.Common.ComparisonType,System.Object,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleFieldComparison" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="comparison">The comparison.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleFieldComparison.FieldName">
            <summary>Gets the name of the field.</summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleFieldComparison.Comparison">
            <summary>Gets the comparison.</summary>
            <value>The comparison.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleFieldComparison.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleFieldComparison.Type">
            <summary>Gets the type.</summary>
            <value>The type.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleFieldComparison.MatchesDocument(System.Collections.Generic.IDictionary{System.String,System.Object},Sitecore.ContentSearch.Linq.Parsing.IIndexValueFormatter,Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>Matches the document.</summary>
            <param name="fieldValues">The field values.</param>
            <param name="valueFormatter">The value formatter.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns><c>true</c> if the document matches the rule; otherwise <c>false</c></returns>
            <exception cref="T:System.InvalidOperationException">Invalid comparison.</exception>
        </member>
        <member name="T:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleMap">
            <summary>
            The default document mapper factory rule map.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleMap.map">
            <summary>The map</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleMap.AddRule(Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule)">
            <summary>Adds the rule.</summary>
            <param name="rule">The rule.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleMap.GetRules(System.Type)">
            <summary>Gets the rules.</summary>
            <param name="baseType">Type of the base.</param>
            <returns>The rules for the specified <paramref name="baseType"/>.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleMap.PrintRuleMap">
            <summary>Prints the rule map.</summary>
            <returns>Textual representation of the rule map.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleMap.PopulateMapWithTypeInheritance(Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule)">
            <summary>Populates the map with type inheritance.</summary>
            <param name="rule">The rule.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleMap.GetTypeInheritanceChainAndInterfaces(System.Type)">
            <summary>Gets the type inheritance chain and interfaces.</summary>
            <param name="type">The type.</param>
            <returns>The type inheritance chain and interfaces.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleMap.AddRuleToMap(Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule,System.Type,System.Int32)">
            <summary>Adds the rule to map.</summary>
            <param name="rule">The rule.</param>
            <param name="key">The key.</param>
            <param name="typeDistanceWeight">The type distance weight.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleMap.PopulateTypeInheritance(System.Type,System.Type,System.Type,System.Int32,System.Collections.Generic.HashSet{System.Type},System.Collections.Generic.Dictionary{System.Tuple{System.Type,System.Type},System.Int32})">
            <summary>Populates the type inheritance.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="rootBaseType">Type of the root base.</param>
            <param name="type">The type.</param>
            <param name="weight">The weight.</param>
            <param name="types">The types.</param>
            <param name="inheritanceWeightMap">The inheritance weight map.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactoryRuleMap.PopulateTypeInheritanceRecursive(System.Type,System.Type,System.Type,System.Int32,System.Collections.Generic.HashSet{System.Type},System.Collections.Generic.Dictionary{System.Tuple{System.Type,System.Type},System.Int32})">
            <summary>Populates the type inheritance.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="rootBaseType">Type of the root base.</param>
            <param name="type">The type.</param>
            <param name="weight">The weight.</param>
            <param name="types">The types.</param>
            <param name="inheritanceWeightMap">The inheritance weight map.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule">
            <summary>
            The default document mapper factory simple rule.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule.#ctor(System.String,System.String,System.Object,System.String,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="comparison">The comparison.</param>
            <param name="value">The value.</param>
            <param name="valueType">Type of the value.</param>
            <param name="creationType">Type of the creation.</param>
            <param name="baseType">Type of the base.</param>
            <param name="customWeight">The custom weight.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule.#ctor(System.String,System.String,System.Object,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="comparison">The comparison.</param>
            <param name="value">The value.</param>
            <param name="valueType">Type of the value.</param>
            <param name="creationType">Type of the creation.</param>
            <param name="baseType">Type of the base.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule.#ctor(System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="comparison">The comparison.</param>
            <param name="value">The value.</param>
            <param name="valueType">Type of the value.</param>
            <param name="creationType">Type of the creation.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule.#ctor(System.String,Sitecore.ContentSearch.Linq.Common.ComparisonType,System.Object,System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="comparison">The comparison.</param>
            <param name="value">The value.</param>
            <param name="creationType">Type of the creation.</param>
            <param name="baseType">Type of the base.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule.#ctor(System.String,Sitecore.ContentSearch.Linq.Common.ComparisonType,System.Object,System.Type,System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="comparison">The comparison.</param>
            <param name="value">The value.</param>
            <param name="valueType">Type of the value.</param>
            <param name="creationType">Type of the creation.</param>
            <param name="baseType">Type of the base.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule.#ctor(System.String,Sitecore.ContentSearch.Linq.Common.ComparisonType,System.Object,System.Type,System.Type,System.Type,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DefaultDocumentMapperFactorySimpleRule" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="comparison">The comparison.</param>
            <param name="value">The value.</param>
            <param name="valueType">Type of the value.</param>
            <param name="creationType">Type of the creation.</param>
            <param name="baseType">Type of the base.</param>
            <param name="customWeight">The custom weight.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.DefaultDocumentMapperObjectFactory">
            <summary>
            The default document mapper factory.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DefaultDocumentMapperObjectFactory.ruleMap">
            <summary>The rule map</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DefaultDocumentMapperObjectFactory.searchIndex">
            <summary>The search index</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperObjectFactory.AddRule(Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule)">
            <summary>Adds the rule.</summary>
            <param name="rule">The rule.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperObjectFactory.GetTypeIdentifyingFields(System.Type,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Gets the type identifying fields.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="executionContexts">The execution contexts.</param>
            <returns>List of identifying fields.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperObjectFactory.GetPotentialCreatedTypes(System.Type,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Potentials the created types.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="executionContexts">The execution contexts.</param>
            <returns>List of potential created types.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperObjectFactory.CreateElementInstance(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Creates the element instance.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="fieldValues">The field values.</param>
            <param name="executionContexts">The execution contexts.</param>
            <returns>The element instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperObjectFactory.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the current instance.</summary>
            <param name="searchIndex">Index of the search.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperObjectFactory.GetRuleMap(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Gets the rule map.</summary>
            <param name="executionContexts">The execution contexts.</param>
            <returns>The rule map.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DefaultDocumentMapperObjectFactory.RuleMatchingDebugWrite(System.String,System.Object[])">
            <summary>Rule Debug Write Line.</summary>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Diagnostics.AbstractLog">
            <summary>
            The abstract log.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Diagnostics.AbstractLog.Logger">
            <summary>
            Gets the log.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Diagnostics.AbstractLog.Initialized">
            <summary>
            Gets a value indicating whether this <see cref="T:Sitecore.ContentSearch.Diagnostics.AbstractLog"/> is initialized.
            </summary>
            <value>
              <c>true</c> if initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.AbstractLog.Error(System.String,System.Exception)">
            <summary>
            The error.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="exception">
            The exception.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.AbstractLog.Info(System.String,System.Exception)">
            <summary>
            The info.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="exception">
            The exception.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.AbstractLog.Warn(System.String,System.Exception)">
            <summary>
            The warn.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="exception">
            The exception.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.AbstractLog.Fatal(System.String,System.Exception)">
            <summary>
            The fatal.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="exception">
            The exception.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.AbstractLog.Debug(System.String,System.Exception)">
            <summary>
            The debug.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="exception">
            The exception.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.AbstractLog.Debug(System.Func{System.String},System.Exception)">
            <summary>Debugs the specified message delegate.</summary>
            <param name="messageDelegate">The message delegate.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.AbstractLog.RemoveAppender(System.String)">
            <summary>
            Removes appender.
            </summary>
            <param name="loggerName">The logger name to remove</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Diagnostics.CrawlingLog">
            <summary>
            Log functionality for Crawling/Indexing within ContentSearch
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Diagnostics.CrawlingLog.LoggerName">
            <summary>
            The logger name.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.CrawlingLog.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.ContentSearch.Diagnostics.CrawlingLog"/> class.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Diagnostics.CrawlingLog.logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Diagnostics.CrawlingLog.syncObj">
            <summary>
            The syncronization object
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Diagnostics.CrawlingLog.Instance">
            <summary>
            The log.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.CrawlingLog.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Sitecore.ContentSearch.Diagnostics.CrawlingLog"/> class from being created.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Diagnostics.CrawlingLog.Log">
            <summary>
            Gets the log.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Diagnostics.CrawlingLog.Logger">
            <summary>
            Gets the real logger.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.CrawlingLog.SetLogger(log4net.ILog)">
            <summary>
            Sets the logger.
            </summary>
            <param name="innerLogger">The inner logger.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.LoggingTraceWriter.#ctor(Sitecore.ContentSearch.Diagnostics.AbstractLog)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Diagnostics.LoggingTraceWriter" /> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Diagnostics.LoggingTraceWriter.DebugOutStream">
            <summary>
            The debug out stream.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Diagnostics.ObservationLog">
            <summary>
            Log functionality for Crawling/Indexing within ContentSearch
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Diagnostics.ObservationLog.LoggerName">
            <summary>
            The logger name.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.ObservationLog.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.ContentSearch.Diagnostics.ObservationLog"/> class.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Diagnostics.ObservationLog.logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Diagnostics.ObservationLog.syncObj">
            <summary>
            The synchronization object
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Diagnostics.ObservationLog.Instance">
            <summary>
            The log.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.ObservationLog.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Sitecore.ContentSearch.Diagnostics.ObservationLog"/> class from being created.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Diagnostics.ObservationLog.Log">
            <summary>
            Gets the log.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Diagnostics.ObservationLog.Logger">
            <summary>
            Gets the real logger.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Diagnostics.SearchLog">
            <summary>
            Log functionality for Search requests.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Diagnostics.SearchLog.LoggerName">
            <summary>
            The logger name.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.SearchLog.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.ContentSearch.Diagnostics.SearchLog"/> class.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Diagnostics.SearchLog.logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Diagnostics.SearchLog.syncObj">
            <summary>
            The syncronization object
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Diagnostics.SearchLog.Instance">
            <summary>
            The log.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Diagnostics.SearchLog.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Sitecore.ContentSearch.Diagnostics.SearchLog"/> class from being created.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Diagnostics.SearchLog.Log">
            <summary>
            Gets the log.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Diagnostics.SearchLog.Logger">
            <summary>
            Gets the real logger.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.DocumentBuilderOptions">
            <summary>
            The abstract document builder options.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentBuilderOptions._excludedFields">
            <summary>
            The _excluded fields.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentBuilderOptions._excludedTemplates">
            <summary>
            The _excluded templates.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentBuilderOptions._includedFields">
            <summary>
            The _included fields.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentBuilderOptions._includedTemplates">
            <summary>
            The _included templates.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentBuilderOptions._excludedTemplateFields">
            <summary>
            The _excluded template fields.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentBuilderOptions._includedTemplateFields">
            <summary>
            The _included template fields.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentBuilderOptions._excludedMediaFields">
            <summary>
            The _excluded media fields.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentBuilderOptions._includedMediaFields">
            <summary>
            The _included media fields.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentBuilderOptions.filters">
            <summary>
            The filters.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentBuilderOptions.computedIndexFields">
            <summary>
            The computed index fields.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentBuilderOptions._processDependencies">
            <summary>
            The _process dependencies.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.IndexName">
            <summary>
            Gets or sets the index name.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.Database">
            <summary>
            Gets or sets the database.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.Root">
            <summary>
            Gets or sets the root.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.Tags">
            <summary>
            Gets or sets the tags.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.IndexAllFields">
            <summary>
            Gets or sets a value indicating whether index all fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.CheckTemplateInheritance">
            <summary>
            Gets or sets a value indicating whether include/exclude filters should check base templates.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.ProcessDependencies">
            <summary>
            Gets or sets a value indicating item dependencies will be processed.
            </summary>
            <value>
              <c>true</c> if [process dependencies]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.ExcludeAllSpecialFields">
            <summary>
            Gets or sets a value indicating whether exclude all special fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.ExcludedTemplates">
            <summary>
            Gets the excluded templates.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.IndexingFilters">
            <summary>
            Gets the indexing filters.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.HasExcludedTemplates">
            <summary>
            Gets a value indicating whether has excluded templates.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.IncludedTemplates">
            <summary>
            Gets the included templates.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.HasIncludedTemplates">
            <summary>
            Gets a value indicating whether has included templates.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.IncludedFields">
            <summary>
            Gets the included fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.HasIncludedFields">
            <summary>
            Gets a value indicating whether has included fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.ExcludedFields">
            <summary>
            Gets the excluded fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.HasExcludedFields">
            <summary>
            Gets a value indicating whether has excluded fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.ExcludedTemplateFields">
            <summary>
            Gets the excluded template fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.HasExcludedTemplateFields">
            <summary>
            Gets a value indicating whether has excluded template fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.IncludedTemplateFields">
            <summary>
            Gets the included template fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.HasIncludedTemplateFields">
            <summary>
            Gets a value indicating whether has included template fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.ExcludedMediaFields">
            <summary>
            Gets the excluded media fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.HasExcludedMediaFields">
            <summary>
            Gets a value indicating whether has excluded media fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.ComputedIndexFields">
            <summary>
            Gets the computed index fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.IncludedMediaFields">
            <summary>
            Gets the included media fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentBuilderOptions.HasIncludedMediaFields">
            <summary>
            Gets a value indicating whether has included media fields.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentBuilderOptions.AddFieldFilter(System.String,System.Boolean,Sitecore.ContentSearch.IndexingFilterLimitScope)">
            <summary>
            The add field filter.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="isIncluded">
            The is included.
            </param>
            <param name="limitScope">
            The limit scope.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentBuilderOptions.AddTemplateFilter(System.String,System.Boolean)">
            <summary>
            The add template filter.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="isIncluded">
            The is included.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentBuilderOptions.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the current instance.</summary>
            <param name="searchIndex">Index of the search.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentBuilderOptions.AddExcludedTemplate(System.String)">
            <summary>
            Adds the template ID to the excluded template list.
            </summary>
            <param name="templateId">The template id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentBuilderOptions.AddIncludedTemplate(System.String)">
            <summary>
            Adds the template ID to the included template list.
            </summary>
            <param name="templateId">The template id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentBuilderOptions.AddIncludedField(System.String)">
            <summary>
            Adds the field ID to the included field list.
            </summary>
            <param name="fieldId">The field id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentBuilderOptions.AddExcludedField(System.String)">
            <summary>
            Adds the field ID to the excluded field list.
            </summary>
            <param name="fieldId">The field id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentBuilderOptions.AddExcludedSpecialField(System.Xml.XmlNode)">
            <summary>
            Adds a filter to the excluded fields list from configuration.
            </summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentBuilderOptions.AddIncludedSpecialField(System.Xml.XmlNode)">
            <summary>
            Adds a filter to the included fields list from configuration.
            </summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentBuilderOptions.AddComputedIndexField(System.Xml.XmlNode)">
            <summary>
            Adds a computed index field from the configuration node.
            </summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentBuilderOptions.CreateComputedIndexfield(System.String,System.Xml.XmlNode)">
            <summary>
            Creates the computed index field.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="configNode">The config node.</param>
            <returns>The created computed index field.</returns>
            <exception cref="T:System.InvalidOperationException">
            Could not parse computed index field entry:  + configNode.OuterXml
            or
            Could not find the computed index field type:  + computationType
            </exception>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentBuilderOptions.AddSpecialFieldFromConfiguration(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Adds the special field from configuration.
            </summary>
            <param name="configNode">The config node.</param>
            <param name="included">if set to <c>true</c> [included].</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentSizeCommitPolicy.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the current instance.</summary>
            <param name="searchIndex">Index of the search.</param>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentTypeMapCache.typeMapCache">
            <summary>
            The type map cache.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentTypeMapCache.index">
            <summary>The index</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentTypeMapCache.#ctor(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DocumentTypeMapCache"/> class.
            </summary>
            <param name="index">The index.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="index"/> is null.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentTypeMapCache.GetTypeMap``1">
            <summary>
            Gets the type map.
            </summary>
            <typeparam name="TElement">The type of the element.</typeparam>
            <returns>The type map.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentTypeMapCache.GetTypeMap(System.Type)">
            <summary>Gets the type map.</summary>
            <param name="delegateArgumentType">Type of the delegate argument.</param>
            <returns>Type map.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.DocumentTypeMapInfo">
            <summary>The type map info.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentTypeMapInfo.type">
            <summary>The type</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentTypeMapInfo.indexerProperty">
            <summary>The indexer property</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentTypeMapInfo.properties">
            <summary>The properties</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentTypeMapInfo.formatter">
            <summary>The formatter.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentTypeMapInfo.propertyNames">
            <summary>The property names</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentTypeMapInfo.mappedIndexFieldNames">
            <summary>The mapped index field names</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentTypeMapInfo.datetimeFormatters">
            <summary>The DateTime formatters.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.DocumentTypeMapInfo.typeMapCache">
            <summary>The type map cache</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentTypeMapInfo.#ctor(System.Type,Sitecore.ContentSearch.AbstractFieldNameTranslator,Sitecore.ContentSearch.Linq.Parsing.IIndexValueFormatter,Sitecore.ContentSearch.DocumentTypeMapCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.DocumentTypeMapInfo" /> class.
            </summary>
            <param name="type">The type.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
            <param name="formatter">The formatter.</param>
            <param name="typeMapCache">The type map cache.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentTypeMapInfo.HasIndexer">
            <summary>Gets a value indicating whether the document type has an indexer.</summary>
            <value>
            <c>true</c> if the document type has an indexer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentTypeMapInfo.PropertyNames">
            <summary>Gets the property names.</summary>
            <value>The property names.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.DocumentTypeMapInfo.MappedIndexFieldNames">
            <summary>Gets the mapped index field names.</summary>
            <value>The mapped index field names.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentTypeMapInfo.SetIndexer(System.Object,System.String,System.String,System.Object)">
            <summary>Sets the indexer.</summary>
            <param name="target">The target.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="documentFieldName">Name of the document field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentTypeMapInfo.SetProperty(System.Object,System.String,System.String,System.Object)">
            <summary>
            Sets the property.
            </summary>
            <param name="target">The target.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="documentFieldName">Name of the document field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.DocumentTypeMapInfo.FormatDateTime(System.Object,Sitecore.ContentSearch.DateTimeFormatterAttribute.DateTimeKind)">
            <summary>
            Formats the date time.
            </summary>
            <param name="value">The value.</param>
            <param name="dateTimeKind">Kind of the date time.</param>
            <returns>Returns converted value.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.EmptyConfiguration">
            <summary>
            The empty provider index search configuration.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.EmptyConfiguration.Indexes">
            <summary>
            Gets or sets the indexes.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Events.IndexingEvent`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Sitecore.ContentSearch.Events.IndexingEvent`1.ActionName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Events.IndexingEvent`1.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Events.IndexingEvent`1.IndexName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Events.IndexingEvent`1.UniqueId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Events.IndexingEvent`1.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Events.IndexingEvent`1.Path">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.IndexingEvent`1.WithMessage(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.IndexingEvent`1.WithActionName(System.String)">
            <summary>
            
            </summary>
            <param name="actionName"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.IndexingEvent`1.WithUniqueId(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>
            
            </summary>
            <param name="uniqueId"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.IndexingEvent`1.WithId(Sitecore.ContentSearch.IIndexableId)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.IndexingEvent`1.WithPath(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.IndexingEvent`1.WithIndexName(System.String)">
            <summary>
            
            </summary>
            <param name="indexName"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.IndexingEvent`1.GetRequiredParameters">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Events.IndexingEventHandler">
            <summary>
            Defines event handlers related to Indexing.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.IndexingEventHandler.UpdateIndexTimestampDirectHandler(System.Object,System.EventArgs)">
            <summary>The update index timestamp handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.IndexingEventHandler.UpdateIndexTimestampHandler(System.Object,System.EventArgs)">
            <summary>The update index timestamp handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.IndexingEventHandler.IndexEndedRemoteHandler(System.Object,System.EventArgs)">
            <summary>The index ended remote handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.IndexingEventHandler.IndexingEndedHandler(System.Object,System.EventArgs)">
            <summary>
            The indexing ended handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.IndexingEventHandler.IndexingStartedHandler(System.Object,System.EventArgs)">
            <summary>
            The indexing started handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Events.IndexingFinishedEvent">
            <summary>
            Defines the index finished event class.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Events.IndexingRemoteEvent">
            <summary>
            Defines the base indexing remote event
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Events.IndexingStartedEvent">
            <summary>
            Defines the index started event class.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Events.PackagingEventHandler">
            <summary>
            Defines event handlers related to Packaging.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PackagingEventHandler.OnPackageInstallStartingHandler(System.Object,System.EventArgs)">
            <summary>Called when the package install starting has handler.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PackagingEventHandler.OnPackagePostStepInstallStartingHandler(System.Object,System.EventArgs)">
            <summary>Called when the package install starting has handler.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PackagingEventHandler.OnPackageInstallerEndHandler(System.Object,System.EventArgs)">
            <summary>Called when the package installer end has handler.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PackagingEventHandler.OnPackageInstallItemsEndHandler(System.Object,System.EventArgs)">
            <summary>Called when the package install items end has handler.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PackagingEventHandler.OnPackageInstallStartingRemoteHandler(System.Object,System.EventArgs)">
            <summary>
            Invoked on 'packageinstall:starting:remote' event.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PackagingEventHandler.OnPackagePostStepInstallStartingRemoteHandler(System.Object,System.EventArgs)">
            <summary>
            Invoked on 'packageinstall:poststep:starting:remote' event.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PackagingEventHandler.OnPackageInstallItemsEndRemoteHandler(System.Object,System.EventArgs)">
            <summary>
            Invoked on 'packageinstall:items:ended:remote' event.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PackagingEventHandler.OnPackageInstallerEndRemoteHandler(System.Object,System.EventArgs)">
            <summary>
            Invoked on 'packageinstall:ended:remote' event.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PackagingEventHandler.HandleInstalledItems(System.Collections.Generic.List{Sitecore.Data.ItemUri})">
            <summary>
            Handles installed items.
            </summary>
            <param name="installedItems">
            The installed items.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PackagingEventHandler.FilterOutItems(System.Collections.Generic.List{Sitecore.Data.ItemUri})">
            <summary>
            Filter out item uri's which should not be processed by the instance.
            For example if items belong to a database which is not defined on the instance. 
            </summary>
            <param name="itemUris">A batch of items uri's to filter</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PackagingEventHandler.SafeExecute(System.Action)">
            <summary>
            Executes action and log exception in case action failed.
            </summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Events.PublishingEventHandler">
            <summary>
            Defines event handlers related to Publishing.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PublishingEventHandler.OnFullPublishEndRemoteHandler(System.Object,System.EventArgs)">
            <summary>The on full publish end remote handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PublishingEventHandler.OnFullPublishEndHandler(System.Object,System.EventArgs)">
            <summary>The on full publish end handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PublishingEventHandler.OnPublishHandler(System.Object,System.EventArgs)">
            <summary>The on publish handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Events.PublishingEventHandler.OnPublishRemoteHandler(System.Object,System.EventArgs)">
            <summary>The on publish remote handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Exceptions.SearchProviderConnectionException">
            <summary>
            Thrown when unable to connect to a certain search provider.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Exceptions.SearchProviderConnectionException.#ctor(System.String,Sitecore.ContentSearch.SupportedProviders)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Exceptions.SearchProviderConnectionException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Exceptions.SearchProviderConnectionException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Exceptions.SearchProviderConnectionException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="searchProviderName">Name of the search provider.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Exceptions.SearchProviderQueryException.#ctor(System.String,System.String,Sitecore.ContentSearch.SupportedProviders)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Exceptions.SearchProviderQueryException" /> class.
            </summary>
            <param name="errorMessage">The error message.</param>
            <param name="rawQuery">The raw query.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Exceptions.SearchProviderQueryException.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Exceptions.SearchProviderQueryException" /> class.
            </summary>
            <param name="errorMessage">The error message.</param>
            <param name="rawQuery">The raw query.</param>
            <param name="searchProviderName">Name of the search provider.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.ComHelper">
            <summary>
            Utility class to get a class factory for a certain class ID by loading the DLL that implements that class.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.ComHelper.dllList">
            <summary>
            The DLL list.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.ComHelper.DllGetClassObject">
            <summary>
            Signature for <c>DllGetClassObject</c> function.
            </summary>
            <param name="classId">The class id.</param>
            <param name="interfaceId">The interface id.</param>
            <param name="interfacePointer">The interface pointer.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.ComHelper.GetClassFactory(System.String,System.String)">
            <summary>
            Gets a class factory for a specific COM Class ID.
            </summary>
            <param name="dllName">The DLL where the COM class is implemented.</param>
            <param name="filterPersistClass">The requested class ID.</param>
            <returns>IClassFactory instance used to create instances of that class.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.ComHelper.GetClassFactoryFromDll(System.String,System.String)">
            <summary>
            Gets the class factory from DLL.
            </summary>
            <param name="dllName">Name of the DLL.</param>
            <param name="filterPersistClass">The filter persist class.</param>
            <returns>The class factory from DLL.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.ComHelper.DllList">
            <summary>
            Holds a list of DLL handles and unloads the DLLs in the destructor.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.ComHelper.DllList.dllCollection">
            <summary>
            The DLL list.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.ComHelper.DllList.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.ComHelper.DllList"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.ComHelper.DllList.AddDllHandle(System.IntPtr)">
            <summary>
            Adds the DLL handle.
            </summary>
            <param name="dllHandle">The DLL handle.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterDisposable">
            <summary>
            The class representing disposable filter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterDisposable.disposed">
            <summary>
            Boolean value indicating whether this instance has been disposed.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterDisposable.resource">
            <summary>
            The disposable resource.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterDisposable.#ctor(Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilter,System.IDisposable)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterDisposable"/> class.
            </summary>
            <param name="filter">The filter.</param>
            <param name="relatedResource">The related resource.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterDisposable.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>
            The filter.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterDisposable.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterException">
            <summary>
            Represents an exceptional condition related to <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilter"/> types.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterException"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader">
            <summary>
            FilterLoader finds the DLL and ClassID of the COM object responsible  
            for filtering a specific file extension. 
            It then loads that DLL, creates the appropriate COM object and returns 
            a pointer to an IFilter instance
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.cache">
            <summary>
            The cache.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.job">
            <summary>
            The job.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.LoadAndInitIFilter(System.String)">
            <summary>
            Loads the and initializes filter.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The filter.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.ReadStringFromHklm(System.String)">
            <summary>
            Reads the string from HKLM.
            </summary>
            <param name="key">The key.</param>
            <returns>The string from HKLM.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.ReadStringFromHklm(System.String,System.String)">
            <summary>
            Reads the string from HKLM.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The string from HKLM.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.LoadIFilter(System.String)">
            <summary>
            Finds an IFilter implementation for a file type.
            </summary>
            <param name="ext">The extension of the file.</param>
            <returns>An IFilter instance used to retrieve text from that file type.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.LoadAndInitIFilter(System.String,System.String)">
            <summary>
            Loads the and initializes filter.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="extension">The extension.</param>
            <returns>The filter.</returns>
            <exception cref="T:System.Exception">Exception is thrown if filter cannot be initialized.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.InitializeFilterAsPersistFile(Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilter,System.String)">
            <summary>
            Initializes the filter as persist file.
            </summary>
            <param name="filter">The filter.</param>
            <param name="fileName">Name of the file.</param>
            <returns>The initialized filter.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.InitializeFilterAsPersistStream(Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilter,System.String)">
            <summary>
            Initializes the filter as persist stream.
            </summary>
            <param name="filter">The filter.</param>
            <param name="fileName">Name of the file.</param>
            <returns>The initialized filter.</returns>
            <exception cref="T:System.Exception">Exception is thrown if stream cannot be loaded.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.LoadFilterFromDll(System.String,System.String)">
            <summary>
            Loads the filter from DLL.
            </summary>
            <param name="dllName">Name of the DLL.</param>
            <param name="filterPersistClass">The filter persist class.</param>
            <returns>The loaded filter.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.GetFilterDllAndClass(System.String,System.String@,System.String@)">
            <summary>
            Gets the filter DLL and class.
            </summary>
            <param name="extension">The extension.</param>
            <param name="dllName">Name of the DLL.</param>
            <param name="filterPersistClass">The filter persist class.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.AddExtensionToCache(System.String,System.String,System.String)">
            <summary>
            Adds the extension to cache.
            </summary>
            <param name="extension">The extension.</param>
            <param name="dllName">Name of the DLL.</param>
            <param name="filterPersistClass">The filter persist class.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.GetFilterDllAndClassFromPersistentHandler(System.String,System.String@,System.String@)">
            <summary>
            Gets the filter DLL and class from persistent handler.
            </summary>
            <param name="persistentHandlerClass">The persistent handler class.</param>
            <param name="dllName">Name of the DLL.</param>
            <param name="filterPersistClass">The filter persist class.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.GetPersistentHandlerClass(System.String,System.Boolean)">
            <summary>
            Gets the persistent handler class.
            </summary>
            <param name="extension">The extension.</param>
            <param name="searchContentType">if set to <c>true</c> code tries to get info from the content type.</param>
            <returns>The persistent handler class.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.GetPersistentHandlerClassFromContentType(System.String)">
            <summary>
            Gets the persistent handler class from content type.
            </summary>
            <param name="extension">The extension.</param>
            <returns>The persistent handler class</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.GetPersistentHandlerClassFromDocumentType(System.String)">
            <summary>
            Gets the persistent handler class from document type.
            </summary>
            <param name="extension">The extension.</param>
            <returns>The persistent handler class.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.GetPersistentHandlerClassFromExtension(System.String)">
            <summary>
            Gets the persistent handler class from extension.
            </summary>
            <param name="extension">The extension.</param>
            <returns>The persistent handler class</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.GetFilterDllAndClassFromCache(System.String,System.String@,System.String@)">
            <summary>
            Gets the filter DLL and class from cache.
            </summary>
            <param name="extension">The extension.</param>
            <param name="dllName">Name of the DLL.</param>
            <param name="filterPersistClass">The filter persist class.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.CacheEntry">
            <summary>
            The cache entry.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.CacheEntry.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.CacheEntry"/> class.
            </summary>
            <param name="dllName">Name of the DLL.</param>
            <param name="className">Name of the class.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.CacheEntry.DllName">
            <summary>
            Gets or sets the DLL name.
            </summary>
            <value>
            The name of the DLL.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterLoader.CacheEntry.ClassName">
            <summary>
            Gets or sets the class name.
            </summary>
            <value>
            The name of the class.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader">
            <summary>
            Implements a TextReader that reads from an IFilter. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader.filter">
            <summary>
            The filter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader.disposed">
            <summary>
            Boolean value indicating whether this instance has been disposed.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader.done">
            <summary>
            Boolean value indicating whether this reader has finished reading.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader.currentChunk">
            <summary>
            The current chunk.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader.currentChunkValid">
            <summary>
            Boolean value indicating whether current chunk is valid.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader.charsLeftFromLastRead">
            <summary>
            The chars left from last read.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <exception cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterException">Thrown when there is no filter defined for filename.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader.Close">
            <summary>
            Closes the <see cref="T:System.IO.TextReader" /> and releases any system resources associated with the TextReader.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads the specified array.
            </summary>
            <param name="array">The array.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
            <returns>The number of chars read.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FilterReader.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.TextReader" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IClassFactory">
            <summary>
            The interface representing COM IClassFactory interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IClassFactory.CreateInstance(System.Object,System.Guid@,System.Object@)">
            <summary>
            Creates the instance.
            </summary>
            <param name="unknownOuter">The unknown outer.</param>
            <param name="interfaceId">The interface id.</param>
            <param name="interfacePointer">The interface pointer.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IClassFactory.LockServer(System.Boolean)">
            <summary>
            Locks an object application open in memory. This enables instances to be created more quickly.
            </summary>
            <param name="lockServer">If set to <c>true</c>, increments the lock count; if <c>false</c>, decrements the lock count.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilter.Init(Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_INIT,System.Int32,System.IntPtr,Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_FLAGS@)">
            <summary>
            The IFilter::Init method initializes a filtering session.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilter.GetChunk(Sitecore.ContentSearch.Extracters.IFilterTextExtraction.STAT_CHUNK@)">
            <summary>
            The IFilter::GetChunk method positions the filter at the beginning
            of the next chunk, 
            or at the first chunk if this is the first call to the GetChunk
            method, and returns a description of the current chunk. 
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilter.GetText(System.UInt32@,System.Char[])">
            <summary>
            The IFilter::GetText method retrieves text (text-type properties)
            from the current chunk, 
            which must have a CHUNKSTATE enumeration value of CHUNK_TEXT.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilter.GetValue(System.IntPtr@)">
            <summary>
            The IFilter::GetValue method retrieves a value (public
            value-type property) from a chunk, 
            which must have a CHUNKSTATE enumeration value of CHUNK_VALUE.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilter.BindRegion(Sitecore.ContentSearch.Extracters.IFilterTextExtraction.FILTERREGION@,System.Guid@,System.Object@)">
            <summary>
            The IFilter::BindRegion method retrieves an interface representing
            the specified portion of the object. 
            Currently reserved for future use.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterDisposable">
            <summary>
            The interface representing disposable filter.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterDisposable.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>
            The filter.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterMediaExtractor">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterMediaExtractor.ExtractText(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IPersist">
            <summary>
            The interface representing COM IPersist interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IPersist.GetClassID(System.Guid@)">
            <summary>
            Gets the class ID.
            </summary>
            <param name="classId">The class ID.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IPersistStream">
            <summary>
            The interface representing COM IPersistStream interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IPersistStream.GetClassID(System.Guid@)">
            <summary>
            Gets the class ID.
            </summary>
            <param name="classId">The class ID.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IPersistStream.IsDirty">
            <summary>
            Determines whether this instance is dirty.
            </summary>
            <returns>Value indicating whether this instance is dirty.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IPersistStream.Load(System.Runtime.InteropServices.ComTypes.IStream)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IPersistStream.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)">
            <summary>
            Saves into the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="clearDirty">Indicates whether to clear the dirty flag after the save is complete.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IPersistStream.GetSizeMax(System.Int64@)">
            <summary>
            Gets the size max.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.Job">
            <summary>
            Defines the Job type.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.Job.handle">
            <summary>
            The job object handle.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.Job.disposed">
            <summary>
            Boolean value indicating whether this instance has been disposed.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.Job.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.Job" /> class.
            </summary>
            <exception cref="T:System.Exception">Exception is thrown if code cannot set job information.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.Job.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.Job"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.Job.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.Job.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.Job.AddProcess(System.IntPtr)">
            <summary>
            Adds the process.
            </summary>
            <param name="processHandle">The process handle.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.Job.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter">
            <summary>
            Defines the StreamAdapter type. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.stream">
            <summary>
            The managed stream.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter"/> class.
            </summary>
            <param name="stream">The managed stream.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.Read(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.
            </summary>
            <param name="pv">When this method returns, contains the data read from the stream. This parameter is passed uninitialized.</param>
            <param name="cb">The number of bytes to read from the stream object.</param>
            <param name="pcbRead">A pointer to a ULONG variable that receives the actual number of bytes read from the stream object.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.Write(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            Writes a specified number of bytes into the stream object starting at the current seek pointer.
            </summary>
            <param name="pv">The buffer to write this stream to.</param>
            <param name="cb">The number of bytes to write to the stream.</param>
            <param name="pcbWritten">On successful return, contains the actual number of bytes written to the stream object. If the caller sets this pointer to <see cref="F:System.IntPtr.Zero" />, this method does not provide the actual number of bytes written.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.Seek(System.Int64,System.Int32,System.IntPtr)">
            <summary>
            Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.
            </summary>
            <param name="dlibMove">The displacement to add to <paramref name="origin" />.</param>
            <param name="origin">The origin of the seek. The origin can be the beginning of the file, the current seek pointer, or the end of the file.</param>
            <param name="plibNewPosition">On successful return, contains the offset of the seek pointer from the beginning of the stream.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
            <summary>
            Retrieves the <see cref="T:System.Runtime.InteropServices.ComTypes.STATSTG" /> structure for this stream.
            </summary>
            <param name="pstatstg">When this method returns, contains a STATSTG structure that describes this stream object. This parameter is passed uninitialized.</param>
            <param name="grfStatFlag">Members in the STATSTG structure that this method does not return, thus saving some memory allocation operations.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>
            Creates a new stream object with its own seek pointer that references the same bytes as the original stream.
            </summary>
            <param name="ppstm">When this method returns, contains the new stream object. This parameter is passed uninitialized.</param>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.Commit(System.Int32)">
            <summary>
            Ensures that any changes made to a stream object that is open in transacted mode are reflected in the parent storage.
            </summary>
            <param name="grfCommitFlags">A value that controls how the changes for the stream object are committed.</param>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
            <summary>
            Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.
            </summary>
            <param name="pstm">A reference to the destination stream.</param>
            <param name="cb">The number of bytes to copy from the source stream.</param>
            <param name="pcbRead">On successful return, contains the actual number of bytes read from the source.</param>
            <param name="pcbWritten">On successful return, contains the actual number of bytes written to the destination.</param>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.LockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            Restricts access to a specified range of bytes in the stream.
            </summary>
            <param name="libOffset">The byte offset for the beginning of the range.</param>
            <param name="cb">The length of the range, in bytes, to restrict.</param>
            <param name="lockType">The requested restrictions on accessing the range.</param>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.Revert">
            <summary>
            Discards all changes that have been made to a transacted stream since the last <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)" /> call.
            </summary>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.SetSize(System.Int64)">
            <summary>
            Changes the size of the stream object.
            </summary>
            <param name="libNewSize">The new size of the stream as a number of bytes.</param>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.StreamAdapter.UnlockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            Removes the access restriction on a range of bytes previously restricted with the <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)" /> method.
            </summary>
            <param name="libOffset">The byte offset for the beginning of the range.</param>
            <param name="cb">The length, in bytes, of the range to restrict.</param>
            <param name="lockType">The access restrictions previously placed on the range.</param>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.Win32NativeMethods">
            <summary>
            This class contains native methods.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.STAT_CHUNK.idChunk">
            <summary>
            The chunk identifier. Chunk identifiers must be unique for the
            current instance of the IFilter interface. 
            Chunk identifiers must be in ascending order. The order in which
            chunks are numbered should correspond to the order in which they appear
            in the source document. Some search engines can take advantage of the
            proximity of chunks of various properties. If so, the order in which
            chunks with different properties are emitted will be important to the
            search engine. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.STAT_CHUNK.breakType">
            <summary>
            The type of break that separates the previous chunk from the current
             chunk. Values are from the CHUNK_BREAKTYPE enumeration. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.STAT_CHUNK.flags">
            <summary>
            Flags indicate whether this chunk contains a text-type or a
            value-type property. 
            Flag values are taken from the CHUNKSTATE enumeration. If the CHUNK_TEXT flag is set, 
            IFilter::GetText should be used to retrieve the contents of the chunk
            as a series of words. 
            If the CHUNK_VALUE flag is set, IFilter::GetValue should be used to retrieve 
            the value and treat it as a single property value. If the filter dictates that the same 
            content be treated as both text and as a value, the chunk should be emitted twice in two       
            different chunks, each with one flag set. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.STAT_CHUNK.locale">
            <summary>
            The language and sublanguage associated with a chunk of text. Chunk locale is used 
            by document indexers to perform proper word breaking of text. If the chunk is 
            neither text-type nor a value-type with data type VT_LPWSTR, VT_LPSTR or VT_BSTR, 
            this field is ignored. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.STAT_CHUNK.attribute">
            <summary>
            The property to be applied to the chunk. If a filter requires that       the same text 
            have more than one property, it needs to emit the text once for each       property 
            in separate chunks. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.STAT_CHUNK.idChunkSource">
            <summary>
            The ID of the source of a chunk. The value of the idChunkSource     member depends on the nature of the chunk: 
            If the chunk is a text-type property, the value of the idChunkSource       member must be the same as the value of the idChunk member. 
            If the chunk is an public value-type property derived from textual       content, the value of the idChunkSource member is the chunk ID for the
            text-type chunk from which it is derived. 
            If the filter attributes specify to return only public value-type
            properties, there is no content chunk from which to derive the current
            public value-type property. In this case, the value of the
            idChunkSource member must be set to zero, which is an invalid chunk. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.STAT_CHUNK.cwcStartSource">
            <summary>
            The offset from which the source text for a derived chunk starts in
            the source chunk. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.STAT_CHUNK.cwcLenSource">
            <summary>
            The length in characters of the source text from which the current
            chunk was derived. 
            A zero value signifies character-by-character correspondence between
            the source text and 
            the derived text. A nonzero value means that no such direct
            correspondence exists
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_FLAGS.IFILTER_FLAGS_OLE_PROPERTIES">
            <summary>
            The caller should use the IPropertySetStorage and IPropertyStorage
            interfaces to locate additional properties. 
            When this flag is set, properties available through COM
            enumerators should not be returned from IFilter. 
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_INIT">
            <summary>
            Flags controlling the operation of the FileFilter
            instance.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_INIT.CANON_PARAGRAPHS">
            <summary>
            Paragraph breaks should be marked with the Unicode PARAGRAPH
            SEPARATOR (0x2029)
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_INIT.HARD_LINE_BREAKS">
            <summary>
            Soft returns, such as the newline character in Microsoft Word, should
            be replaced by hard returnsLINE SEPARATOR (0x2028). Existing hard
            returns can be doubled. A carriage return (0x000D), line feed (0x000A),
            or the carriage return and line feed in combination should be considered
            a hard return. The intent is to enable pattern-expression matches that
            match against observed line breaks. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_INIT.CANON_HYPHENS">
            <summary>
            Various word-processing programs have forms of hyphens that are not
            represented in the host character set, such as optional hyphens
            (appearing only at the end of a line) and nonbreaking hyphens. This flag
            indicates that optional hyphens are to be converted to nulls, and
            non-breaking hyphens are to be converted to normal hyphens (0x2010), or
            HYPHEN-MINUSES (0x002D). 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_INIT.CANON_SPACES">
            <summary>
            Just as the CANON_HYPHENS flag standardizes hyphens,
            this one standardizes spaces. All special space characters, such as
            nonbreaking spaces, are converted to the standard space character
            (0x0020). 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_INIT.APPLY_INDEX_ATTRIBUTES">
            <summary>
            Indicates that the client wants text split into chunks representing
            public value-type properties. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_INIT.APPLY_CRAWL_ATTRIBUTES">
            <summary>
            Indicates that the client wants text split into chunks representing
            properties determined during the indexing process. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_INIT.APPLY_OTHER_ATTRIBUTES">
            <summary>
            Any properties not covered by the APPLY_INDEX_ATTRIBUTES
            and APPLY_CRAWL_ATTRIBUTES flags should be emitted. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_INIT.INDEXING_ONLY">
            <summary>
            Optimizes IFilter for indexing because the client calls the
            IFilter::Init method only once and does not call IFilter::BindRegion.
            This eliminates the possibility of accessing a chunk both before and
            after accessing another chunk. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_INIT.SEARCH_LINKS">
            <summary>
            The text extraction process must recursively search all linked
            objects within the document. If a link is unavailable, the
            IFilter::GetChunk call that would have obtained the first chunk of the
            link should return FILTER_E_LINK_UNAVAILABLE. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFILTER_INIT.FILTER_OWNED_VALUE_OK">
            <summary>
            The content indexing process can return property values set by the  filter. 
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.CHUNK_BREAKTYPE">
            <summary>
            Enumerates the different breaking types that occur between 
            chunks of text read out by the FileFilter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.CHUNK_BREAKTYPE.CHUNK_NO_BREAK">
            <summary>
            No break is placed between the current chunk and the previous chunk.
            The chunks are glued together. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.CHUNK_BREAKTYPE.CHUNK_EOW">
            <summary>
            A word break is placed between this chunk and the previous chunk that
            had the same attribute. 
            Use of CHUNK_EOW should be minimized because the choice of word
            breaks is language-dependent, 
            so determining word breaks is best left to the search engine. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.CHUNK_BREAKTYPE.CHUNK_EOS">
            <summary>
            A sentence break is placed between this chunk and the previous chunk
            that had the same attribute. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.CHUNK_BREAKTYPE.CHUNK_EOP">
            <summary>
            A paragraph break is placed between this chunk and the previous chunk
            that had the same attribute.
            </summary>     
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.CHUNK_BREAKTYPE.CHUNK_EOC">
            <summary>
            A chapter break is placed between this chunk and the previous chunk
            that had the same attribute. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.CHUNKSTATE.CHUNK_TEXT">
            <summary>
            The current chunk is a text-type property.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.CHUNKSTATE.CHUNK_VALUE">
            <summary>
            The current chunk is a value-type property. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.CHUNKSTATE.CHUNK_FILTER_OWNED_VALUE">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.S_OK">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.E_ACCESSDENIED">
            <summary>
            The function was denied access to the filter file. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.E_HANDLE">
            <summary>
            The function encountered an invalid handle,
            probably due to a low-memory situation. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.E_INVALIDARG">
            <summary>
            The function received an invalid parameter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.E_OUTOFMEMORY">
            <summary>
            Out of memory
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.E_NOTIMPL">
            <summary>
            Not implemented
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.E_FAIL">
            <summary>
            Unknown error
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.FILTER_E_PASSWORD">
            <summary>
            File not filtered due to password protection
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.FILTER_E_UNKNOWNFORMAT">
            <summary>
            The document format is not recognised by the filter
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.FILTER_E_NO_TEXT">
            <summary>
            No text in current chunk
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.FILTER_E_END_OF_CHUNKS">
            <summary>
            No more chunks of text available in object
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.FILTER_E_NO_MORE_TEXT">
            <summary>
            No more text available in chunk
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.FILTER_E_NO_MORE_VALUES">
            <summary>
            No more property values available in chunk
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.FILTER_E_ACCESS">
            <summary>
            Unable to access object
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.FILTER_W_MONIKER_CLIPPED">
            <summary>
            Moniker doesn't cover entire region
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.FILTER_E_EMBEDDING_UNAVAILABLE">
            <summary>
            Unable to bind IFilter for embedded object
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.FILTER_E_LINK_UNAVAILABLE">
            <summary>
            Unable to bind IFilter for linked object
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.FILTER_S_LAST_TEXT">
            <summary>
             This is the last text in the current chunk
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Extracters.IFilterTextExtraction.IFilterReturnCode.FILTER_S_LAST_VALUES">
            <summary>
            This is the last value in the current chunk
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldMap">
            <summary>
            The field reader factory.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldMap.fieldNameMap">
            <summary>The field type name map</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldMap.fieldTypeNameMap">
            <summary>The field type name map</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldMap.abstractFieldDefault">
            <summary>The abstract field default.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldMap.AddFieldByFieldName(System.Xml.XmlNode)">
            <summary>Adds the name of the field reader by field.</summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldMap.AddFieldByFieldName(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String},System.Xml.XmlNode)">
            <summary>The add field by field name.</summary>
            <param name="fieldName">The field name.</param>
            <param name="settingType">The setting type.</param>
            <param name="attributes">The attributes.</param>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldMap.AddFieldByFieldTypeName(System.Xml.XmlNode)">
            <summary>Adds the name of the field reader by field type.</summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldMap.AddFieldByFieldTypeName(System.Type,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Xml.XmlNode)">
            <summary>Adds the name of the field by field type.</summary>
            <param name="settingType">Type of the setting.</param>
            <param name="fieldTypeNames">The field type names.</param>
            <param name="attributes">The attributes.</param>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldMap.Add(Sitecore.ContentSearch.AbstractSearchFieldConfiguration)">
            <summary>Adds the specified field reader configuration.</summary>
            <param name="abstractSearchField">The abstract Search Field.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldMap.GetFieldConfiguration(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>Gets the field crawler.</summary>
            <param name="field">The field.</param>
            <returns>The field crawler.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldMap.GetFieldConfiguration(Sitecore.ContentSearch.IIndexableDataField,System.Func{Sitecore.ContentSearch.AbstractSearchFieldConfiguration,System.Boolean})">
            <summary>Gets the field configuration.</summary>
            <param name="field">The field.</param>
            <param name="fieldVisitorFunc">The field visitor function.</param>
            <returns>The field configuration.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldMap.GetFieldConfiguration(System.String)">
            <summary>Gets the field crawler.</summary>
            <param name="fieldName">The field name.</param>
            <returns>The field crawler.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldMap.GetFieldConfigurationByFieldTypeName(System.String)">
            <summary>Gets the field crawler.</summary>
            <param name="fieldTypeName">The field type name.</param>
            <returns>The field crawler.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.CheckboxFieldReader">
            <summary>
            Field reader for handling Checkbox fields.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.CheckboxFieldReader.GetFieldValue(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Gets the field value.
            </summary>
            <param name="field">The field.</param>
            <returns>
            The field value.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.DateFieldReader">
            <summary>
            The date field reader.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.DateFieldReader.#ctor">
            <summary>
            Default ctor for <see cref="T:Sitecore.ContentSearch.FieldReaders.DateFieldReader"/>
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.DateFieldReader.GetFieldValue(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Returns date field value in year / day format.
            </summary>
            <param name="indexableField">The field.</param>
            <returns>The field value</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.DefaultFieldReader">
            <summary>
            The default field reader.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.DelimitedListFieldReader">
            <summary>
            The delimited list field reader.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.DelimitedListFieldReader.GetFieldValue(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            The get field value.
            </summary>
            <param name="field">
            The field.
            </param>
            <returns>
            The <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.FieldReader">
            <summary>
            The field reader.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldReaders.FieldReader.cacheable">
            <summary>
            The cacheable.
            </summary>
        </member>
        <member name="E:Sitecore.ContentSearch.FieldReaders.FieldReader.DataLengthChanged">
            <summary>
            Occurs when [data length changed].
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.FieldReaders.FieldReader.IndexFieldNameFormat">
            <summary>Gets or sets the index field name format.</summary>
            <value>The index field name format.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.FieldReaders.FieldReader.Sitecore#Caching#ICacheable#Cacheable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Caching.ICacheable" /> is cacheable.
            </summary>
            <value><c>true</c> if cacheable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.FieldReaders.FieldReader.Sitecore#Caching#ICacheable#Immutable">
            <summary>
            Gets a value indicating whether this <see cref="T:Sitecore.Caching.ICacheable" /> is immutable.
            </summary>
            <value><c>true</c> if immutable; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReader.GetDataLength">
            <summary>Gets the size of the data to use when caching.</summary>
            <returns>The data length.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReader.GetFieldValue(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Gets the field value.
            </summary>
            <param name="field">The field.</param>
            <returns>The field value.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReader.GetIndexFieldName(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>Gets the name of the index field.</summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.FieldReaderCache">
            <summary>
            The field reader cache.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderCache.#ctor(System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.FieldReaders.FieldReaderCache" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="maxSize">The max size.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderCache.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.FieldReaders.FieldReaderCache"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderCache.Add(Sitecore.ContentSearch.IIndexableDataField,Sitecore.ContentSearch.FieldReaders.FieldReader)">
            <summary>The add.</summary>
            <param name="field">The field.</param>
            <param name="fieldReader">The field reader.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderCache.Get(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>The get.</summary>
            <param name="field">The field.</param>
            <returns>The <see cref="T:Sitecore.ContentSearch.FieldReaders.FieldReader" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.FieldReaderConfiguration">
            <summary>
            The field reader configuration.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderConfiguration.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.FieldReaders.FieldReaderConfiguration"/> class.
            </summary>
            <param name="fieldReaderTypeName">
            Name of the field crawler type.
            </param>
            <param name="fieldType">
            Type of the field.
            </param>
            <param name="indexFieldType">
            Type of the index field.
            </param>
        </member>
        <member name="P:Sitecore.ContentSearch.FieldReaders.FieldReaderConfiguration.FieldType">
            <summary>
            Gets the type of the field.
            </summary>
            <value>
            The type of the field.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.FieldReaders.FieldReaderConfiguration.IndexFieldType">
            <summary>
            Gets the type of the index field.
            </summary>
            <value>
            The type of the index field.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.FieldReaders.FieldReaderConfiguration.FieldReaderType">
            <summary>
            Gets the type of the field crawler.
            </summary>
            <value>
            The type of the field crawler.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.FieldReaderMap">
            <summary>
            The field reader factory.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.FieldReaderCacheNameFormat">
            <summary>
            The field reader cache name format.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.fieldReaderCache">
            <summary>
            The field reader cache.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.fieldNameMap">
            <summary>
            The field type name map
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.fieldNameMapCache">
            <summary>
            The field type name map cache
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.fieldTypeNameMap">
            <summary>
            The field type name map
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.fieldTypeNameMapCache">
            <summary>
            The field type name map cache
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.fieldTypeMap">
            <summary>
            The field type map.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.fieldTypeMapCache">
            <summary>
            The field type cache
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.richTextFieldReader">
            <summary>
            The rich text field reader.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.defaultFieldReader">
            <summary>
            The default field reader.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.FieldReaders.FieldReaderMap"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.FieldReaders.FieldReaderMap"/> class.
            </summary>
            <param name="id">The field reader map id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.AddFieldReaderByFieldName(System.Xml.XmlNode)">
            <summary>
            Adds the name of the field reader by field.
            </summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.AddFieldReaderByFieldName(System.String,System.String)">
            <summary>
            The add field reader by field name.
            </summary>
            <param name="fieldName">
            The field name.
            </param>
            <param name="fieldReaderType">
            The field reader type.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.AddFieldReaderByFieldTypeName(System.Xml.XmlNode)">
            <summary>
            Adds the name of the field reader by field type.
            </summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.AddFieldReaderByFieldTypeName(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            The add field reader by field type name.
            </summary>
            <param name="fieldReaderType">
            The field reader type.
            </param>
            <param name="fieldTypeNames">
            The field type names.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.AddFieldReaderByType(System.Xml.XmlNode)">
            <summary>
            Adds the type of the field reader by.
            </summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.AddFieldReaderByType(System.Type,System.Type)">
            <summary>
            The add field reader by type.
            </summary>
            <param name="fieldType">
            The field type.
            </param>
            <param name="fieldReaderType">
            The field reader type.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.Add(Sitecore.ContentSearch.FieldReaders.FieldReaderConfiguration)">
            <summary>
            Adds the specified field reader configuration.
            </summary>
            <param name="fieldReaderConfiguration">The field reader configuration.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.Add(System.Type,System.Type)">
            <summary>
            Adds the specified field type.
            </summary>
            <param name="fieldType">Type of the field.</param>
            <param name="fieldTypeReader">The field type reader.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.GetFieldValue(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Gets the field value.
            </summary>
            <param name="field">The field.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.GetFieldReader(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Gets the field crawler.
            </summary>
            <param name="field">The field.</param>
            <returns>The field crawler.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.TryFieldReaderCache(Sitecore.ContentSearch.IIndexableDataField,Sitecore.ContentSearch.FieldReaders.FieldReader@)">
            <summary>
            The try field reader cache.
            </summary>
            <param name="field">
            The field.
            </param>
            <param name="reader">
            The reader.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.CreateFieldReader(Sitecore.ContentSearch.FieldReaders.FieldReaderConfiguration)">
            <summary>
            Creates the field reader.
            </summary>
            <param name="fieldReaderConfiguration">The field reader configuration.</param>
            <returns>The field reader.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.FieldReaderMap.CreateFieldReader(System.Type)">
            <summary>
            Creates the field reader.
            </summary>
            <param name="fieldReaderType">Type of the field reader.</param>
            <returns>The field reader.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.ImageFieldReader">
            <summary>
            Field reader for handling Image fields.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.ImageFieldReader.GetFieldValue(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Gets the field value.
            </summary>
            <param name="field">The field.</param>
            <returns>
            The field value.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.LookupFieldReader">
            <summary>
            The lookup field reader.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.LookupFieldReader.GetFieldValue(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Gets the field value.
            </summary>
            <param name="field">The field.</param>
            <returns> The field value. </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.NullFieldReader">
            <summary>
            The field reader that can be used to disable field reading.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.NullFieldReader.GetFieldValue(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>Gets the field value.</summary>
            <param name="field">The field.</param>
            <returns>The field value.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.NumericFieldReader">
            <summary>
            The numeric field reader.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.NumericFieldReader.GetFieldValue(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Gets the field value.
            </summary>
            <param name="field">The field.</param>
            <returns>
            The field value.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.FieldReaders.RichTextFieldReader">
            <summary>
            The rich text field reader.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FieldReaders.RichTextFieldReader.GetFieldValue(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Gets the field value.
            </summary>
            <param name="field">The field.</param>
            <returns>
            The field value.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.FlatDataCrawler`1">
            <summary>
            The flat data crawler.
            </summary>
            <typeparam name="T">The type of the indexables to crawl.</typeparam>
        </member>
        <member name="F:Sitecore.ContentSearch.FlatDataCrawler`1.currentCrawlOperations">
            <summary>
            The current crawl operations.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.FlatDataCrawler`1" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.#ctor(Sitecore.ContentSearch.IIndexOperations)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.FlatDataCrawler`1" /> class.
            </summary>
            <param name="indexOperations">The index operations.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.RebuildFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>Rebuilds from root.</summary>
            <param name="context">The context.</param>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.RefreshFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,`0,Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>Refreshes from root.</summary>
            <param name="context">The context.</param>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.GetItemsToIndex">
            <summary>The get items to index.</summary>
            <returns>The <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.GetNumberOfItemsToIndex">
            <summary>Gets the index of the number of items to.</summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.OnStopIndexing">
            <summary>Called when the stop has indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.OnPauseIndexing">
            <summary>Called when the pause has indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.OnResumeIndexing">
            <summary>Called when the resume has indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.Add(Sitecore.ContentSearch.IProviderUpdateContext)">
            <summary>Adds the specified context.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.Add(Sitecore.ContentSearch.IProviderUpdateContext,System.Threading.CancellationToken)">
            <summary>Adds the specified context.</summary>
            <param name="context">The context.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.Update(Sitecore.ContentSearch.IProviderUpdateContext)">
            <summary>Updates the specified context.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.Update(Sitecore.ContentSearch.IProviderUpdateContext,System.Threading.CancellationToken)">
            <summary>Updates the specified context.</summary>
            <param name="context">The context.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.FlatDataCrawler`1.CrawlState`1">
            <summary>The crawl state.</summary>
            <typeparam name="TCrawl"></typeparam>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.CrawlState`1.#ctor(System.Threading.Tasks.ParallelOptions,Sitecore.ContentSearch.ISearchIndex,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.FlatDataCrawler`1.CrawlState`1" /> class.
            </summary>
            <param name="parallelOptions">The parallel options.</param>
            <param name="index">The index.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.CrawlState`1.WaitUntilUnPaused">
            <summary>Waits the until un paused.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.CrawlState`1.Pause">
            <summary>Pauses this instance.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.CrawlState`1.Resume">
            <summary>Resumes this instance.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.FlatDataCrawler`1.CrawlState`1.Cancel">
            <summary>Cancels this instance.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.HierarchicalDataCrawler`1">
            <summary>
            The hierarchical data crawler.
            </summary>
            <typeparam name="T">The type of the indexables to crawl.</typeparam>
        </member>
        <member name="F:Sitecore.ContentSearch.HierarchicalDataCrawler`1.currentCrawlOperations">
            <summary>
            The current crawl operations.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.HierarchicalDataCrawler`1" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.#ctor(Sitecore.ContentSearch.IIndexOperations)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.HierarchicalDataCrawler`1" /> class.
            </summary>
            <param name="indexOperations">The index operations.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.RebuildFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>Rebuilds from root.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.RefreshFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,`0,Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>Refreshes from root.</summary>
            <param name="context">The context.</param>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.GetIndexableRoot">
            <summary>Gets the indexable root.</summary>
            <returns>The root indexable.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.GetIndexableChildrenIds(`0)">
            <summary>Gets the indexable children ids.</summary>
            <param name="parent">The parent.</param>
            <returns>The indexable children ids for the specified <paramref name="parent"/></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.GetIndexableChildren(`0)">
            <summary>Gets the indexable children.</summary>
            <param name="parent">The parent.</param>
            <returns>The indexable children for the specified <paramref name="parent"/></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.GetIndexable(Sitecore.ContentSearch.IIndexableId,System.Globalization.CultureInfo)">
            <summary>Gets the indexable.</summary>
            <param name="indexableId">The indexable id.</param>
            <param name="culture">The culture.</param>
            <returns>The indexable with the specified <paramref name="indexableId"/>.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.OnStopIndexing">
            <summary>Called when the stop has indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.OnPauseIndexing">
            <summary>Called when the pause has indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.OnResumeIndexing">
            <summary>Called when the resume has indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.AddHierarchicalRecursive(`0,Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.ProviderIndexConfiguration,System.Threading.CancellationToken)">
            <summary>Adds the hierarchical recursive.</summary>
            <param name="rootItem">The root item.</param>
            <param name="context">The context.</param>
            <param name="indexConfiguration">The index configuration.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.UpdateHierarchicalRecursive(Sitecore.ContentSearch.IProviderUpdateContext,`0,System.Threading.CancellationToken)">
            <summary>Updates the recursive.</summary>
            <param name="context">The context.</param>
            <param name="indexable">The indexable.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.CrawlItem(System.Object)">
            <summary>Crawls the item.</summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.CrawlItem(System.Tuple{Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.HierarchicalDataCrawler{`0}.CrawlState{`0}})">
            <summary>Crawls the item.</summary>
            <param name="tuple">The tuple.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.CrawlItem(`0,Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.HierarchicalDataCrawler{`0}.CrawlState{`0})">
            <summary>Crawls the item.</summary>
            <param name="indexable">Indexable item.</param>
            <param name="context">Provider update context</param>
            <param name="crawlState">Crawl state.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.HierarchicalDataCrawler`1.CrawlState`1">
            <summary>The crawl state.</summary>
            <typeparam name="TCrawl"></typeparam>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.CrawlState`1.#ctor(Sitecore.ContentSearch.ISearchIndex,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.HierarchicalDataCrawler`1.CrawlState`1" /> class.
            </summary>
            <param name="index">The index.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.HierarchicalDataCrawler`1.CrawlState`1.EnableSecurity">
            <summary>
            Gets or sets a value indicating whether Sitecore security should be enabled.
            </summary>
            <value>
              <c>true</c> if Sitecore security should be enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.CrawlState`1.WaitUntilUnPaused">
            <summary>Waits the until un paused.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.CrawlState`1.Pause">
            <summary>Pauses this instance.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.CrawlState`1.Resume">
            <summary>Resumes this instance.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.HierarchicalDataCrawler`1.CrawlState`1.Cancel">
            <summary>Cancels this instance.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Hooks.Initializer">
            <summary>The initializer.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Hooks.Initializer.Initialize">
            <summary>
            All all the initialization code here
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ICommitPolicy">
            <summary>
            The CommitPolicy interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ICommitPolicy.ShouldCommit">
            <summary>
            Gets a value indicating whether commit should be called.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ICommitPolicy.IndexModified(System.Object,Sitecore.ContentSearch.IndexOperation)">
            <summary>
            Indicates that the index was modified.
            </summary>
            <param name="document">The document.</param>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ICommitPolicy.Committed">
            <summary>Notifies the commit policy that commit has been called.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ICommitPolicyExecutor">
            <summary>
            The CommitPolicyExecutor interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ICommitPolicyExecutor.AddCommitPolicy(Sitecore.ContentSearch.ICommitPolicy)">
            <summary>
            Adds a commit policy.
            </summary>
            <param name="commitPolicy">The commit policy.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ICommitPolicyExecutor.IndexModified(Sitecore.ContentSearch.IProviderUpdateContext,System.Object,Sitecore.ContentSearch.IndexOperation)">
            <summary>
            Notifies the commit policy that the index have been modified and executes actions depending on the policy.
            </summary>
            <param name="context">The context.</param>
            <param name="document">The document.</param>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ICommitPolicyExecutor.Committed">
            <summary>Notifies the commit policy that commit have been performed.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule">
            <summary>
            The DefaultDocumentMapperFactoryRule interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule.BaseType">
            <summary>Gets or sets the type of the base.</summary>
            <value>The type of the base.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule.CreationType">
            <summary>Gets or sets the type of the creation.</summary>
            <value>The type of the creation.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule.TypeDistanceWeight">
            <summary>Gets or sets the type distance weight.</summary>
            <value>The type distance weight.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule.RuleKey">
            <summary>Gets the rule key.</summary>
            <value>The rule key.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule.GetRequiredDocumentFields(Sitecore.ContentSearch.AbstractFieldNameTranslator)">
            <summary>Gets the required document fields.</summary>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns>List of fieldnames that is required for the rule to execute.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule.GetWeight(System.Type)">
            <summary>Gets the weight.</summary>
            <param name="baseType">Type of the base.</param>
            <returns>The rule weight.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IDefaultDocumentMapperFactoryRule.MatchesDocument(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},Sitecore.ContentSearch.Linq.Parsing.IIndexValueFormatter,Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>Matches the document.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="fieldValues">The field values.</param>
            <param name="valueFormatter">The value formatter.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns><c>true</c> if the document matches the rule; otherwise <c>false</c></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IDocumentBuilderOptions">
            <summary>
            The DocumentBuilderOptions interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.IndexName">
            <summary>
            Gets or sets the name of the index.
            </summary>
            <value>
            The name of the index.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.Database">
            <summary>
            Gets or sets the database.
            </summary>
            <value>
            The database.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.Root">
            <summary>
            Gets or sets the root.
            </summary>
            <value>
            The root.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.Tags">
            <summary>
            Gets or sets the tags.
            </summary>
            <value>
            The tags.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.IndexAllFields">
            <summary>
            Gets or sets a value indicating whether [index all fields].
            </summary>
            <value>
              <c>true</c> if [index all fields]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.ExcludeAllSpecialFields">
            <summary>
            Gets or sets a value indicating whether [exclude all special fields].
            </summary>
            <value>
            <c>true</c> if [exclude all special fields]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.ProcessDependencies">
            <summary>
            Gets or sets a value indicating whether process dependencies.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.ExcludedTemplates">
            <summary>
            Gets the excluded templates.
            </summary>
            <value>
            The excluded templates.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.HasExcludedTemplates">
            <summary>
            Gets a value indicating whether this instance has excluded templates.
            </summary>
            <value>
            <c>true</c> if this instance has excluded templates; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.IncludedTemplates">
            <summary>
            Gets the included templates.
            </summary>
            <value>
            The included templates.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.HasIncludedTemplates">
            <summary>
            Gets a value indicating whether this instance has included templates.
            </summary>
            <value>
            <c>true</c> if this instance has included templates; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.CheckTemplateInheritance">
            <summary>
            Gets a value indicating whether include/exclude filters should check base templates.
            </summary>
            <value>
            <code>true</code> if base templates should be examined when evaluating template include/exclude values; otherwise <code>false</code>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.IncludedFields">
            <summary>
            Gets the included fields.
            </summary>
            <value>
            The included fields.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.HasIncludedFields">
            <summary>
            Gets a value indicating whether this instance has included fields.
            </summary>
            <value>
            <c>true</c> if this instance has included fields; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.ExcludedFields">
            <summary>
            Gets the excluded fields.
            </summary>
            <value>
            The excluded fields.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.HasExcludedFields">
            <summary>
            Gets a value indicating whether this instance has excluded fields.
            </summary>
            <value>
            <c>true</c> if this instance has excluded fields; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.IndexingFilters">
            <summary>
            Gets the indexing filters.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.ExcludedTemplateFields">
            <summary>
            Gets the excluded template fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.HasExcludedTemplateFields">
            <summary>
            Gets a value indicating whether has excluded template fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.ExcludedMediaFields">
            <summary>
            Gets the excluded media fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.HasExcludedMediaFields">
            <summary>
            Gets a value indicating whether has excluded media fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentBuilderOptions.ComputedIndexFields">
            <summary>
            Gets the computed index fields.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IDocumentBuilderOptions.AddFieldFilter(System.String,System.Boolean,Sitecore.ContentSearch.IndexingFilterLimitScope)">
            <summary>
            The add field filter.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="isIncluded">
            The is included.
            </param>
            <param name="limitScope">
            The limit scope.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.IDocumentBuilderOptions.AddTemplateFilter(System.String,System.Boolean)">
            <summary>
            The add template filter.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="isIncluded">
            The is included.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.IDocumentBuilderOptions.AddExcludedTemplate(System.String)">
            <summary>
            Adds the template ID to the excluded template list.
            </summary>
            <param name="templateId">The template id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IDocumentBuilderOptions.AddIncludedTemplate(System.String)">
            <summary>
            Adds the template ID to the included template list.
            </summary>
            <param name="templateId">The template id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IDocumentBuilderOptions.AddIncludedField(System.String)">
            <summary>
            Adds the field ID to the included field list.
            </summary>
            <param name="fieldId">The field id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IDocumentBuilderOptions.AddExcludedField(System.String)">
            <summary>
            Adds the field ID to the excluded field list.
            </summary>
            <param name="fieldId">The field id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IDocumentBuilderOptions.AddExcludedSpecialField(System.Xml.XmlNode)">
            <summary>
            Adds a filter to the excluded fields list from configuration.
            </summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IDocumentBuilderOptions.AddIncludedSpecialField(System.Xml.XmlNode)">
            <summary>
            Adds a filter to the included fields list from configuration.
            </summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IDocumentBuilderOptions.AddComputedIndexField(System.Xml.XmlNode)">
            <summary>
            Adds a computed index field from the configuration node.
            </summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.IDocumentFieldsToTypeMapper">
            <summary>
            Maps document fields into object properteis and fields.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IDocumentFieldsToTypeMapper.MapDocumentFieldsToType(System.Collections.Generic.IEnumerable{System.String},System.Type,Sitecore.ContentSearch.MappingTargetType)">
            <summary>
            Maps index document fields into type properties.
            </summary>
            <param name="type">The result type.</param>
            <param name="target">Mapping target type.</param>
            <param name="documentFieldNames">The index document fields.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IDocumentTypedIndexable">
            <summary>
            The DocumentTypedIndexable interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IDocumentTypedIndexable.DocumentType">
            <summary>Gets the type of the document.</summary>
            <value>The type of the document.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.IFieldMap">
            <summary>
            The FieldMap interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IFieldMap.AddTypeMatch(System.Xml.XmlNode)">
            <summary>
            Adds the type match.
            </summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IFieldMap.AddTypeMatch(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String},System.Xml.XmlNode)">
            <summary>Adds the type match.</summary>
            <param name="typeName">Name of the type.</param>
            <param name="settingType">Type of the setting.</param>
            <param name="attributes">The attributes.</param>
            <param name="configNode">The configuration node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IFieldMap.AddFieldByFieldName(System.Xml.XmlNode)">
            <summary>
            Adds the name of the field reader by field.
            </summary>
            <param name="configNode">
            The config node.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.IFieldMap.AddFieldByFieldName(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String},System.Xml.XmlNode)">
            <summary>The add field by field name.</summary>
            <param name="fieldName">The field name.</param>
            <param name="settingType">The setting type.</param>
            <param name="attributes">The attributes.</param>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IFieldMap.AddFieldByFieldTypeName(System.Xml.XmlNode)">
            <summary>
            Adds the name of the field reader by field type.
            </summary>
            <param name="configNode">
            The config node.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.IFieldMap.AddFieldByFieldTypeName(System.Type,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Xml.XmlNode)">
            <summary>Adds the name of the field by field type.</summary>
            <param name="settingType">Type of the setting.</param>
            <param name="fieldTypeNames">The field type names.</param>
            <param name="attributes">The attributes.</param>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IFieldMap.GetFieldConfiguration(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Gets the field configuration.
            </summary>
            <param name="field">The field.</param>
            <returns>The field configuration.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IFieldMap.GetFieldConfiguration(Sitecore.ContentSearch.IIndexableDataField,System.Func{Sitecore.ContentSearch.AbstractSearchFieldConfiguration,System.Boolean})">
            <summary>Gets the field configuration.</summary>
            <param name="field">The field.</param>
            <param name="fieldVisitorFunc">The field visitor function.</param>
            <returns>The field configuration.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IFieldMap.GetFieldConfigurationByFieldTypeName(System.String)">
            <summary>
            Gets the field configuration by field type name.
            </summary>
            <param name="fieldTypeName">The field type name.</param>
            <returns>The field configuration.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IFieldMapEx">
            <summary>
            Extended IFieldMap interface to avoid breaking changes. 
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IFieldMapEx.AddFieldByFieldName(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String},System.Xml.XmlNode)">
            <summary>
            Adds the name of the field by field.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="settingType">Type of the setting.</param>
            <param name="attributes">The attributes.</param>
            <param name="configNode">The configuration node.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IHashedIndexable.GetIndexableHashCode">
            <summary>Generates a hash for an indexable record.</summary>
            <value>The calculated hash</value>
        </member>
        <member name="T:Sitecore.ContentSearch.IHierarchicalIndexable">
            <summary>
            The HierarchicalIndexable interface.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.IIndexable">
            <summary>
            The Indexable interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexable.Id">
            <summary>Gets the id.</summary>
            <value>The id.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexable.UniqueId">
            <summary>Gets the unique id.</summary>
            <value>The unique id.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexable.DataSource">
            <summary>Gets the data source.</summary>
            <value>The data source.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexable.AbsolutePath">
            <summary>Gets the absolute path.</summary>
            <value>The absolute path.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexable.Culture">
            <summary>Gets the culture info.</summary>
            <value>The culture info.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexable.Fields">
            <summary>Gets the fields.</summary>
            <value>The fields.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexable.LoadAllFields">
            <summary>Loads all fields.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexable.GetFieldById(System.Object)">
            <summary>Gets the field by id.
            <para>Returns null if the indexable doesn't have the field or if <paramref name="fieldId"/> has an unsupported type.</para>
            </summary>
            <param name="fieldId">The field id.</param>
            <returns>The <see cref="T:Sitecore.ContentSearch.IIndexableDataField"/> with the specified <paramref name="fieldId"/></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexable.GetFieldByName(System.String)">
            <summary>Gets the name of the field by.</summary>
            <param name="fieldName">Name of the field.</param>
            <returns>The <see cref="T:Sitecore.ContentSearch.IIndexableDataField"/> with the specified <paramref name="fieldName"/></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IIndexableBuiltinFields">
            <summary>
            The IndexableBuiltinFields interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.ID">
            <summary>Gets the ID.</summary>
            <value>The ID.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.Database">
            <summary>Gets the database.</summary>
            <value>The database.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.Language">
            <summary>Gets the language.</summary>
            <value>The language.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.TemplateId">
            <summary>Gets the template id.</summary>
            <value>The template id.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.Parent">
            <summary> Gets the parent of the current item. </summary>
            <value> The parent. </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.IsLatestVersion">
            <summary>
            Gets or sets a value indicating whether this instance is latest version.
            </summary>
            <value>
            <c>true</c> if this instance is latest version; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.Version">
            <summary>Gets the version.</summary>
            <value>The version.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.Group">
            <summary>Gets the group.</summary>
            <value>The group.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.IsClone">
            <summary>Gets a value indicating whether this instance is clone.</summary>
            <value><c>true</c> if this instance is clone; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.FullPath">
            <summary>Gets the full path.</summary>
            <value>The full path.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.DisplayName">
            <summary>Gets the display name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.CreatedBy">
            <summary>Gets the created by.</summary>
            <value>The created by.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.UpdatedBy">
            <summary>Gets the updated by.</summary>
            <value>The updated by.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.TemplateName">
            <summary>Gets the name of the template.</summary>
            <value>The name of the template.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.CreatedDate">
            <summary>Gets the created date.</summary>
            <value>The created date.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.UpdatedDate">
            <summary>Gets the updated date.</summary>
            <value>The updated date.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableBuiltinFields.Paths">
            <summary>Gets the paths.</summary>
            <value>The paths.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableChangeEvent.Indexable">
            <summary>Gets the indexable.</summary>
            <value>The indexable.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableChangeEvent`2.ChangeReason">
            <summary>Gets the change reason.</summary>
            <value>The change reason.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableChangeEvent`2.Indexable">
            <summary>Gets the indexable.</summary>
            <value>The indexable.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.IIndexableDataField">
            <summary>
            The IndexableDataField interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableDataField.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableDataField.TypeKey">
            <summary>Gets the field type key.</summary>
            <value>The field type key.</value>
            <remarks>Used for looking up field readers in the <see cref="T:Sitecore.ContentSearch.FieldReaders.FieldReaderMap"/></remarks>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableDataField.FieldType">
            <summary>Gets the field type.</summary>
            <value>The type of the field.</value>
            <remarks>Used for looking up field readers in the <see cref="T:Sitecore.ContentSearch.FieldReaders.FieldReaderMap"/></remarks>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableDataField.Value">
            <summary>Gets the field value.</summary>
            <value>The field value.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableDataField.Id">
            <summary>Gets the field id.</summary>
            <value>The field id.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.IIndexableId">
            <summary>
            The IndexableId interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableId.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.IIndexableUniqueId">
            <summary>
            The IndexableUniqueId interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableUniqueId.GroupId">
            <summary>
            Gets the group id.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IIndexableUniqueId.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.IIndexDocumentPropertyMapper`1">
            <summary>
            The index document mapper.
            </summary>
            <typeparam name="TDocument">The index document type</typeparam>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexDocumentPropertyMapper`1.GetDocumentFieldsToRead``1(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Gets the document fields to read.</summary>
            <typeparam name="TElement">The type of the element.</typeparam>
            <param name="executionContexts">The execution contexts.</param>
            <returns>The document fields to read.</returns>
            <remarks>
            Used to specify which fields the index document should contain.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexDocumentPropertyMapper`1.MapToType``1(`0,Sitecore.ContentSearch.Linq.Methods.SelectMethod,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IFieldQueryTranslator},System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext},Sitecore.ContentSearch.Security.SearchSecurityOptions)">
            <summary>Maps to type.</summary>
            <typeparam name="TElement">The type of the element.</typeparam>
            <param name="document">The document.</param>
            <param name="selectMethod">The select method.</param>
            <param name="virtualFieldProcessors">The virtual field processors.</param>
            <param name="executionContexts">The execution contexts.</param>
            <param name="securityOptions">The security options.</param>
            <returns>The <see cref="!:TElement" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IIndexDocumentPropertyMapperObjectFactory">
            <summary>
            The IndexDocumentPropertyMapperFactory interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexDocumentPropertyMapperObjectFactory.GetTypeIdentifyingFields(System.Type,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Gets the type identifying fields.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="executionContexts">The execution contexts.</param>
            <returns>List of identifying fields.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexDocumentPropertyMapperObjectFactory.GetPotentialCreatedTypes(System.Type,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Gets the potential created types.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="executionContexts">The execution contexts.</param>
            <returns>List of potential created types.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexDocumentPropertyMapperObjectFactory.CreateElementInstance(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>Creates the element instance.</summary>
            <param name="baseType">Type of the base.</param>
            <param name="fieldValues">The field values.</param>
            <param name="executionContexts">The execution contexts.</param>
            <returns>The element instance.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IIndexOperations">
            <summary>
            The IndexOperations interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexOperations.Update(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.ProviderIndexConfiguration)">
            <summary>Updates the specified indexable item.</summary>
            <param name="indexable">The indexable.</param>
            <param name="context">The update context.</param>
            <param name="indexConfiguration">The index configuration.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexOperations.Delete(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IProviderUpdateContext)">
            <summary>Deletes the specified indexable item.</summary>
            <param name="indexable">The indexable.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexOperations.Delete(Sitecore.ContentSearch.IIndexableId,Sitecore.ContentSearch.IProviderUpdateContext)">
            <summary>Deletes the indexables specified id.</summary>
            <param name="id">The id.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexOperations.Delete(Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IProviderUpdateContext)">
            <summary>Deletes the indexable with the specified unique id.</summary>
            <param name="indexableUniqueId">The unique id.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IIndexOperations.Add(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.ProviderIndexConfiguration)">
            <summary>Adds the specified indexable item.</summary>
            <param name="indexable">The indexable.</param>
            <param name="context">The context.</param>
            <param name="indexConfiguration">The index configuration.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableChangeEvent`2.#ctor(Sitecore.ContentSearch.IIndexableUniqueId,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexableChangeEvent`2"/> class.
            </summary>
            <param name="uniqueId">The unique identifier.</param>
            <param name="reason">The reason.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableChangeEvent`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IIndexableChangeEvent`2"/> class.
            </summary>
            <param name="indexable">The indexable.</param>
            <param name="reason">The reason.</param>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexableCrawlQueue`1.syncObject">
            <summary>The synchronize object</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexableCrawlQueue`1.queue">
            <summary>The queue</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexableCrawlQueue`1.indexables">
            <summary>The indexables</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableCrawlQueue`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexableCrawlQueue`1"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableCrawlQueue`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexableCrawlQueue`1"/> class.
            </summary>
            <param name="initialCapacity">The initial capacity.</param>
            <exception cref="T:System.ArgumentException">initialCapacity cannot be negative;initialCapacity</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableCrawlQueue`1.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableCrawlQueue`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableCrawlQueue`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableCrawlQueue`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableCrawlQueue`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableCrawlQueue`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableCrawlQueue`1.CopyTo(`0[],System.Int32)">
            <summary>Copies to.</summary>
            <param name="array">The array.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableCrawlQueue`1.TryAdd(`0)">
            <summary>
            Attempts to add an object to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</param>
            <returns>true if the object was added successfully; otherwise, false.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableCrawlQueue`1.TryTake(`0@)">
            <summary>
            Attempts to remove and return an object from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.
            </summary>
            <param name="item">When this method returns, if the object was removed and returned successfully, <paramref name="item" /> contains the removed object. If no object was available to be removed, the value is unspecified.</param>
            <returns>
            true if an object was removed and returned successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableCrawlQueue`1.ToArray">
            <summary>
            Copies the elements contained in the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> to a new array.
            </summary>
            <returns>
            A new array containing the elements copied from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IndexableDataField">
            <summary>
            The indexable data field.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableDataField.CreateFromProperties(System.Type,System.String,System.String[])">
            <summary>Creates enumeration of IIndexableDataField base on the given type.</summary>
            <param name="type">The type.</param>
            <param name="rootname">The root name.</param>
            <param name="propertyNames">The property names.</param>
            <returns>IEnumerable of <see cref="T:Sitecore.ContentSearch.IIndexableDataField"/>.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableDataField.CreateFromProperties``1(``0,System.String,System.String[])">
            <summary>Creates from properties.</summary>
            <typeparam name="T">The type of <paramref name="obj"/></typeparam>
            <param name="obj">The object.</param>
            <param name="rootname">The root name.</param>
            <param name="propertyNames">The property names.</param>
            <returns>IEnumerable of <see cref="T:Sitecore.ContentSearch.IIndexableDataField"/>.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableDataField.CreateFromProperties(System.Object,System.String,System.String[])">
            <summary>Creates enumeration of IIndexableDataField base on the given object.</summary>
            <param name="obj">The object.</param>
            <param name="rootname">The root name.</param>
            <param name="propertyNames">The property names.</param>
            <returns>IEnumerable of <see cref="T:Sitecore.ContentSearch.IIndexableDataField"/>.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableDataField.GetProperties(System.Type,System.String[])">
            <summary>Gets the properties for the given type, restricted by the given propertyNames.</summary>
            <param name="type">The type.</param>
            <param name="propertyNames">The property names.</param>
            <returns>IEnumerable of <see cref="T:System.Reflection.PropertyInfo"/>.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableDataField.CompileFields(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.String,System.Object)">
            <summary>Compiles the IIndexableDataFields to be returned.</summary>
            <param name="properties">The properties.</param>
            <param name="rootname">The rootname.</param>
            <param name="instance">The instance.</param>
            <returns>IEnumerable of <see cref="T:Sitecore.ContentSearch.IIndexableDataField"/>.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableDataField.#ctor(System.Object,System.String,System.Object,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexableDataField"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableDataField.#ctor(System.String,System.Object,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexableDataField`1"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableDataField.Name">
            <summary>Gets or sets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableDataField.TypeKey">
            <summary>Gets or sets the field type key.</summary>
            <value>The field type key.</value>
            <remarks>
            Used for looking up field readers in the <see cref="T:Sitecore.ContentSearch.FieldReaders.FieldReaderMap" />
            </remarks>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableDataField.FieldType">
            <summary>Gets or sets the field type.</summary>
            <value>The type of the field.</value>
            <remarks>
            Used for looking up field readers in the <see cref="T:Sitecore.ContentSearch.FieldReaders.FieldReaderMap" />
            </remarks>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableDataField.Value">
            <summary>Gets or sets the field value.</summary>
            <value>The field value.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableDataField.Id">
            <summary>Gets or sets the field id.</summary>
            <value>The field id.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.IndexableDataField`1">
            <summary>The indexable data field.</summary>
            <typeparam name="T">The data field value type.</typeparam>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableDataField`1.#ctor(System.Object,System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexableDataField`1"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableDataField`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexableDataField`1"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.IndexableId`1">
            <summary>
            The indexable id.
            </summary>
            <typeparam name="T">Type of the id value</typeparam>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexableId`1.id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableId`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexableId`1" /> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableId`1.Value">
            <summary>Gets the value.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableId`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableId`1.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableId`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IndexableInfo">
            <summary>
            Represents data required for index update after publish.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexableInfo"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableInfo.#ctor(Sitecore.ContentSearch.IIndexableUniqueId,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexableInfo"/> class.
            </summary>
            <param name="indexableUniqueId">Instance of the <see cref="T:Sitecore.ContentSearch.IIndexableUniqueId"/> interface.</param>
            <param name="timestamp">Operation timestamp.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableInfo.#ctor(Sitecore.ContentSearch.IIndexableUniqueId,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexableInfo"/> class.
            </summary>
            <param name="indexableUniqueId">The indexable unique identifier.</param>
            <param name="created">The created.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableInfo.IndexableUniqueId">
            <summary>
            Gets or sets IndexableUniqueId.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableInfo.Timestamp">
            <summary>
            Gets or sets timestamp of event that requires index update.
            Determines order of index update.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableInfo.Created">
            <summary>
            Gets or sets the created.
            </summary>
            <value>The created.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableInfo.IndexableId">
            <summary>
            Gets or sets the indexable unique identifier.
            </summary>
            <value> The indexable unique identifier.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableInfo.IsSharedFieldChanged">
            <summary>
            Gets or sets a value indicating whether shared field was changed for indexable.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableInfo.IsUnversionedFieldChanged">
            <summary>
            Gets or sets a value indicating whether shared field was changed for indexable.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableInfo.NeedUpdateChildren">
            <summary>
            Gets or sets a value indicating whether need update children.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableInfo.IsVersionAdded">
            <summary>
            Gets or sets a value indicating whether this instance is version added.
            </summary>
            <value>
            <c>true</c> if this instance is version added; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableInfo.OldParentId">
            <summary>
            Gets or sets the old parent id.
            </summary>
            <value>
            The old parent id, if the item was moved; otherwise, null.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.IndexableUniqueId`1">
            <summary>
            The indexable unique id.
            </summary>
            <typeparam name="T">The type of the id value</typeparam>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexableUniqueId`1.id">
            <summary>
            The item uri.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableUniqueId`1.GroupId">
            <summary>Gets the group id.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexableUniqueId`1.Value">
            <summary>Gets the value.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableUniqueId`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableUniqueId`1.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexableUniqueId`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IndexEntryOperationContext">
            <summary>
            The context of index operation.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexEntryOperationContext.NeedUpdateAllLanguages">
            <summary>
            Gets or sets a value indicating whether all languages should be updated.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexEntryOperationContext.NeedUpdateAllVersions">
            <summary>
            Gets or sets a value indicating whether all versions should be updated.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexEntryOperationContext.NeedUpdateChildren">
            <summary>
            Gets or sets a value indicating whether child items should be updated.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexEntryOperationContext.NeedUpdatePreviousVersion">
            <summary>
            Gets or sets a value indicating whether there is need in updating previous version.
            </summary>
            <value>
            <c>true</c> if there is need in updating previous version; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexEntryOperationContext.OldParentId">
            <summary>
            Gets or sets the old parent identifier.
            </summary>
            <value>
            The old parent identifier if the item was moved; otherwise, null.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.IndexGroup">
            <summary>
            Defines the index group object and a list of predefined index groups.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexGroup.Default">
            <summary>
            Defines the default index group.
            It is applied if index group is not specified for the index.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexGroup"/> class.
            </summary>
            <param name="name">The name of the index group.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.IndexGroup.Name">
            <summary>
            Gets or sets the name of the index group.
            </summary>
            <value>
            The name of the index group..
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexGroup.op_Equality(Sitecore.ContentSearch.IndexGroup,Sitecore.ContentSearch.IndexGroup)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="obj1">The first object to compare.</param>
            <param name="obj2">The second object to compare.</param>
            <returns>
            The result of the operator.
            </returns>    
        </member>
        <member name="M:Sitecore.ContentSearch.IndexGroup.op_Inequality(Sitecore.ContentSearch.IndexGroup,Sitecore.ContentSearch.IndexGroup)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="obj1">The first object to compare.</param>
            <param name="obj2">The second object to compare.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexGroup.Equals(Sitecore.ContentSearch.IndexGroup)">
            <summary>
            Determines whether the specified <see cref="T:Sitecore.ContentSearch.IndexGroup" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:Sitecore.ContentSearch.IndexGroup" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:Sitecore.ContentSearch.IndexGroup" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexGroup.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexGroup.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IndexingFilter">
            <summary>
            Filters items as they are being indexed by a crawler
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexingFilter.Id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexingFilter.Filter">
            <summary>
            The filter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexingFilter.IsIncluded">
            <summary>
            The is included.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexingFilter.LimitScope">
            <summary>
            The limit scope.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexingFilter.#ctor(System.String,Sitecore.ContentSearch.IndexingFilterType,System.Boolean,Sitecore.ContentSearch.IndexingFilterLimitScope)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.IndexingFilter" /> class.
            </summary>
            <param name="id">The name or id of the item being indexed.</param>
            <param name="filter">The filter to use.</param>
            <param name="isIncluded">if set to <c>true</c> [is it included or excluded from the index].</param>
            <param name="scope">Only executes this filter if condition is true.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.IndexingOptions">
            <summary>
            The indexing options.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexingOptions.Default">
            <summary>The default indexing options.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexingOptions.ForcedIndexing">
            <summary>Indexing forced.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.IndexingState">
            <summary>
            The crawling state.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexingState.Started">
            <summary>Indexing started.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexingState.Paused">
            <summary>Indexing paused.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexingState.Stopped">
            <summary>Indexing stopped.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.IndexOperation">
            <summary>
            The index operation.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.IndexOperationsHelper">
            <summary>
            The index operations helper.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexOperationsHelper.TextFields">
            <summary>
            temp container with text and non-text fields
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.IndexOperationsHelper.TextFieldTypes">
            <summary>
            The text field types
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexOperationsHelper.GetItemID(Sitecore.ContentSearch.Converters.IIndexFieldStorageValueFormatter,Sitecore.ContentSearch.IIndexable)">
            <summary>
            Gets the item ID.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="item">The item.</param>
            <returns>Formatted ID</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexOperationsHelper.IsHidden(Sitecore.Data.Items.Item)">
            <summary>
            Determines whether the specified item is hidden.
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>true</c> if the specified item is hidden; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexOperationsHelper.StripHtml(System.String)">
            <summary>
            Strips the HTML.
            </summary>
            <param name="input">The input.</param>
            <returns>Text with HTML tags stripped.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexOperationsHelper.GetItemLinks(Sitecore.Data.Items.Item)">
            <summary>
            Gets the item links.
            </summary>
            <param name="item">The item.</param>
            <returns>Item links as list</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexOperationsHelper.GetItemPath(Sitecore.Data.ItemPath)">
            <summary>
            Gets the item path.
            </summary>
            <param name="itemPath">The item.</param>
            <returns>Item path</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexOperationsHelper.IsTextField(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Determines whether [is text field] [the specified field].
            </summary>
            <param name="field">The field.</param>
            <returns>
              <c>true</c> if [is text field] [the specified field]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexOperationsHelper.IsBucketItem(Sitecore.Data.Items.Item)">
            <summary>
            Determines whether [is bucket item] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>true</c> if [is bucket item] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexOperationsHelper.GetBucketContainerOrParent(Sitecore.Data.Items.Item)">
            <summary>
            Gets the bucket container or parent.
            </summary>
            <param name="item">The item.</param>
            <returns>Item which is bucket container or its parent.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexOperationsHelper.IsFieldDisplayedInSearchResults(Sitecore.Data.Fields.Field,Sitecore.Data.Database)">
            <summary>
            Determines whether [is field displayed in search results] [the specified field].
            </summary>
            <param name="field">The field.</param>
            <param name="database">The database.</param>
            <returns>
              <c>true</c> if [is field displayed in search results] [the specified field]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexOperationsHelper.GetSearchResultImagePath(Sitecore.Data.Fields.Field,Sitecore.Data.Items.Item)">
            <summary>
            Gets the search result image path.
            </summary>
            <param name="fieldItem">The field item.</param>
            <param name="item">The item.</param>
            <returns>Image path for a search result.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexOperationsHelper.GetSearchResultContent(Sitecore.Data.Fields.Field)">
            <summary>
            Gets the content of the search result.
            </summary>
            <param name="fieldItem">The field item.</param>
            <returns>Content slug for an item</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IndexOperationsHelper.IsValidTextField(Sitecore.Data.Templates.TemplateField)">
            <summary>
            Defining if a template field is valid text field
            </summary>
            <param name="templateField"></param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Instrumentation.VerboseLogger">
            <summary>
            The verbose logger.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Instrumentation.VerboseLogger.log">
            <summary>
            The log.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Instrumentation.VerboseLogger.Initialize(Sitecore.ContentSearch.Diagnostics.AbstractLog)">
            <summary>Initializes the specified logger.</summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Instrumentation.VerboseLogger.LogIndexPropertyOperation(System.String,System.Object[])">
            <summary>
            The log index property operation.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="parameters">
            The parameters.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Instrumentation.VerboseLogger.LogIndexOperation(System.String,System.Object[])">
            <summary>
            The log index operation.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="parameters">
            The parameters.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.IObjectIndexers">
            <summary>The ObjectIndexers interface.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IObjectIndexers.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.String" /> at the specified index.
            </summary>
            <value>The <see cref="T:System.String" />.</value>
            <param name="index">The index.</param>
            <returns>The <see cref="T:System.String" /> at the specified index.</returns>
        </member>
        <member name="P:Sitecore.ContentSearch.IObjectIndexers.Item(Sitecore.ContentSearch.SearchTypes.ObjectIndexerKey)">
            <summary>
            Gets or sets the <see cref="T:System.Object" /> with the specified key.
            </summary>
            <value>The <see cref="T:System.Object" />.</value>
            <param name="key">The key.</param>
            <returns>The <see cref="T:System.Object" /> at the specified index.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IProviderCrawler">
            <summary>
            The ProviderCrawler interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderCrawler.HasItemsToIndex">
            <summary>Determines whether the crawler has items to index.</summary>
            <returns><c>true</c> if the crawler has items to index, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderCrawler.RebuildFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Rebuilds from root.</summary>
            <param name="context">The context.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderCrawler.RebuildFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>The rebuild from root.</summary>
            <param name="context">The context.</param>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderCrawler.RefreshFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Refreshes from root.</summary>
            <param name="context">The context.</param>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderCrawler.RefreshFromRoot(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>The refresh from root.</summary>
            <param name="context">The context.</param>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderCrawler.Update(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Updates specific indexable</summary>
            <param name="context">update context</param>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderCrawler.Delete(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexableId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Deletes the indexable.</summary>
            <param name="context">The context.</param>
            <param name="indexableId">The indexable id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderCrawler.Delete(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Deletes the indexable.</summary>
            <param name="context">The context.</param>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderCrawler.StopIndexing">
            <summary>Stops the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderCrawler.PauseIndexing">
            <summary>Pauses the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderCrawler.ResumeIndexing">
            <summary>Resumes the indexing.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.IProviderCrawlerEx">
            <summary>
            Extended IProviderCrawler interface to avoid breaking changes. 
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderCrawlerEx.Update(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexEntryOperationContext,Sitecore.ContentSearch.IndexingOptions)">
            <summary>
            Updates specific item.
            </summary>
            <param name="context">The context.</param>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="operationContext">The operation context.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.IProviderDeleteContext">
            <summary>
            The ProviderDeleteContext interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderDeleteContext.Delete(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>The delete by id.</summary>
            <param name="id">The id.</param>
            <returns>The count of deleted documents</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderDeleteContext.Delete(Sitecore.ContentSearch.IIndexableId)">
            <summary>The delete group.</summary>
            <param name="id">The id.</param>
            <returns>The count of deleted documents</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IProviderIndexConfigurationInitializable">
            <summary>
            The ProviderIndexConfigurationInitializable interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderIndexConfigurationInitializable.Initialize(Sitecore.ContentSearch.ProviderIndexConfiguration)">
            <summary>Initializes the specified index configuration.</summary>
            <param name="indexConfiguration">The index configuration.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.IProviderOperationContext">
            <summary>
            The ProviderOperationContext interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderOperationContext.Commit">
            <summary>
            The commit.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderOperationContext.Optimize">
            <summary>
            The optimize.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.IProviderSearchContext">
            <summary>The ProviderSearchContext interface.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IProviderSearchContext.Index">
            <summary>
            Gets the index.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IProviderSearchContext.ConvertQueryDatesToUtc">
            <summary>
            Gets or sets a value indicating whether dates during the querying will be always convert to dates with UTC kind.
            </summary>
            <value>
            <c>true</c> if convert dates to date with UTC kind; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IProviderSearchContext.SecurityOptions">
            <summary>
            Gets the security options.
            </summary>
            <value>
            The security options.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderSearchContext.GetQueryable``1">
            <summary>Gets the queryable.</summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <returns>
            The <see cref="T:System.Linq.IQueryable" />.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderSearchContext.GetQueryable``1(Sitecore.ContentSearch.Linq.Common.IExecutionContext)">
            <summary>Gets the queryable.</summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="executionContext">The execution context.</param>
            <returns>
            The <see cref="T:System.Linq.IQueryable" />.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderSearchContext.GetQueryable``1(Sitecore.ContentSearch.Linq.Common.IExecutionContext[])">
            <summary>Gets the queryable.</summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="executionContexts">The execution contexts.</param>
            <returns>
            The <see cref="T:System.Linq.IQueryable" />.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderSearchContext.GetTermsByFieldName(System.String,System.String)">
            <summary>
            Gets the name of the terms by field.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="prefix">The prefix.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.IProviderStartUp">
            <summary>
            The ProviderStartUp interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderStartUp.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.IProviderUpdateContext">
            <summary>
            The ProviderUpdateContext interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IProviderUpdateContext.IsParallel">
            <summary>
            Gets a value indicating whether is parallel.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IProviderUpdateContext.ParallelOptions">
            <summary>
            Gets parallel configuration options.
            </summary>
            <value>
            The parallel options.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.IProviderUpdateContext.Index">
            <summary>
            Gets the index.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.IProviderUpdateContext.CommitPolicyExecutor">
            <summary>Gets the commit policy executor.</summary>
            <value>The commit policy executor.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IProviderUpdateContext.ShardsWithPendingChanges">
            <summary>Gets the shards with pending changes.</summary>
            <value>The shards with pending changes.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderUpdateContext.AddDocument(System.Object,Sitecore.ContentSearch.Linq.Common.IExecutionContext)">
            <summary>Adds the document.</summary>
            <param name="itemToAdd">The item to add.</param>
            <param name="executionContext">The execution context.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderUpdateContext.AddDocument(System.Object,Sitecore.ContentSearch.Linq.Common.IExecutionContext[])">
            <summary>The add document.</summary>
            <param name="itemToAdd">The item to add.</param>
            <param name="executionContexts">The execution contexts.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderUpdateContext.UpdateDocument(System.Object,System.Object,Sitecore.ContentSearch.Linq.Common.IExecutionContext)">
            <summary>Updates the document.</summary>
            <param name="itemToUpdate">The item to update.</param>
            <param name="criteriaForUpdate">The criteria for update.</param>
            <param name="executionContext">The execution context.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderUpdateContext.UpdateDocument(System.Object,System.Object,Sitecore.ContentSearch.Linq.Common.IExecutionContext[])">
            <summary>The update document.</summary>
            <param name="itemToUpdate">The item to update.</param>
            <param name="criteriaForUpdate">The criteria for update.</param>
            <param name="executionContexts">The execution contexts.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderUpdateContext.Delete(Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.Linq.Common.IExecutionContext[])">
            <summary>
            The delete by id.
            </summary>
            <param name="id">The id.</param>
            <param name="executionContexts">The execution contexts.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.IProviderUpdateContext.Delete(Sitecore.ContentSearch.IIndexableId,Sitecore.ContentSearch.Linq.Common.IExecutionContext[])">
            <summary>
            The delete group.
            </summary>
            <param name="id">The id.</param>
            <param name="executionContexts">The execution contexts.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.ISearchIndex">
            <summary>
            Base interface for an index for a specific provider
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.Summary">
            <summary>Gets the summary.</summary>
            <value>The summary.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.Schema">
            <summary>Gets the schema.</summary>
            <value>The schema.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.PropertyStore">
            <summary>Gets or sets the property storage for the index</summary>
            <value>The property store.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.Group">
            <summary>
            Gets the group of the index.
            </summary>
            <value>
            The group of the index.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.FieldNameTranslator">
            <summary>Gets or sets the field name translator.</summary>
            <value>The field name translator.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.Configuration">
            <summary>Gets or sets the configuration.</summary>
            <value>The configuration.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.Operations">
            <summary>Gets the index operations.</summary>
            <value>The index operations.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.IndexingState">
            <summary>Gets the state of the indexing.</summary>
            <value>The state of the indexing.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.Crawlers">
            <summary>Gets the crawlers used by this index.</summary>
            <value>The crawlers used by this index.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.Locator">
            <summary>Gets the object locator abstraction for static legacy Sitecore helpers.</summary>
            <value>The object locator.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.IsSharded">
            <summary>Gets a value indicating whether this instance is sharded.</summary>
            <value>
            <c>true</c> if this instance is sharded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.EnableItemLanguageFallback">
            <summary>
            Gets a value indicating whether index will store item language fallback values.
            </summary>
            <value>
            <c>true</c> if will store item language fallback values otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.EnableFieldLanguageFallback">
            <summary>
            Gets a value indicating whether index will store field language fallback values.
            </summary>
            <value>
            <c>true</c> if index will store field language fallback values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.ShardingStrategy">
            <summary>Gets or sets the sharding strategy.</summary>
            <value>The sharding strategy.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.ShardFactory">
            <summary>Gets the shard factory.</summary>
            <value>The shard factory.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.Shards">
            <summary>Gets the shards.</summary>
            <value>The shards.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndex.UpdateStrategies">
            <summary>Get and set the the updatestrategies.</summary>
            <value>The IIndexUpdateStrategy.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.AddCrawler(Sitecore.ContentSearch.IProviderCrawler)">
            <summary>Adds the crawler.</summary>
            <param name="crawler">The crawler.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.AddCrawler(Sitecore.ContentSearch.IProviderCrawler,System.Boolean)">
            <summary>Adds the crawler.</summary>
            <param name="crawler">The crawler.</param>
            <param name="initializeCrawler">True if the crawler should be initialized.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.RemoveCrawler(Sitecore.ContentSearch.IProviderCrawler)">
            <summary>Removes the crawler.</summary>
            <param name="crawler">The crawler.</param>
            <returns>true if <paramref name="crawler"/> is successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.RemoveAllCrawlers">
            <summary>Removes all crawlers.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.AddStrategy(Sitecore.ContentSearch.Maintenance.Strategies.IIndexUpdateStrategy)">
            <summary>Adds the strategy.</summary>
            <param name="strategy">The index update strategy.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.GetIndexingDependencies(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Search for unique entities dependent on a specific indexable
            </summary>
            <param name="indexable">main indexable</param>
            <returns>collection of unique identifiers representing entities related to the indexable</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Rebuild">
            <summary>Rebuilds this index.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Rebuild(Sitecore.ContentSearch.IndexingOptions)">
            <summary>Rebuilds this index.</summary>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.RebuildAsync(Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>Rebuilds the async.</summary>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The index rebuilding task.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Refresh(Sitecore.ContentSearch.IIndexable)">
            <summary>Refreshes the index</summary>
            <param name="indexableStartingPoint">The indexable starting point.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Refresh(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Refreshes the index</summary>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.RefreshAsync(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IndexingOptions,System.Threading.CancellationToken)">
            <summary>Refreshes the index</summary>
            <param name="indexableStartingPoint">The indexable starting point.</param>
            <param name="indexingOptions">The indexing options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The index refresh task.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Update(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>Updates a specific indexable item</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Update(Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Updates a specific indexable item</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Update(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IIndexableUniqueId})">
            <summary>Updates a set of indexable items</summary>
            <param name="indexableUniqueIds">The indexable unique ids.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Update(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IIndexableUniqueId},Sitecore.ContentSearch.IndexingOptions)">
            <summary>Updates a set of indexable items</summary>
            <param name="indexableUniqueIds">The indexable unique ids.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Update(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IndexableInfo})">
            <summary>Updates a set of indexable items</summary>
            <param name="indexableInfo">The indexable unique ids.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.UpdateDependents(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexable)">
            <summary>
            Runs through all dependencies for an indexable and calls Update
            </summary>
            <param name="context">index update context.</param>
            <param name="indexable">the indexable to fetch indexing dependencies for.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Delete(Sitecore.ContentSearch.IIndexableId)">
            <summary>Deletes the specified indexable id.</summary>
            <param name="indexableId">The indexable id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Delete(Sitecore.ContentSearch.IIndexableId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Deletes the specified indexable id.</summary>
            <param name="indexableId">The indexable id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Delete(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>Deletes the specified indexable unique id.</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Delete(Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>Deletes the specified indexable unique id.</summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Reset">
            <summary>Resets this index.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.Initialize">
            <summary>Initializes this instance.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.CreateUpdateContext">
            <summary>The create update context.</summary>
            <returns>The <see cref="T:Sitecore.ContentSearch.IProviderUpdateContext" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.CreateDeleteContext">
            <summary>The create delete context.</summary>
            <returns>The <see cref="T:Sitecore.ContentSearch.IProviderDeleteContext" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.CreateSearchContext(Sitecore.ContentSearch.Security.SearchSecurityOptions)">
            <summary>Creates the search context.</summary>
            <param name="options">Search security options.</param>
            <returns>The <see cref="T:Sitecore.ContentSearch.IProviderSearchContext" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.StopIndexing">
            <summary>Stops the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.PauseIndexing">
            <summary>Pauses the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndex.ResumeIndexing">
            <summary>Resumes the indexing.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ISearchIndexInitializable">
            <summary>
            The SearchIndexInitializable interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndexInitializable.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the current instance.</summary>
            <param name="searchIndex">Index of the search.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.ISearchIndexSchema">
            <summary>
            The SearchIndexSchema interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSchema.AllFieldNames">
            <summary>
            Gets all field names in the schema.
            </summary>
            <value>
            All field names in the schema.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.ISearchIndexSummary">
            <summary>The SearchIndexSummary interface.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.NumberOfDocuments">
            <summary>Gets the number of documents in the index.</summary>
            <value>The number of documents of in the index.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.IsOptimized">
            <summary>Gets a value indicating whether the index is optimized.</summary>
            <value><c>true</c> if the index is optimized; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.HasDeletions">
            <summary>Gets a value indicating whether the index has deletions.</summary>
            <value><c>true</c> if the index has deletions; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.IsHealthy">
            <summary>Gets a value indicating whether the index is healthy.</summary>
            <value><c>true</c> if the index is healthy; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.LastUpdated">
            <summary>Gets or sets the last updated.</summary>
            <value>The last updated.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.NumberOfFields">
            <summary>Gets the number of fields.</summary>
            <value>The number of fields.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.NumberOfTerms">
            <summary>Gets the number of terms.</summary>
            <value>The number of terms.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.IsClean">
            <summary>Gets a value indicating whether is clean.</summary>
            <value><c>true</c> if this instance is clean; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.Directory">
            <summary>Gets the directory name of the index</summary>
            <value>The directory.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.IsMissingSegment">
            <summary>
            Gets a value indicating whether this instance is missing segment.
            </summary>
            <value>
            <c>true</c> if this instance is missing segment; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.NumberOfBadSegments">
            <summary>Gets the directory name of the index</summary>
            <value>The number of bad segments.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.OutOfDateIndex">
            <summary>
            Gets a value indicating whether the index is out of date.
            </summary>
            <value><c>true</c> if the index is out of date; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.UserData">
            <summary>Gets the user data.</summary>
            <value>The user data.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSummary.LastUpdatedTimestamp">
            <summary>
            Gets or sets the last updated timestamp.
            </summary>
            <value>
            The last updated timestamp.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.ISearchIndexSwitchTracker">
            <summary>
            Defines the contract which track if search provider is up or not running.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchIndexSwitchTracker.IsOn">
            <summary>
            Gets a value indicating whether the search provider is on or connected.
            </summary>
            <value>
              <c>true</c> if this instance is on; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.ISearchIndexSwitchTracker.IsIndexOn(System.String)">
            <summary>
            Determines whether the specified index name is paused.
            </summary>
            <param name="indexName">Name of the index.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ISearchResult">
            <summary>
            The SearchResult interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchResult.Name">
            <summary>
            Gets or sets the name field.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchResult.Content">
            <summary>
            Gets or sets the content field.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ISearchResult.Datasource">
            <summary>
            Gets or sets the datasource field.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ITrackingIndexingContext">
            <summary>
            Represent interface for indexing context to keep processed indexables, so that they will not be indexed twice.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ITrackingIndexingContext.Processed">
            <summary>
            Gets or sets the processed <see cref="T:Sitecore.ContentSearch.IIndexableUniqueId"/> items.
            </summary>
            <value>
            The processed <see cref="T:Sitecore.ContentSearch.IIndexableUniqueId"/> items.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.IVirtualFieldProcessor">
            <summary>
            The VirtualFieldProcessor interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.IVirtualFieldProcessor.TranslateFacetQuery(Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs)">
            <summary>The translate facet query.</summary>
            <param name="args">The args.</param>
            <returns>The <see cref="T:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.IVirtualFieldProcessor.TranslateFacetResult(Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs)">
            <summary>The translate facet result.</summary>
            <param name="args">The args.</param>
            <returns>The <see cref="T:System.Collections.IDictionary" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Localization.Texts">
            <summary>
            The Sitecore Content Search localization.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.CannotProcessBoostMacro">
            <summary>
            The cannot process boost macro.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.InvalidBoostValue">
            <summary>
            The invalid boost value.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.TheSearchProvider0DoesntSupportThisFeature">
            <summary>
            The {0} search provider does not support this feature.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Status">
            <summary>
            The status.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Processed">
            <summary>
            The processed.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Succeed">
            <summary>
            The succeed.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Failed">
            <summary>
            The failed.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.EnterValidBoostValue">
            <summary>
            The enter valid number.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.IndexRebuild">
            <summary>
            The index rebuild.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.RebuildingAllIndexes">
            <summary>
            The rebuilding all indexes.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.RebuildingIndex">
            <summary>
            The rebuilding index.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ReIndexTreeHeader">
            <summary>
            The refreshing tree.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ReIndexTree">
            <summary>
            The re index tree.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.RebuildingIndexFailed">
            <summary>
            "The '{0}' index could not be rebuilt. See the log file for details."
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.RebuildingAllFailed">
            <summary>
            "{0} of {1} indexes could not be rebuilt. See the log file for details."
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ReindexTreeFailed">
            <summary>
            "The current item and its descendants could not be re-indexed. See the log file for details."
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.IndexRebuilt">
            <summary>
            The index rebuilt.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ReIndexTreeComplete">
            <summary>
            The re index tree complete.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.AllIndexesRebuilt">
            <summary>
            The all indexes rebuilt.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.CannotRenderIndexList">
            <summary>
            The cannot render index list.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.SeeLogForMore">
            <summary>
            The see log for more.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.HasDeletions">
            <summary>
            The has deletions.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.IsClean">
            <summary>
            The is clean.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.OutOfDate">
            <summary>
            The out of date.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.True">
            <summary>
            The true.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.False">
            <summary>
            The false.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.NumberOfTerms">
            <summary>
            The number of terms.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.LastUpdated">
            <summary>
            The last updated.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.NumberOfFields">
            <summary>
            The number of fields.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.NeverRun">
            <summary>
            The never run.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Seconds">
            <summary>
            The seconds.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Minutes">
            <summary>
            The minutes.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Hours">
            <summary>
            The hours.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.LocalIndexes">
            <summary>
            The local indexes.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.IsHealthy">
            <summary>
            The is healthy.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.DocumentCount">
            <summary>
            The document count.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ConsiderIndexSharding">
            <summary>
            The consider index sharding.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ItemsPerSecond">
            <summary>
            The items per second.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ApproximateThroughput">
            <summary>
            The approximate throughput.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.RebuildTime">
            <summary>
            The rebuild time.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.FinishedIn">
            <summary>
            The finished in.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ItemsAddedToIndex">
            <summary>
            The items added to index.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ProcessedNItems">
            <summary>
            The processed n items.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.PleaseSelectIndex">
            <summary>
            The please select index.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Rebuild">
            <summary>
            The rebuild.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Generating">
            <summary>
            The generating.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.FinishedCheckOutputFile">
            <summary>
            The finished check output file.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.SchemaBuildingFailed">
            <summary>
            The schema building failed.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.TheSourceSolrSchemaFileCannotBeFound">
            <summary>
            The source Solr schema file cannot be found.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.TargetSchemaFileIsNotProvided">
            <summary>
            The target schema file is not provided.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.SourceSchemaFileIsNotProvided">
            <summary>
            The source schema file is not provided.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.CannotFindTargetDirectory">
            <summary>
            The cannot find target directory.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.TheSpecifiedDirectoryForTheTargetSchemaFileCannotBeFound">
            <summary>
            The specified directory for the target schema file cannot be found.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Generate">
            <summary>
            The generate.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.BuildSchema">
            <summary>
            The build schema.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Updated">
            <summary>
            The updated.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Populate">
            <summary>
            The Populate.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Populating">
            <summary>
            The populating.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ManagedSchemaNotEnabled">
            <summary>
            The Managed-Schema not enabled.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.Next">
            <summary>
            The next.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.JobRunning">
            <summary>
            The job running.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.JobFinishedUnexpectedly">
            <summary>
            The job finished unexpectedly.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.DoItemAddFailed">
            <summary>
            Crawler : AddRecursive DoItemAdd failed - {0}
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.UpdateItemFailed">
            <summary>
            Crawler : UpdateRecursive UpdateItem failed - {0}
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.IndexingInterrupted">
            <summary>
            The indexing process was unexpectedly interrupted.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ImageDimensionSmall">
            <summary>
            The image dimension "small".
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ImageDimensionMedium">
            <summary>
            The image dimension "medium".
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ImageDimensionLarge">
            <summary>
            The image dimension "large".
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Localization.Texts.ImageDimensionHuge">
            <summary>
            The image dimension "huge".
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.DefaultIndexTaskSchedulerFactory.GetIndexOperationsTaskScheduler">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.DefaultIndexTaskSchedulerFactory.GetTaskScheduler(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.EventHub">
            <summary>
            The event hub.
            </summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.FullPublishEnd">
            <summary>
            The on full publish end.
            </summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.PublishEnd">
            <summary>
            The on publish end.
            </summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.ItemUpdated">
            <summary>
            The on item updated.
            </summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.ItemDeleted">
            <summary>Occurs when an item has been deleted.</summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.ItemVersionAdded">
            <summary>
            Occurs when [item version added].
            </summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.ItemVersionDeleted">
            <summary>Occurs when an item version has been deleted.</summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.IndexingEndedRemote">
            <summary>
            The on indexing ended remote.
            </summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.ItemMoved">
            <summary>
            Occurs when item moved.
            </summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.ItemCopied">
            <summary>Occurs when item has been copied.</summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.IndexingPausing">
            <summary>Occurs when indexing should be paused.</summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.IndexingPaused">
            <summary>Occurs when indexing is paused.</summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.IndexingResuming">
            <summary>Occurs when indexing is resuming.</summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.IndexingResumed">
            <summary>Occurs when indexing is resumed.</summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.IndexingStopping">
            <summary>Occurs when indexing is stopping.</summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.IndexingStopped">
            <summary>Occurs when indexing is stopped.</summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.OnIndexingStarted">
            <summary>
            Occurs when indexing is started.
            </summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.OnIndexingEnded">
            <summary>
            Occurs when indexing is ended.
            </summary>
        </member>
        <member name="E:Sitecore.ContentSearch.Maintenance.EventHub.ContentSearchConfigurationInitialized">
            <summary>
            Content Search Initialized.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.EventHub.IsIndexingPaused">
            <summary>The is indexing paused</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.Initialize">
            <summary>
            Initializes all the events necessary for index maintenance
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.IndexEndedRemoteHandler(System.Object,System.EventArgs)">
            <summary>The index ended remote handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.IndexingEndedHandler(System.Object,System.EventArgs)">
            <summary>The indexing ended remote handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.IndexingStartedHandler(System.Object,System.EventArgs)">
            <summary>The indexing started remote handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.UpdateIndexTimestampDirectHandler(System.Object,System.EventArgs)">
            <summary>The update index timestamp handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.UpdateIndexTimestampHandler(System.Object,System.EventArgs)">
            <summary>The update index timestamp handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnFullPublishEndRemoteHandler(System.Object,System.EventArgs)">
            <summary>The on full publish end remote handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnFullPublishEndHandler(System.Object,System.EventArgs)">
            <summary>The on full publish end handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnPublishHandler(System.Object,System.EventArgs)">
            <summary>The on publish handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnPublishRemoteHandler(System.Object,System.EventArgs)">
            <summary>The on publish remote handler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.ExtractItemUri(System.Object)">
            <summary>
            Extracts the item URI.
            </summary>
            <param name="obj">The object.</param>
            <returns>Returns itemUri</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.UpdateIndexTimestampTimerTick(System.Object)">
            <summary>Updates the index timestamp.</summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnItemMovedHandler(System.Object,Sitecore.Data.ItemUri,Sitecore.Data.ID)">
            <summary>
            Called when item moved.
            </summary>
            <param name="sender">The sender.</param>
            <param name="uri">The URI.</param>
            <param name="oldParentId">The old parent identifier.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnCopiedItemHandler(System.Object,Sitecore.Data.ItemUri)">
            <summary>The on copied handler.</summary>
            <param name="sender">The sender.</param>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnUpdateItemHandler(Sitecore.Data.ItemUri)">
            <summary>The on update item handler.</summary>
            <param name="itemUri">The item uri.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnUpdateItemHandler(System.EventArgs)">
            <summary>
            Called when the update item has handler.
            </summary>
            <param name="eventArgs">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.UpdateItemHandler(System.Object)">
            <summary>
            Updates the item handler.
            </summary>
            <param name="obj">The object which will be added to the SitecoreEventArgs.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnItemVersionAddedHandler(System.EventArgs)">
            <summary>
            Called when the item version added has handler.
            </summary>
            <param name="eventArgs">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnItemVersionDeletedHandler(Sitecore.Data.ItemUri)">
            <summary>
            The on delete version handler
            </summary>
            <param name="itemUri">The item URI.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnDeleteItemHandler(Sitecore.Data.ID,System.String)">
            <summary>
            The on delete handler.
            </summary>
            <param name="id">The id.</param>
            <param name="databaseName">Name of the database.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnRestoreItemCompletedHandler(Sitecore.Data.Archiving.RestoreItemCompletedEvent)">
            <summary>Called when the restore item completed has handler.</summary>
            <param name="restoreItemCompletedEvent">The restore item completed event.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.EventHub.OnRestoreVersionCompletedHandler(Sitecore.Data.Archiving.RestoreVersionCompletedEvent)">
            <summary>Called when the restore version completed has handler.</summary>
            <param name="restoreVersionCompletedEvent">The restore version completed event.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.HistoryEntryHelper">
            <summary>
            Utility classes for HistoryEntry processing
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.HistoryEntryHelper.IsValid(Sitecore.Data.Engines.HistoryEntry)">
            <summary>
            defining whether a history entry is valid for processing
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.HistoryEntryHelper.ToItemUri(Sitecore.Data.Engines.HistoryEntry,Sitecore.Data.Database)">
            <summary>
            defining whether a history entry is valid for processing
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.HistoryReader">
            <summary>
            Responsible for fetching information from history engine
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.HistoryReader.GetHistory(Sitecore.Data.Database,System.DateTime)">
            <summary>
            Gets the history with grouping by Action, ItemId, ItemLanguage, ItemVersion.
            </summary>
            <param name="database">The database.</param>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <returns>The history.</returns>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.IIndexPropertyStore.Key">
            <summary>
            The key to identify the property uniqueness. To be set externally
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IIndexPropertyStore.Add(System.String,System.String)">
            <summary>
            Incrementally adds value to the list by key
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IIndexPropertyStore.Set(System.String,System.String)">
            <summary>
            Overwrites the value by key
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IIndexPropertyStore.Get(System.String)">
            <summary>
            Returns the value by key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IIndexPropertyStore.ClearAll">
            <summary>
            Removes all data from the store
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IIndexPropertyStore.Clear(System.String)">
            <summary>
            Removes all data from the store that starts with a prefix
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.IndexCustodian">
            <summary>
            The index custodian.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.IndexCustodian.JobNamePrefix">
            <summary>
            The job name prefix.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.IndexCustodian.JobCategory">
            <summary>
            The job category.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.IndexCustodian.indexingPaused">
            <summary>The indexing paused</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.ContentSearch.Maintenance.IndexCustodian"/> class.
            Subscribes to the "indexing:added" event.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.IsIndexingPaused(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Determines whether indexing is paused for the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>
              <c>true</c> if indexing is paused for the specified index; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.IsRebuilding(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Determines if an Index is currently rebuilding.</summary>
            <param name="index">The index.</param>
            <returns>The <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.IsQueued(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Determines if an update job for an Index is already in queue.</summary>
            <param name="index">The index.</param>
            <returns>The <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.RefreshTree(Sitecore.ContentSearch.IIndexable)">
            <summary>Refresh all indexes at a specific starting point.</summary>
            <param name="startItem">The start item.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.RebuildAll">
            <summary>Rebuild all Indexes.</summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.RebuildAll(Sitecore.ContentSearch.IndexGroup[])">
            <summary>
            Rebuilds all indexes, which groups are not in the specified list to skip.
            </summary>
            <param name="indexGroupsToSkip">A list of index groups to skip.</param>
            <returns>A list of rebuild index jobs.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.FullRebuild(Sitecore.ContentSearch.ISearchIndex,System.Boolean)">
            <summary>Run a full rebuild of an Index.</summary>
            <param name="index">The index.</param>
            <param name="start">if set to <c>true</c> rebuild is started.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.FullRebuild(Sitecore.ContentSearch.ISearchIndex,Sitecore.ContentSearch.IndexingOptions,System.Boolean)">
            <summary>
            Run a full rebuild of an Index.
            </summary>
            <param name="index">The index.</param>
            <param name="options">Indexing options.</param>
            <param name="start">if set to <c>true</c> rebuild is started.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.FullRebuildRemote(Sitecore.ContentSearch.ISearchIndex,System.Boolean)">
            <summary>Run a full rebuild of an Index, that was triggered remotely.</summary>
            <param name="index">The index.</param>
            <param name="start">if set to <c>true</c> rebuild is started.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.IncrementalUpdate(Sitecore.ContentSearch.ISearchIndex,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IIndexableUniqueId})">
            <summary>Update an index based off an enumerable collection of Unique Ids.</summary>
            <param name="index">The index.</param>
            <param name="indexableUniqueIds">The indexable unique ids.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.IncrementalUpdate(Sitecore.ContentSearch.ISearchIndex,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IndexableInfo})">
            <summary>Update an index based off an enumerable collection of Unique Ids.</summary>
            <param name="index">The index.</param>
            <param name="indexableInfo">The indexable info.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.ForcedIncrementalUpdate(Sitecore.ContentSearch.ISearchIndex,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IIndexableUniqueId})">
            <summary>Update an index based off an enumerable collection of Unique Ids.</summary>
            <param name="index">The index.</param>
            <param name="indexableUniqueIds">The indexable unique ids.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.UpdateItem(Sitecore.ContentSearch.ISearchIndex,Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>Update a Unique Indexable in an Index.</summary>
            <param name="index">The index.</param>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.UpdateItem(Sitecore.ContentSearch.ISearchIndex,Sitecore.ContentSearch.IndexableInfo)">
            <summary>
            Updates the item.
            </summary>
            <param name="index">The index.</param>
            <param name="indexableInfo">The indexable info.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.Delete(Sitecore.ContentSearch.ISearchIndex,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IIndexableId})">
            <summary>Delete a set potentially non unique Indexable from an Index.</summary>
            <param name="index">The index.</param>
            <param name="indexableId">The indexable id.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.Delete(Sitecore.ContentSearch.ISearchIndex,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.IIndexableUniqueId})">
            <summary>Delete a set of potentially non unique Indexable from an Index.</summary>
            <param name="index">The index.</param>
            <param name="indexableIds">The indexable id.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.DeleteItem(Sitecore.ContentSearch.ISearchIndex,Sitecore.ContentSearch.IIndexableId)">
            <summary>Delete a potentially non unique Indexable from an Index.</summary>
            <param name="index">The index.</param>
            <param name="indexableId">The indexable id.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.DeleteVersion(Sitecore.ContentSearch.ISearchIndex,Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>Delete a Unique Indexable from an Index</summary>
            <param name="index">The index.</param>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.Refresh(Sitecore.ContentSearch.ISearchIndex,Sitecore.ContentSearch.IIndexable)">
            <summary>Refresh an Index using a specific starting point.</summary>
            <param name="index">The index.</param>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.PauseIndexing">
            <summary>Pauses the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.ResumeIndexing">
            <summary>Resumes the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.StopIndexing">
            <summary>Stops the indexing.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.GetJobOptions(Sitecore.ContentSearch.ISearchIndex,System.String,System.Object[],System.Boolean)">
            <summary>Get the job options for an index.</summary>
            <param name="index">The index.</param>
            <param name="method">The method.</param>
            <param name="parameters">The parameters.</param>
            <param name="mute">Defines whether the job status will be written to the log.</param>
            <returns>The <see cref="!:JobOptions" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.OnIndexUpdated(System.Object,System.Object[])">
            <summary>
            A hook for the Index Update event.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.GetJobName(System.String)">
            <summary>
            Gets the name of the job
            </summary>
            <param name="key">
            The key.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.CreateRebuildJob(Sitecore.ContentSearch.ISearchIndex,System.EventHandler{Sitecore.Jobs.JobStartingEventArgs},System.EventHandler{Sitecore.Jobs.JobFinishedEventArgs},System.Boolean,System.Object[])">
            <summary>Run a full rebuild of an Index.</summary>
            <param name="index">The index.</param>
            <param name="startedHandler">Handler of job started event.</param>
            <param name="finishedHandler">Handler of job finished event.</param>
            <param name="start">if set to <c>true</c> rebuild is started.</param>
            <param name="parameters">Array of parameters.</param>
            <returns>The <see cref="!:Job" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.StartUpdateJob(Sitecore.ContentSearch.ISearchIndex,System.Object[],System.Int32)">
            <summary>
            Starts update index job.
            </summary>
            <param name="index">Index name.</param>
            <param name="parameters">Update method parameters.</param>
            <param name="itemsCount">Count of items to update.</param>
            <returns>The instance of <see cref="!:Job"/> class.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.RebuildStartingHandler(System.Object,Sitecore.Jobs.JobStartingEventArgs)">
            <summary>
            Handler of rebuild started event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.RebuildFinishedHandler(System.Object,Sitecore.Jobs.JobFinishedEventArgs)">
            <summary>
            Handler of rebuild finished event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.RemoteRebuildStartingHandler(System.Object,Sitecore.Jobs.JobStartingEventArgs)">
            <summary>
            Handler of remote rebuild starting event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexCustodian.RemoteRebuildFinishedHandler(System.Object,Sitecore.Jobs.JobFinishedEventArgs)">
            <summary>
            Handler of remote rebuild finished event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore">
            <summary>
            The index database property store.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.innerStore">
            <summary>
            The inner store.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.#ctor(Sitecore.Abstractions.BaseEventManager,Sitecore.Abstractions.BaseFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore"/> class.
            </summary>
            <param name="events">The events.</param>
            <param name="factory">The factory. </param>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.InnerStore">
            <summary>
            Gets the inner store.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.SuppressPropertyChangedEvents">
            <summary>
            Suppress PropertyChanged events
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.MasterKey">
            <summary>
            Gets the master key.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.Database">
            <summary>
            Gets or sets the database.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.Add(System.String,System.String)">
            <summary>
            The add.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.Set(System.String,System.String)">
            <summary>
            The set.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.Get(System.String)">
            <summary>
            The get.
            </summary>
            <param name="key">
            The key.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.ClearAll">
            <summary>
            The clear all.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore.Clear(System.String)">
            <summary>
            The clear.
            </summary>
            <param name="prefix">
            The prefix.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.PropertyChangedEventDisabler">
            <summary>
            Property changed event disabler.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.PropertyChangedEventDisabler.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Maintenance.PropertyChangedEventDisabler"/> class. 
            Property changed event disabler.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.PropertyChangedEventDisabler.Dispose">
            <summary>
            Dispose event disabler.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.IndexDependentHtmlCacheManager">
            <summary>
            The index dependent html cache manager.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexDependentHtmlCacheManager.Clear(System.Object,System.EventArgs)">
            <summary>
            Clear index dependant cache.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="args">Event args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.IndexFileSystemPropertyStore">
            <summary>
            The index database property store.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.IndexFileSystemPropertyStore.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.IndexFileSystemPropertyStore.MasterKey">
            <summary>
            Gets the master key.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexFileSystemPropertyStore.Add(System.String,System.String)">
            <summary>
            The add.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexFileSystemPropertyStore.Set(System.String,System.String)">
            <summary>
            The set.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexFileSystemPropertyStore.Get(System.String)">
            <summary>
            The get.
            </summary>
            <param name="key">
            The key.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexFileSystemPropertyStore.ClearAll">
            <summary>
            The clear all.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexFileSystemPropertyStore.Clear(System.String)">
            <summary>
            The clear.
            </summary>
            <param name="prefix">
            The prefix.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.IndexProcessingState">
            <summary>
            Represents metadata describing changes for the most recent index update.   
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexProcessingState.#ctor(Sitecore.ContentSearch.Maintenance.IIndexPropertyStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Maintenance.IndexProcessingState"/> class.
            </summary>
            <param name="propertyStore"></param>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.IndexProperties">
            <summary>
            The index properties.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.IndexProperties.ReadUpdateDirectory">
            <summary>Gets the read update directory.</summary>
            <value>The read update directory.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.IndexProperties.FullRebuildDirectory">
            <summary>Gets the full rebuild directory.</summary>
            <value>The full rebuild directory.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.IndexProperties.LastUpdatedKey">
            <summary>Gets the last updated key.</summary>
            <value>The last updated key.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.IndexProperties.RebuildTime">
            <summary>Gets the rebuild time.</summary>
            <value>The rebuild time.</value>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.IndexProperties.LastUpdatedTimestamp">
            <summary>
            The last updated timestamp
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.IndexProperties.LastIndexedEntry">
            <summary>
            The last indexed entry.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.IndexTaskSchedulerFactory">
            <summary>
            Represents an abstract factory which supplies with instances of <see cref="T:System.Threading.Tasks.TaskScheduler"/> class for Content Search thread managing.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexTaskSchedulerFactory.GetIndexOperationsTaskScheduler">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.TaskScheduler"/> which should be used for index operations by default.
            It guarantees all index-update operations don't consume more than a configured number of threads.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.IndexTaskSchedulerFactory.GetTaskScheduler(System.Int32)">
            <summary>
            Returns a dedicated instance of <see cref="T:System.Threading.Tasks.TaskScheduler"/> which should be executed independently from the default index scheduler.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.NullPropertyStore">
            <summary>
            The null property store.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.OperationMonitor">
            <summary>
            The operation monitor.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.OperationMonitor.Actions">
            <summary>
            The actions.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.OperationMonitor.Register(System.Action)">
            <summary>
            Registers the specified action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.OperationMonitor.Trigger">
            <summary>
            Triggers queued actions.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.PackageEventHandler.OnPackageInstallStartingHandler(System.Object,System.EventArgs)">
            <summary>Called when the package install starting has handler.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.PackageEventHandler.OnPackageInstallItemsEndHandler(System.Object,System.EventArgs)">
            <summary>Called when the package install items end has handler.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.PackageEventHandler.OnPackageInstallerEndHandler(System.Object,System.EventArgs)">
            <summary>Called when the package installer end has handler.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.SchemaCustodian">
            <summary>
            Defines the Managed Schema job manager / custodian class that kick off updating schema job 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.SchemaCustodian.JobNamePrefix">
            <summary>
            The job name prefix.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.SchemaCustodian.JobCategory">
            <summary>
            The job category.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.SchemaCustodian.PopulateManagedSchema(Sitecore.ContentSearch.ISearchIndex,System.Boolean)">
            <summary>
            Populate Managed Schema
            </summary>
            <param name="index"></param>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.SchemaCustodian.GetJobOptions(Sitecore.ContentSearch.ISearchIndex,System.String,System.Object[],System.Boolean)">
            <summary>Get the job options for an index.</summary>
            <param name="index">The index.</param>
            <param name="method">The method.</param>
            <param name="parameters">The parameters.</param>
            <param name="mute">Defines whether the job status will be written to the log.</param>
            <returns>The <see cref="!:JobOptions" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.SchemaCustodian.GetJobName(System.String)">
            <summary>
            Get job name
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.ShutdownMonitor">
            <summary>
            Shuts down indexing on ASP.NET shutdown. 
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.ShutdownMonitor.Stop(System.Boolean)">
            <summary>
            Performs shutdown tasks for indexes on ASP.NET shutdown.
            </summary>
            <param name="immediate">The tasks are performed only when immediate is <c>false</c></param>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy">
            <summary>
            Defines the Index Rebuild Strategy on async update
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.initialized">
            <summary>
            Determines if strategy initialized
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.#ctor(System.String,Sitecore.Abstractions.BaseEventQueueProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy"/> class.
            </summary>
            <param name="database">The database.</param>
            <param name="eventProvider"></param>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.Database">
            <summary>
            Gets or sets the database.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.CheckForThreshold">
            <summary>
            Gets or sets a value indicating whether check for threshold.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.RaiseRemoteEvents">
            <summary>
            Gets or sets a value indicating whether strategy should raise remote events.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.Settings">
            <summary>
            Gets or sets the settings.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.ParallelForeachProxy">
            <summary>
            Gets the parallel foreach proxy.
            </summary>
            <value>
            The parallel foreach proxy.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.Index">
            <summary>
            Gets or sets the index.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.ContentSearchSettings">
            <summary>
            Gets or sets the content search configuration settings.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.IndexTimestamps">
            <summary>
            Gets or sets the collection of index timestamps.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>The initialize.</summary>
            <param name="searchIndex">The index.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.Run">
            <summary>
            Runs the pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.LogStrategyInitialization(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Logs initialization information for the strategy.
            </summary>
            <param name="index">The index which the strategy has been triggered for.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.LogUpdateBatchInfo(Sitecore.ContentSearch.ISearchIndex,System.Collections.Generic.List{Sitecore.ContentSearch.Maintenance.Strategies.Models.IndexableInfoModel})">
            <summary>
            Logs information about an indexable batch which the strategy is processing at the moment.
            </summary>
            <param name="index">The index which the strategy has been triggered for.</param>
            <param name="indexableInfoModel">The indexable batch proccessed by the strategy.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="index" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="indexableInfoModel" /> is null.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.Handle">
            <summary>
            The handle.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.ReadQueue(Sitecore.Eventing.EventQueue)">
            <summary>
            The read queue.
            </summary>
            <param name="eventQueue">The event queue.</param>
            <returns>
            The <see cref="T:System.Collections.Generic.List`1" />.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.ReadQueue(Sitecore.Eventing.EventQueue,System.Nullable{System.Int64})">
            <summary>
            Reads the queue.
            </summary>
            <param name="eventQueue">The event queue.</param>
            <param name="lastUpdatedTimestamp">The last updated timestamp.</param>
            <returns>
            The list of queued events.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.Run(System.Collections.Generic.List{Sitecore.ContentSearch.Maintenance.Strategies.Models.IndexableInfoModel},Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Runs the specified queue.
            </summary>
            <param name="data">The queue.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.OnIndexingStarted(System.Object,System.EventArgs)">
            <summary>
            The indexing started handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.OnIndexingEnded(System.Object,System.EventArgs)">
            <summary>
            The indexing ended handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.DataUriBucketDictionary`1">
            <summary>
            Represents a collection of DataUris and values stored in buckets based on the ID of the Item that DataUri refer to.
            </summary>
            <typeparam name="TValue">The type of values in the dictionary</typeparam>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.DataUriBucketDictionary`1.Item(Sitecore.Data.DataUri)">
            <summary>
            Gets or sets the value associated with the specified DataUri key inside the bucket
            </summary>
            <param name="uri">The key of the value to get or set.</param>
            <returns>
            The value associated with the specified key. If the specified key is not found 
            a set operation creates a new element with the specified key.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.DataUriBucketDictionary`1.Add(Sitecore.Data.DataUri,`0)">
            <summary>
            Adds the specified key and value to the dictionary. 
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add. The value can be null for reference types.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.DataUriBucketDictionary`1.ContainsKey(Sitecore.Data.DataUri)">
            <summary>
            Determines whether the collections contains the specified key.
            </summary>
            <param name="key"> The key to locate in the collections.</param>
            <returns>true if the collection contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.DataUriBucketDictionary`1.ContainsAny(Sitecore.Data.ID,System.Func{System.Collections.Generic.KeyValuePair{Sitecore.Data.DataUri,`0},System.Boolean})">
            <summary>
            Determines whether any element of the collection satisfies the condition.
            </summary>
            <param name="bucketId">The bucket id to search in.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.DataUriBucketDictionary`1.RemoveAll(Sitecore.Data.ID,System.Func{Sitecore.Data.DataUri,System.Boolean})">
            <summary>
            Removes all the elements of the collection satisfies the condition under the given bucket id.
            </summary>
            <param name="bucketId">Bucket id</param>
            <param name="predicate">A function to test each element for a condition.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.DataUriBucketDictionary`1.First(Sitecore.Data.ID,System.Func{System.Collections.Generic.KeyValuePair{Sitecore.Data.DataUri,`0},System.Boolean})">
            <summary>
            Returns the first element of the collection that satisfies a specified condition under the given bucket id.
            </summary>
            <param name="bucketId">Bucket id</param>
            <param name="predicate"></param>
            <returns>A function to test each element for a condition.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.DataUriBucketDictionary`1.ExtractValues">
            <summary>
            Projects each value of each bucket into an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of all the values from all the buckets</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy.DataUriBucketDictionary`1.TryGetValue(Sitecore.Data.DataUri,`0@)">
            <summary>
            Get the value from dictionary
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.Strategies.IIndexUpdateStrategy">
            <summary>
            The IndexUpdateStrategy interface.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.Strategies.IntervalAsynchronousStrategy">
            <summary>
            Defines the Index Rebuild Strategy on async update
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.Strategies.IntervalAsynchronousStrategy.alarmClock">
            <summary>
            The alarm clock.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.Strategies.IntervalAsynchronousStrategy.updateInterval">
            <summary>
            The update interval.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.IntervalAsynchronousStrategy.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Maintenance.Strategies.IntervalAsynchronousStrategy"/> class.
            </summary>
            <param name="database">
            The database.
            </param>
            <param name="interval">
            The interval.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.IntervalAsynchronousStrategy.#ctor(System.String,Sitecore.Abstractions.BaseEventQueueProvider,Sitecore.Abstractions.BaseSettings,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Maintenance.Strategies.IntervalAsynchronousStrategy"/> class.
            </summary>
            <param name="database">
            The database.
            </param>
            <param name="interval">
            The interval.
            </param>
            <param name="eventProvider">
            The Queue Event Provider.
            </param>
            <param name="baseSettings">
            The Base Setting Provider.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.IntervalAsynchronousStrategy.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            The initialize.
            </summary>
            <param name="searchIndex">
            The index.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.IntervalAsynchronousStrategy.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.Strategies.ManualStrategy">
            <summary>
            Defines the strategy for manual index rebuilds
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.ManualStrategy.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            The initialize.
            </summary>
            <param name="index">
            The index.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.Strategies.Models.IndexableInfoModel">
            <summary>
            Indexable info model
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousSingleInstanceStrategy">
            <summary>
            The on publish end asynchronous single instance strategy.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousSingleInstanceStrategy.#ctor(System.String)">
            <summary>
            Inherits the class <see cref="T:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy"/> class.
            </summary>
            <param name="database">
            The database.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousSingleInstanceStrategy.#ctor(System.String,Sitecore.ContentSearch.Maintenance.ActionRunner{Sitecore.ContentSearch.ISearchIndex},Sitecore.Abstractions.BaseEventQueueProvider)">
            <summary>
            Inherits the class <see cref="T:Sitecore.ContentSearch.Maintenance.Strategies.BaseAsynchronousStrategy"/> class.
            </summary>
            <param name="database">
            The database.
            </param>
            /// <param name="actionRunner">
            The index action runner.
            </param>
            <param name="eventProvider">
            The Event Queue Provider.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousSingleInstanceStrategy.Run">
            <summary>
            Runs the pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousStrategy">
            <summary>
            Defines the Index Rebuild Strategy on async update
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousStrategy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousStrategy"/> class.
            </summary>
            <param name="database">
            The database.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousStrategy.#ctor(System.String,Sitecore.Abstractions.BaseEventQueueProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousStrategy"/> class.
            </summary>
            <param name="database">
            The database.
            </param>
            <param name="eventProvider">
            The queue event provider.
            </param>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousStrategy.Indexes">
            <summary>
            Gets or sets the indexes.
            </summary>
            <value>
            The indexes.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousStrategy.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            The initialize.
            </summary>
            <param name="searchIndex">
            The index.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousStrategy.OnIndexingStarted(System.Object,System.EventArgs)">
            <summary>
            The indexing started handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousStrategy.OnIndexingEnded(System.Object,System.EventArgs)">
            <summary>
            The indexing ended handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.Strategies.RebuildAfterFullPublishStrategy">
            <summary>
            Defines the Index Rebuild Strategy on Full Rebuild
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.Strategies.RebuildAfterFullPublishStrategy.index">
            <summary>
            The index.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.Strategies.RebuildAfterFullPublishStrategy.RaiseRemoteEvents">
            <summary>
            Gets or sets a value indicating whether strategy should raise remote events.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.RebuildAfterFullPublishStrategy.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            The initialize.
            </summary>
            <param name="index">
            The index.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.RebuildAfterFullPublishStrategy.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.RebuildAfterFullPublishStrategy.Handle">
            <summary>
            The handle.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.Strategies.RemoteRebuildStrategy">
            <summary>
            Defines the strategy for remote index rebuilds
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.Strategies.RemoteRebuildStrategy.index">
            <summary>
            The index.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.Strategies.RemoteRebuildStrategy.indexName">
            <summary>
            The index name.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.RemoteRebuildStrategy.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            The initialize.
            </summary>
            <param name="index">
            The index.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.RemoteRebuildStrategy.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.RemoteRebuildStrategy.Handle(System.EventArgs)">
            <summary>
            The handle.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy">
            <summary>
            Defines the Index Rebuild Strategy on sync update
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.CouldntRetreiveUri">
            <summary>
            Couldn't retrieve Uri for the added item. The index will not be updated.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.index">
            <summary>
            The index.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy"/> class.
            </summary>
            <param name="database">
            The database.
            </param>
        </member>
        <member name="P:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.Database">
            <summary>
            Gets or sets the database.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            The initialize.
            </summary>
            <param name="index">
            The index.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.RunAddedVersion(System.EventArgs)">
            <summary>
            Runs the added version. Have a responsibility for added version of item.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.RunDeletedVersion(Sitecore.Data.ItemUri)">
            <summary>
            Runs the deleted version. Have a responsibility for deleted version of item.
            </summary>
            <param name="itemUri">The item URI.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.RunDeleted(Sitecore.Data.ID,System.String)">
            <summary>
            Runs the deleted. Have a responsibility for deleted item
            </summary>
            <param name="id">The id.</param>
            <param name="databaseName">Name of the database.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.Run(Sitecore.Data.ItemUri,System.Boolean)">
            <summary>
            Runs the specified item URI. Have a responsibility for saved/modified, moved and copied items.
            </summary>
            <param name="itemUri">The item URI.</param>
            <param name="rebuildDescendants">if set to <c>true</c> [rebuild descendants].</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.Run(System.EventArgs,System.Boolean)">
            <summary>
            Runs the specified args. Have a responsibility for saved/modified, moved and copied items.
            </summary>
            <param name="args">The arguments.</param>
            <param name="rebuildDescendants">if set to <c>true</c> [rebuild descendants].</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.Run(Sitecore.Data.ItemUri,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Runs the specified item URI. Have a responsibility for saved/modified, moved and copied items.
            </summary>
            <param name="itemUri">The item URI.</param>
            <param name="rebuildDescendants">if set to <c>true</c> [rebuild descendants].</param>
            <param name="isSharedFieldChanged">if set to <c>true</c> [is shared field changed].</param>
            <param name="isUnversionedFieldChanged">if set to <c>true</c> [is unversioned field changed].</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.GetItem(Sitecore.Data.ItemUri)">
            <summary>
            Gets the item.
            </summary>
            <param name="itemUri">The item URI.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.GetRealFieldChanges(Sitecore.Data.Items.FieldChangeList)">
            <summary>
            Gets the real field changes.
            </summary>
            <param name="fieldChangeList">The field change list.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.IsItemUnderCrawlerRoot(Sitecore.Data.ItemUri)">
            <summary>
            Determines whether [is item under crawler root] [the specified item URI].
            </summary>
            <param name="itemUri">The item URI.</param>
            <returns>
              <c>true</c> if [is item under crawler root] [the specified item URI]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.NeedBreakOperation(System.String)">
            <summary>
            Needs the break operation.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.GetItemUriOfAddedVersion(System.EventArgs)">
            <summary>
            Gets the item URI of added version.
            </summary>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy.HandleItemMoved(Sitecore.Data.ItemUri,Sitecore.Data.ID)">
            <summary>
            Handles event of moving item.
            </summary>
            <param name="itemUri">The moved item URI.</param>
            <param name="oldParentId">The old parent identifier.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.MappingTargetType">
            <summary>
            The mapping target type.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ModificationCountCommitPolicy">
            <summary>
            The modification count commit policy.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ModificationCountCommitPolicy.count">
            <summary>The count.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ModificationCountCommitPolicy.index">
            <summary>The index</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ModificationCountCommitPolicy.Limit">
            <summary>
            Gets or sets the limit number of items to be commited.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ModificationCountCommitPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ModificationCountCommitPolicy"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ModificationCountCommitPolicy.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ModificationCountCommitPolicy" /> class.
            </summary>
            <param name="threshold">The threshold.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.ModificationCountCommitPolicy.ShouldCommit">
            <summary>Gets a value indicating whether commit should be called.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ModificationCountCommitPolicy.IndexModified(System.Object,Sitecore.ContentSearch.IndexOperation)">
            <summary>Notifies the commit policy that the index have been modified.</summary>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ModificationCountCommitPolicy.Committed">
            <summary>Notifies the commit policy that commit have been called.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ModificationCountCommitPolicy.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ModificationCountCommitPolicy.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the current instance.</summary>
            <param name="searchIndex">Index of the search.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.NullCommitPolicyExecutor">
            <summary>
            The null commit policy executor.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.NullCommitPolicyExecutor.AddCommitPolicy(Sitecore.ContentSearch.ICommitPolicy)">
            <summary>Adds a commit policy.</summary>
            <param name="commitPolicy">The commit policy.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.NullCommitPolicyExecutor.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the specified index.</summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.NullCommitPolicyExecutor.IndexModified(Sitecore.ContentSearch.IProviderUpdateContext,System.Object,Sitecore.ContentSearch.IndexOperation)">
            <summary>
            Notifies the commit policy that the index have been modified and executes actions depending on the policy.
            </summary>
            <param name="context">The context.</param>
            <param name="document">The document.</param>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.NullCommitPolicyExecutor.Committed">
            <summary>Notifies the commit policy that commit have been performed.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.NullCommitPolicyExecutor.Clone">
            <summary>Creates a new object that is a copy of the current instance.</summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ObserverCrawler`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ObserverCrawler`1"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ObserverCrawler`1.ObservableName">
            <summary>Gets or sets the name of the observable.</summary>
            <value>The name of the observable.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ObserverCrawler`1.ObservableNames">
            <summary>Gets the observable names.</summary>
            <value>The observable names.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ObserverCrawler`1.CrawlerName">
            <summary>Gets or sets the name of the crawler.</summary>
            <value>The name of the crawler.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ObserverCrawler`1.NumberOfSecondsToQueue">
            <summary>Gets or sets the number of seconds to queue.</summary>
            <value>The number of seconds to queue.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ObserverCrawler`1.MinimumQueueSize">
            <summary>Gets or sets the minimum size of the queue.</summary>
            <value>The minimum size of the queue.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ObserverCrawler`1.MaximumQueueSize">
            <summary>Gets or sets the maximum size of the queue.</summary>
            <value>The maximum size of the queue.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.ObserverCrawler`1.AddObservable(System.String)">
            <summary>Adds the observable.</summary>
            <param name="observableName">Name of the observable.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ObserverCrawler`1.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the specified index.</summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.IObserverCrawlerThrottle`1.MaximumQueueSize">
            <summary>Gets the maximum size of the queue.</summary>
            <value>The maximum size of the queue.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IObserverCrawlerThrottle`1.MinimumQueueSize">
            <summary>Gets the minimum size of the queue.</summary>
            <value>The minimum size of the queue.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IObserverCrawlerThrottle`1.EffectiveMaxQueueSize">
            <summary>Gets the size of the effective maximum queue.</summary>
            <value>The size of the effective maximum queue.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IObserverCrawlerThrottle`1.NumberOfSecondsToQueue">
            <summary>Gets the number of seconds to queue.</summary>
            <value>The number of seconds to queue.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.IObserverCrawlerThrottle`1.ItemsPerSecond">
            <summary>Gets the items per second.</summary>
            <value>The items per second.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.IObserverCrawlerThrottle`1.OnNext(`0)">
            <summary>Throttle next incoming item.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ObserverCrawlerThrottle`1.#ctor(System.Action{`0},System.Func{System.Int32},System.Func{System.Double},System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ObserverCrawlerThrottle`1"/> class.
            </summary>
            <param name="throttleAction">The throttle action.</param>
            <param name="getQueuedIndexableCountFunc">The get queued indexable count function.</param>
            <param name="getQueuedIndexableRemovalRateFunc">The get queued indexable removal rate function.</param>
            <param name="numberOfSecondsToQueue">The number of seconds to queue.</param>
            <param name="minimumQueueSize">Minimum size of the queue.</param>
            <param name="maximumQueueSize">Maximum size of the queue.</param>
            <exception cref="T:System.ArgumentException">
            numberOfSecondsToQueue must be a positive integer;numberOfSecondsToQueue
            or
            minimumQueueSize must be a positive integer;minimumQueueSize
            or
            maximumQueueSize must be a positive integer;maximumQueueSize
            or
            maximumQueueSize must be larger than minimumQueueSize;maximumQueueSize
            </exception>
        </member>
        <member name="M:Sitecore.ContentSearch.ObserverCrawlerThrottle`1.#ctor(System.Action{`0},System.Func{System.Int32},System.Func{System.Double},System.Int32,System.Int32,System.Int32,Sitecore.ContentSearch.IRateCounter)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ObserverCrawlerThrottle`1"/> class.
            </summary>
            <param name="throttleAction">The throttle action.</param>
            <param name="getQueuedIndexableCountFunc">The get queued indexable count function.</param>
            <param name="getQueuedIndexableRemovalRateFunc">The get queued indexable removal rate function.</param>
            <param name="numberOfSecondsToQueue">The number of seconds to queue.</param>
            <param name="minimumQueueSize">Minimum size of the queue.</param>
            <param name="maximumQueueSize">Maximum size of the queue.</param>
            <param name="queueInsertCounter">The queue insert counter.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.ObserverCrawlerThrottle`1.MaximumQueueSize">
            <summary>Gets the maximum size of the queue.</summary>
            <value>The maximum size of the queue.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ObserverCrawlerThrottle`1.MinimumQueueSize">
            <summary>Gets the minimum size of the queue.</summary>
            <value>The minimum size of the queue.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ObserverCrawlerThrottle`1.EffectiveMaxQueueSize">
            <summary>Gets the size of the effective maximum queue.</summary>
            <value>The size of the effective maximum queue.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ObserverCrawlerThrottle`1.NumberOfSecondsToQueue">
            <summary>Gets the number of seconds to queue.</summary>
            <value>The number of seconds to queue.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ObserverCrawlerThrottle`1.ItemsPerSecond">
            <summary>Gets the items per second.</summary>
            <value>The items per second.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.ObserverCrawlerThrottle`1.OnNext(`0)">
            <summary>Throttle next incoming item.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.OverrideExecutionContext`1">
            <summary>
            The override execution context.
            </summary>
            <typeparam name="T">
            The type of object to override.
            </typeparam>
        </member>
        <member name="F:Sitecore.ContentSearch.OverrideExecutionContext`1.overrideObject">
            <summary>The override object.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.OverrideExecutionContext`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.OverrideExecutionContext`1" /> class.
            </summary>
            <param name="overrideObject">The override object.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.OverrideExecutionContext`1.OverrideObject">
            <summary>Gets the override object.</summary>
            <value>The override object.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.PipelineBasedSearchProvider">
            <summary>
            The pipeline based search provider.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.PipelineBasedSearchProvider.GetContextIndexName(Sitecore.ContentSearch.IIndexable,Sitecore.Abstractions.BaseCorePipelineManager)">
            <summary>
            Given an Item, this will return the name of the Index that it will use to search on
            </summary>
            <param name="indexable">The indexable.</param>
            <param name="pipeline">The pipeline.</param>
            <returns>
            The Name of the Index
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.PipelineBasedSearchProvider.GetContextIndexName(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Given an Item, this will return the name of the Index that it will use to search on
            </summary>
            <param name="indexable">The indexable.</param>
            <returns>
            The Name of the Index
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.CleanUp.ApplyCleanUp">
            <summary>
            The apply inbound index filter.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.CleanUp.ApplyCleanUp.Process(Sitecore.ContentSearch.Pipelines.CleanUp.CleanUpArgs)">
            <summary>
            The process.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.CleanUp.CleanUpArgs">
            <summary>
            The inbound index filter args.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.CleanUp.CleanUpArgs.#ctor(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.IProviderUpdateContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.CleanUp.CleanUpArgs" /> class.
            </summary>
            <param name="indexableToIndex">Index of the indexable to.</param>
            <param name="updateContext"></param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.CleanUp.CleanUpArgs.IndexableToIndex">
            <summary>Gets or sets the index of the indexable to.</summary>
            <value>The index of the indexable to.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.CleanUp.CleanUpPipeline">
            <summary>
            The inbound index filter pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.CleanUp.CleanUpPipeline.Run(Sitecore.Abstractions.BaseCorePipelineManager,Sitecore.ContentSearch.Pipelines.CleanUp.CleanUpArgs)">
            <summary>
            Runs the specified args.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="args">The args.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.CleanUp.CleanUpProcessor">
            <summary>
            The inbound index filter processor.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.FormatQueryFieldValue.FormatQueryFieldValueArgs">
            <summary>
            The Format Query Field Value Argments used in ContentSearch.FormatQueryFieldValue Pipeline
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.FormatQueryFieldValue.FormatQueryFieldValueArgs.FieldName">
            <summary>
            The field name
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.FormatQueryFieldValue.FormatQueryFieldValueArgs.FieldValue">
            <summary>
            The field value
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.FormatQueryFieldValue.FormatQueryFieldValueArgs.Translator">
            <summary>
            Gets or sets the translator.
            </summary>
            <value>
            The translator.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.FormatQueryFieldValue.FormatQueryFieldValueArgs.IsQuoted">
            <summary>
            Gets or sets a value indicating whether this instance is quoted.
            </summary>
            <value>
              <c>true</c> if this instance is quoted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.FormatQueryFieldValue.FormatQueryFieldValueArgs.EscapeCharacter">
            <summary>
            Gets or sets the escape character.
            </summary>
            <value>
            The escape character.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.FormatQueryFieldValue.FormatQueryFieldValueArgs.IncludeExistingCharacter">
            <summary>
            Gets or sets the include existing character.
            </summary>
            <value>
            The include existing character.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.FormatQueryFieldValue.FormatQueryFieldValueArgs.SuppressMappingRule">
            <summary>
            Gets or sets a value indicating whether to suppress applying mapping rule
            </summary>
            <value>
              <c>true</c> if [suppress mapping rule]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.FormatQueryFieldValue.FormatQueryFieldValueArgs.ExcludeEscapeCharacters">
            <summary>
            Gets or sets the exclude escape character hash set.
            </summary>
            <value>
            The exclude escape character hash set.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.FormatQueryFieldValue.FormatQueryFieldValueArgs.SuppressIsQuotedRule">
            <summary>
            Gets or sets a value indicating whether or not to suppress IsQuoted rule in ApplyFieldMappingRule processor.
            </summary>
            <value>
            <c>true</c> if [suppress is quoted rule]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexArgs.#ctor(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexArgs" /> class.
            </summary>
            <param name="indexableParent">The indexable to process.</param>
            <param name="index">The index currently being built.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexArgs.IndexableParent">
            <summary>Gets or sets the index of the indexable to process.</summary>
            <value>The index of the indexable to process.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexArgs.Index">
            <summary>Gets or sets the search index.</summary>
            <value>The search index.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexArgs.ChildrenToIndexList">
            <summary>Gets or sets the children to index list.</summary>
            <value>The child list.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexArgs.HasResult">
            <summary>
            Gets a value indicating whether the pipeline was executed.
            </summary>
            <value>
            <c>true</c> if the pipeline ran; otherwise, <c>false</c>.  Could be null if the pipeline was not registered. 
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexPipeline">
            <summary>
            Allows to run the <see cref="F:Sitecore.ContentSearch.Pipelines.PipelineNames.GetChildrenToIndex"/> pipeline
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexPipeline.Run(Sitecore.Abstractions.BaseCorePipelineManager,Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexArgs)">
            <summary>
            Runs the getChildrenToIndex pipeline.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="args">The args.</param>
            <returns><c>true</c> if the pipeline was executed; otherwise, <c>false</c>. Could be null if the pipeline was not registered.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexPipeline.Run(Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexArgs)">
            <summary>
            Runs the <see cref="F:Sitecore.ContentSearch.Pipelines.PipelineNames.GetChildrenToIndex"/> pipeline.
            </summary>
            <param name="args">pipeline arguments</param>
            <returns><c>true</c> if the pipeline was executed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexProcessor">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexProcessor"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetSitecoreItemChildren">
            <summary>
            The get sitecore item children processor.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetSitecoreItemChildren.Process(Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexArgs)">
            <summary>The process.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetContextIndex.FetchIndex">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.GetContextIndex.FetchIndex"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetContextIndex.FetchIndex.Process(Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexArgs)">
            <summary>Processes the specified args.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetContextIndex.FetchIndex.GetContextIndex(Sitecore.ContentSearch.IIndexable,Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexArgs)">
            <summary>Gets the index of the context.</summary>
            <param name="indexable">The indexable.</param>
            <param name="args">The args.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetContextIndex.FetchIndex.RankContextIndexes(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.ISearchIndex},Sitecore.ContentSearch.IIndexable)">
            <summary>Ranks the context indexes.</summary>
            <param name="indexes">The indexes.</param>
            <param name="indexable">The indexable.</param>
            <returns>Ranked indexes.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexArgs">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexArgs.#ctor(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexArgs" /> class.
            </summary>
            <param name="indexable">The indexable.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexArgs.Indexable">
            <summary>Gets or sets the item.</summary>
            <value>The item.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexArgs.Result">
            <summary>Gets or sets the result.</summary>
            <value>The result.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexPipeline">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexPipeline"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexPipeline.Run(Sitecore.Abstractions.BaseCorePipelineManager,Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexArgs)">
            <summary>
            Runs the specified args.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="args">The args.</param>
            <returns>
            The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexProcessor">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.GetContextIndex.GetContextIndexProcessor"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetContextIndex.IContextIndexRankable.GetContextIndexRanking(Sitecore.ContentSearch.IIndexable)">
            <summary>Gets the context index ranking.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The context index ranking.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetDependencies.BaseProcessor">
            <summary>
            The base processor.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetDependencies.BaseProcessor.Process(Sitecore.ContentSearch.Pipelines.GetDependencies.GetDependenciesArgs)">
            <summary>
            The process.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetDependencies.GetCloningDependencies">
            <summary>
            The get cloning dependencies.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetDependencies.GetCloningDependencies.Process(Sitecore.ContentSearch.Pipelines.GetDependencies.GetDependenciesArgs)">
            <summary>
            The process.
            </summary>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetDependencies.GetDatasourceDependencies">
            <summary>
            The get data source dependencies.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetDependencies.GetDatasourceDependencies.Process(Sitecore.ContentSearch.Pipelines.GetDependencies.GetDependenciesArgs)">
            <summary>
            The process.
            </summary>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetDependencies.GetDatasourceDependencies.GetSourceUris(Sitecore.Links.ItemLink[],Sitecore.Data.Items.Item)">
            <summary>
            Gets the source uris.
            </summary>
            <param name="layoutLinks">The layout links.</param>
            <returns>List of source Uris.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetDependencies.GetDatasourceDependencies.GetLinkDatabase">
            <summary>
            Gets the link database.
            </summary>
            <returns>The LinkDatabase.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetDependencies.GetDependenciesArgs">
            <summary>
            The get dependencies args.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.GetDependencies.GetDependenciesArgs.dependencies">
            <summary>
            The _dependencies.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetDependencies.GetDependenciesArgs.#ctor(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.GetDependencies.GetDependenciesArgs" /> class.
            </summary>
            <param name="indexable">The indexable.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetDependencies.GetDependenciesArgs.IndexedItem">
            <summary>
            Gets the indexed item.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetDependencies.GetDependenciesArgs.Dependencies">
            <summary>
            Gets the dependencies.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetDependencies.GetDependenciesPipeline">
            <summary>
            The get dependencies pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetDependencies.GetDependenciesPipeline.GetIndexingDependencies(Sitecore.ContentSearch.IIndexable)">
            <summary>The get indexing dependencies.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetFacets.FacetsPreProcessing">
            <summary>The <see cref="T:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsProcessor" /> class.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetFacets.FacetsPreProcessing.Process(Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs)">
            <summary>Processes the specified args.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs.#ctor(System.Linq.IQueryable,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.FacetQuery},System.Collections.Generic.IDictionary{System.String,Sitecore.ContentSearch.IVirtualFieldProcessor},Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs" /> class.
            </summary>
            <param name="baseQuery">The base query.</param>
            <param name="facetQueries">The facet queries.</param>
            <param name="virtualFieldProcessors">The virtual field processors.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs.FieldNameTranslator">
            <summary>
            Gets or sets the field name translator.
            </summary>
            <value>
            The field name translator.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs.BaseQuery">
            <summary>Gets or sets the base query.</summary>
            <value>The base query.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs.FacetQueries">
            <summary>Gets or sets the facet queries.</summary>
            <value>The facet queries.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs.VirtualFieldProcessors">
            <summary>Gets or sets the virtual field processors.</summary>
            <value>The virtual field processors.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs.ResultArgs">
            <summary>Gets or sets the result.</summary>
            <value>The result.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsPipeline">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsPipeline"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsPipeline.Run(Sitecore.Abstractions.BaseCorePipelineManager,Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs)">
            <summary>Runs the specified args.</summary>
            <param name="pipeline">The pipeline.</param>
            <param name="args">The args.</param>
            <returns>The <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsProcessor">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsProcessor"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.ApplyGlobalFilters">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.ApplyGlobalFilters"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.ApplyGlobalFilters.Process(Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersArgs)">
            <summary>Processes the specified args.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersArgs">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersArgs.#ctor(System.Linq.IQueryable{System.Object},System.Type,Sitecore.ContentSearch.IIndexable,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersArgs" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersArgs.#ctor(System.Linq.IQueryable{System.Object},System.Type,Sitecore.ContentSearch.IIndexable,System.Boolean,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersArgs" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersArgs.Query">
            <summary>Gets or sets the query.</summary>
            <value>The query.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersArgs.StartLocationItem">
            <summary>Gets or sets the start location item.</summary>
            <value>The start location item.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersArgs.SearchStringModel">
            <summary>
            Search operations as send from UI.
            </summary>
            <example>
            type     value    operation
            ----------------------------------
            version    1          must
            text       sitecore   should
            </example>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersPipeline">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersPipeline"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersPipeline.Run``1(Sitecore.Abstractions.BaseCorePipelineManager,Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersArgs)">
            <summary>Runs the specified args.</summary>
            <param name="args">The args.</param>
            <returns>The <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersProcessor">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.GetGlobalFilters.GetGlobalFiltersProcessor"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.ApplyGlobalLinqFilters">
            <summary>The <see cref="T:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.ApplyGlobalLinqFilters" /> class.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.ApplyGlobalLinqFilters.Process(Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersArgs)">
            <summary>Processes the specified args.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.ApplyGlobalLinqFilters.GetQuery(Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersArgs)">
            <summary>
            Gets the query.
            </summary>
            <param name="args">The args.</param>
            <returns>The query from arguments.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersArgs">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersArgs.#ctor(System.Object,System.Type,System.Collections.Generic.List{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersArgs"/> class.
            </summary>
            <param name="query">The query.</param>
            <param name="elementType">Type of the element.</param>
            <param name="executionContext">The execution context.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersArgs.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersArgs.QueryElementType">
            <summary>
            Gets or sets the type of the query element.
            </summary>
            <value>
            The type of the query element.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersArgs.ExecutionContext">
            <summary>
            Gets or sets the execution context.
            </summary>
            <value>
            The execution context.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersPipeline">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersPipeline"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersPipeline.Run``1(Sitecore.Abstractions.BaseCorePipelineManager,Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersArgs)">
            <summary>
            Runs the specified pipeline.
            </summary>
            <typeparam name="T">The type parameter.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="args">The arguments.</param>
            <returns>The query of type parameter.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersProcessor">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.QueryGlobalFiltersProcessor"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.GetQueryState.CommandStateProcessor">
            <summary>
            The command state processor.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetQueryState.CommandStateProcessor.Process(Sitecore.Pipelines.GetQueryState.GetQueryStateArgs)">
            <summary>
            Runs the processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.GetQueryState.CommandStateProcessor.GetCommand(Sitecore.Pipelines.GetQueryState.GetQueryStateArgs)">
            <summary>
            The get command.
            </summary>
            <param name="args">
            The args.
            </param>
            <returns>
            The <see cref="T:Sitecore.Shell.Framework.Commands.Command"/>.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.IndexingFilters.ApplyInboundIndexFilter">
            <summary>
            The apply inbound index filter.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.IndexingFilters.ApplyInboundIndexFilter.Process(Sitecore.ContentSearch.Pipelines.IndexingFilters.InboundIndexFilterArgs)">
            <summary>
            The process.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.IndexingFilters.ApplyOutboundSecurityFilter">
            <summary>
            The apply outbound index filter.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.IndexingFilters.ApplyOutboundSecurityFilter.Process(Sitecore.ContentSearch.Pipelines.IndexingFilters.OutboundIndexFilterArgs)">
            <summary>
            The process.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.IndexingFilters.InboundIndexFilterArgs">
            <summary>
            The inbound index filter args.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.IndexingFilters.InboundIndexFilterArgs.#ctor(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.IndexingFilters.InboundIndexFilterArgs" /> class.
            </summary>
            <param name="indexableToIndex">Index of the indexable to.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.IndexingFilters.InboundIndexFilterArgs.IndexableToIndex">
            <summary>Gets or sets the index of the indexable to.</summary>
            <value>The index of the indexable to.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.IndexingFilters.InboundIndexFilterArgs.IsExcluded">
            <summary>
            Gets or sets a value indicating whether this instance is excluded.
            </summary>
            <value>
            <c>true</c> if this instance is excluded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.IndexingFilters.InboundIndexFilterPipeline">
            <summary>
            The inbound index filter pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.IndexingFilters.InboundIndexFilterPipeline.Run(Sitecore.Abstractions.BaseCorePipelineManager,Sitecore.ContentSearch.Pipelines.IndexingFilters.InboundIndexFilterArgs)">
            <summary>
            Runs the specified args.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="args">The args.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.IndexingFilters.InboundIndexFilterProcessor">
            <summary>
            The inbound index filter processor.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.IndexingFilters.OutboundIndexFilterArgs">
            <summary>
            The outbound index filter args.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.IndexingFilters.OutboundIndexFilterArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.IndexingFilters.OutboundIndexFilterArgs" /> class.
            </summary>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="indexableDataSource">The indexable data source.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.IndexingFilters.OutboundIndexFilterArgs.IndexableUniqueId">
            <summary>Gets or sets the indexable unique id.</summary>
            <value>The indexable unique id.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.IndexingFilters.OutboundIndexFilterArgs.IndexableDataSource">
            <summary>Gets or sets the indexable data source.</summary>
            <value>The indexable data source.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.IndexingFilters.OutboundIndexFilterArgs.IsExcluded">
            <summary>
            Gets or sets a value indicating whether this instance is excluded.
            </summary>
            <value>
            <c>true</c> if this instance is excluded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.IndexingFilters.OutboundIndexFilterArgs.AccessRight">
            <summary>Gets or sets the access right.</summary>
            <value>The access right.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.IndexingFilters.OutboundIndexFilterPipeline">
            <summary>
            The outbound index filter pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.IndexingFilters.OutboundIndexFilterPipeline.CheckItemSecurity(Sitecore.Abstractions.BaseCorePipelineManager,Sitecore.Abstractions.BaseAccessRightManager,Sitecore.ContentSearch.Pipelines.IndexingFilters.OutboundIndexFilterArgs)">
            <summary>
            Checks the item security.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="accessRight">The access right.</param>
            <param name="args">The args.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.PipelineNames">
            <summary>
            The pipeline names.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.PipelineNames.GetContextIndex">
            <summary>The get context index.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.PipelineNames.GetGlobalSearchFilters">
            <summary>The get facets.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.PipelineNames.ProcessFacets">
            <summary>The process facets</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.PipelineNames.GetFacets">
            <summary>The get facets</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.PipelineNames.StripQueryStringParameters">
            <summary>The strip query string parameters</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.PipelineNames.TranslateQuery">
            <summary>The translate query</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.PipelineNames.QueryWarmup">
            <summary>The query warm up</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.PipelineNames.InboundIndexingFilter">
            <summary>Inbound index filter</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.PipelineNames.OutboundIndexingFilter">
            <summary>Outbound index filter</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.PipelineNames.GetChildrenToIndex">
            <summary>Gets a list of children to index based on the parent item</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ProcessFacets.FacetsPostProcessing">
            <summary>The <see cref="T:Sitecore.ContentSearch.Pipelines.ProcessFacets.FacetsPostProcessing" /> class.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ProcessFacets.FacetsPostProcessing.Process(Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs)">
            <summary>Processes the specified args.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ProcessFacets.FacetsPostProcessing.GetFacets(Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs)">
            <summary>Gets the facets.</summary>
            <param name="args">The args.</param>
            <returns>Modified facets.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs.#ctor(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}},System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.FacetQuery},System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.FacetQuery},System.Collections.Generic.IDictionary{System.String,Sitecore.ContentSearch.IVirtualFieldProcessor},Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs" /> class.
            </summary>
            <param name="facets">The facets.</param>
            <param name="facetQueries">The facet queries.</param>
            <param name="originalFacetQueries">The original facet queries.</param>
            <param name="virtualFieldProcessors">The virtual field processors.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs.FieldNameTranslator">
            <summary>
            Gets or sets the field name translator.
            </summary>
            <value>
            The field name translator.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs.Facets">
            <summary>Gets or sets the facets.</summary>
            <value>The facets.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs.FacetQueries">
            <summary>Gets or sets the facet queries.</summary>
            <value>The facet queries.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs.OriginalFacetQueries">
            <summary>Gets or sets the original facet queries.</summary>
            <value>The original facet queries.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs.VirtualFieldProcessors">
            <summary>Gets or sets the virtual field processors.</summary>
            <value>The virtual field processors.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs.Result">
            <summary>Gets or sets the result.</summary>
            <value>The result.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsPipeline">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsPipeline"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsPipeline.Run(Sitecore.Abstractions.BaseCorePipelineManager,Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs)">
            <summary>
            Runs the specified args.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="args">The args.</param>
            <returns>
            The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsProcessor">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsProcessor"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.QueryWarmups.QueryWarmupArgs">
            <summary>
            The query warmup args.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.QueryWarmups.QueryWarmupArgs.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.QueryWarmups.QueryWarmupArgs"/> class.
            </summary>
            <param name="queries">
            The queries.
            </param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.QueryWarmups.QueryWarmupArgs.Queries">
            <summary>Gets or sets the result.</summary>
            <value>The result.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.QueryWarmups.QueryWarmupPipeline">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.QueryWarmups.QueryWarmupPipeline"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.QueryWarmups.QueryWarmupPipeline.Run(Sitecore.Abstractions.BaseCorePipelineManager,Sitecore.ContentSearch.Pipelines.QueryWarmups.QueryWarmupArgs)">
            <summary>Runs the specified args.</summary>
            <param name="args">The args.</param>
            <returns>The <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.QueryWarmups.QueryWarmupProcessor">
            <summary>
            The query warmup processor.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.QueryWarmups.RunQueries">
            <summary>
            The perform operation.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.QueryWarmups.RunQueries.Process(Sitecore.ContentSearch.Pipelines.QueryWarmups.QueryWarmupArgs)">
            <summary>Processes the specified args.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.QueryWarmups.RunQueries.GetQueryWarmup(Sitecore.ContentSearch.Pipelines.QueryWarmups.QueryWarmupArgs)">
            <summary>
            The get query warmup.
            </summary>
            <param name="args">
            The args.
            </param>
            <returns>
            The <see>
                  <cref>IEnumerable</cref>
                </see> .
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.BaseResolveBoostPipelineProcessor">
            <summary>
            The base processor.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.BaseResolveBoostPipelineProcessor.ConvertToBoostingRules``1(System.Collections.Generic.IEnumerable{Sitecore.Data.Items.Item})">
            <summary>
            The convert to boosting rules.
            </summary>
            <param name="ruleItems">
            The rule items.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            The <see cref="T:Sitecore.Rules.RuleList`1"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.BaseResolveBoostPipelineProcessor.GetLocalBoostingRules(Sitecore.Data.Items.Item)">
            <summary>
            The get local boosting rules.
            </summary>
            <param name="item">
            The item.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.BaseResolveBoostPipelineProcessor.GetGlobalBoostingRules(Sitecore.Data.Items.Item)">
            <summary>
            The get global boosting rules.
            </summary>
            <param name="item">
            The item.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.BaseResolveBoostPipelineProcessor.ReadStaticBoost(Sitecore.ContentSearch.IIndexable)">
            <summary>
            The read static boost from an item.
            </summary>
            <param name="item">
            The item to read it from.
            </param>
            <returns>
            The <see cref="T:System.Single"/> boost.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.BaseResolveFieldBoostPipelineProcessor">
            <summary>
            The base processor.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.BaseResolveFieldBoostPipelineProcessor.Process(Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.ResolveFieldBoostArgs)">
            <summary>The process.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.FieldDefinitionItemResolver">
            <summary>
            The field definition item resolver.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.FieldDefinitionItemResolver.Process(Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.ResolveFieldBoostArgs)">
            <summary>The process.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.ResolveFieldBoostArgs">
            <summary>
            The boost field args.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.ResolveFieldBoostArgs.#ctor(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.ResolveFieldBoostArgs"/> class.
            </summary>
            <param name="field">
            The field.
            </param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.ResolveFieldBoostArgs.IndexedField">
            <summary>
            Gets the indexed field.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.ResolveFieldBoostArgs.FieldDefinition">
            <summary>
            Gets or sets the field definition item that needs to be set within the pipeline.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.ResolveFieldBoostArgs.ResolvedBoost">
            <summary>
            Gets or sets the resolved boost.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.StaticFieldBoostResolver">
            <summary>
            The static field resolver.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.StaticFieldBoostResolver.Process(Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.ResolveFieldBoostArgs)">
            <summary>
            The process.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.SystemFieldFilter">
            <summary>
            The system field filter.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.SystemFieldFilter.Process(Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.ResolveFieldBoostArgs)">
            <summary>
            The process.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.BaseResolveItemBoostPipelineProcessor">
            <summary>
            The base processor.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.BaseResolveItemBoostPipelineProcessor.Process(Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ResolveItemBoostArgs)">
            <summary>The process.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.GlobalRuleBasedItemBoostResolver">
            <summary>
            The global rule based item boost resolver.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.GlobalRuleBasedItemBoostResolver.Process(Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ResolveItemBoostArgs)">
            <summary>The process.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ItemLocationFilter">
            <summary>
            The item location filter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ItemLocationFilter.includedLocations">
            <summary>The included locations</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ItemLocationFilter.IncludedLocations">
            <summary>
            Gets the included locations.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ItemLocationFilter.Process(Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ResolveItemBoostArgs)">
            <summary>
            The process.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.LocalRuleBasedItemBoostResolver">
            <summary>
            The rule based item boost resolver that processes rules assigned to the item directly.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.LocalRuleBasedItemBoostResolver.Process(Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ResolveItemBoostArgs)">
            <summary>
            The process.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ResolveItemBoostArgs">
            <summary>
            The boost field args.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ResolveItemBoostArgs.#ctor(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ResolveItemBoostArgs" /> class.
            </summary>
            <param name="indexable">The indexable.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ResolveItemBoostArgs.Indexable">
            <summary>
            Gets the indexed item.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ResolveItemBoostArgs.ResolvedBoost">
            <summary>
            Gets or sets the resolved boost.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.StaticItemBoostResolver">
            <summary>
            The static item boost resolver.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.StaticItemBoostResolver.Process(Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ResolveItemBoostArgs)">
            <summary>The process.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.SearchPipelineArgs">
            <summary>
            Search Pipeline Arguments
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.SearchPipelineProcessor`1">
            <summary>The <see cref="T:Sitecore.ContentSearch.Pipelines.SearchPipelineProcessor`1"/> class.</summary>
            <typeparam name="TArg">The type of the argument.</typeparam>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.SearchPipelineProcessor`1.Process(`0)">
            <summary>Processes the specified args.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.RemoveEmptySearches">
            <summary>
            The remove empty searches.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.RemoveEmptySearches.Process(Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersArgs)">
            <summary>Processes the specified args.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.RemoveEmptySearches.Search(Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersArgs)">
            <summary>Gets the facets.</summary>
            <param name="args">The args.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueries">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueries"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueries.Process(Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersArgs)">
            <summary>Processes the specified args.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueries.Search(Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersArgs)">
            <summary>Gets the facets.</summary>
            <param name="args">The args.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersArgs">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersArgs.#ctor(Sitecore.ContentSearch.IIndexable,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersArgs" /> class.
            </summary>
            <param name="startLocation">The start location.</param>
            <param name="searchStringModel">The search String Model.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersArgs.StartSearchLocation">
            <summary>Gets or sets the end date.</summary>
            <value>The end date.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersArgs.SearchStringModel">
            <summary>Gets or sets the name of the index.</summary>
            <value>The name of the index.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersPipeline">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersPipeline"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersPipeline.Run(Sitecore.Abstractions.BaseCorePipelineManager,Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersArgs)">
            <summary>
            Runs the specified args.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="args">The args.</param>
            <returns>
            The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersProcessor">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueryStringParametersProcessor"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.TranslateQuery.ApplyProviderTranslation">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.TranslateQuery.ApplyProviderTranslation"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.TranslateQuery.ApplyProviderTranslation.Process(Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryArgs)">
            <summary>Processes the specified args.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.TranslateQuery.ApplyProviderTranslation.Search(Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryArgs)">
            <summary>Gets the facets.</summary>
            <param name="args">The args.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.TranslateQuery.ApplySitecoreContextResolvers">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.TranslateQuery.ApplySitecoreContextResolvers"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.TranslateQuery.ApplySitecoreContextResolvers.Process(Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryArgs)">
            <summary>Processes the specified args.</summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.TranslateQuery.ApplySitecoreContextResolvers.Search(Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryArgs)">
            <summary>Gets the facets.</summary>
            <param name="args">The args.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryArgs">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryArgs.#ctor(Sitecore.ContentSearch.IProviderSearchContext,Sitecore.ContentSearch.IIndexable,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryArgs" /> class.
            </summary>
            <param name="context">The context.</param>
            <param name="startLocation">The start location.</param>
            <param name="searchStringModel">The search String Model.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryArgs.StartSearchLocation">
            <summary>Gets or sets the end date.</summary>
            <value>The end date.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryArgs.SearchStringModel">
            <summary>Gets or sets the name of the index.</summary>
            <value>The name of the index.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryArgs.SearchContext">
            <summary> Gets or sets the search context. </summary>
            <value> The search context. </value>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryPipeline">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryPipeline"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryPipeline.Run(Sitecore.Abstractions.BaseCorePipelineManager,Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryArgs)">
            <summary>
            Runs the specified args.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="args">The args.</param>
            <returns>
            The <see cref="T:System.Boolean" />.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryProcessor">
            <summary>
            <see cref="T:Sitecore.ContentSearch.Pipelines.TranslateQuery.TranslateQueryProcessor"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ProviderIndexConfiguration">
            <summary>
            The provider default index configuration.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ProviderIndexConfiguration._defaultSearchSecurityOption">
            <summary>
            Default search security option.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ProviderIndexConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ProviderIndexConfiguration" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ProviderIndexConfiguration.DocumentOptions">
            <summary>Gets or sets the document options.</summary>
            <value>The document options.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ProviderIndexConfiguration.FieldMap">
            <summary>Gets or sets the field map.</summary>
            <value>The field map.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ProviderIndexConfiguration.FieldReaders">
            <summary>Gets or sets the field readers.</summary>
            <value>The field readers.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ProviderIndexConfiguration.IndexFieldStorageValueFormatter">
            <summary>Gets or sets the index field storage value formatter.</summary>
            <value>The index field storage value formatter.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ProviderIndexConfiguration.VirtualFields">
            <summary>
            Gets or sets the virtual fields.
            </summary>
            <value>
            The virtual fields.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.ProviderIndexConfiguration.DefaultDateFormat">
            <summary>Gets the default date format.</summary>
            <value>The default date format.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ProviderIndexConfiguration.DefaultSearchSecurityOption">
            <summary>Gets or sets the default search security option.</summary>
            <value>The default search security option.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.ProviderIndexConfiguration.EnableReadAccessIndexing">
            <summary>
            Gets or sets value indicating whether index stores "item:read" access rules from Security field value.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ProviderIndexConfiguration.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.ProviderSupport.Solr.SchemaExtensions">
            <summary>
            Extension methods for schema generator.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ProviderSupport.Solr.SchemaExtensions.CreateCopyField(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Creates the copy field.
            </summary>
            <param name="parent">The parent.</param>
            <param name="source">The source.</param>
            <param name="dest">The destination.</param>
            <returns>Copy field XElement.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ProviderSupport.Solr.SchemaExtensions.GetFieldsByTagName(System.Xml.Linq.XElement,System.String)">
            <summary>The remove fields by tag name.</summary>
            <param name="parent">The parent.</param>
            <param name="tagName">The tag name.</param>
            <returns>The <see cref="!:List"/>Returns list of fields.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ProviderSupport.Solr.SchemaExtensions.IsFieldTypeExists(System.Xml.Linq.XElement,System.String)">
            <summary>
            Checks whether field type exists in schema.
            </summary>
            <param name="element"></param>
            <param name="fieldTypeName"></param>
            <returns>Returns <c>true</c> if field type exists in schema.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ProviderSupport.Solr.SchemaExtensions.CreateField(System.Xml.Linq.XElement,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            Creates the field.
            </summary>
            <param name="parent">The parent.</param>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="required">if set to <c>true</c> [required].</param>
            <param name="indexed">if set to <c>true</c> [indexed].</param>
            <param name="stored">if set to <c>true</c> [stored].</param>
            <param name="multiValued">if set to <c>true</c> [multi valued].</param>
            <param name="omitNorms">if set to <c>true</c> [omit norms].</param>
            <param name="termVectors">if set to <c>true</c> [term vectors].</param>
            <param name="termPositions">if set to <c>true</c> [term positions].</param>
            <param name="termOffsets">if set to <c>true</c> [term offsets].</param>
            <param name="defaultValue">The default value.</param>
            <param name="isDynamic">if set to <c>true</c> [is dynamic].</param>
            <returns>Field XElement.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ProviderSupport.Solr.SchemaGenerator">
            <summary>
            The schema generator.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ProviderSupport.Solr.SchemaGenerator.GenerateSchema(System.String,System.String)">
            <summary>
            The generate schema.
            </summary>
            <param name="inputPath">
            The input path.
            </param>
            <param name="outputPath">
            The output path.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ProviderSupport.Solr.SchemaGenerator.ResetMultiValuedValue(System.Xml.Linq.XDocument)">
            <summary>
            Set multiValued value to false. This fix a breaking change introduced by Solr 6.2.1
            </summary>
            <param name="doc">The document.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.IRateCounter.ItemsPerSecond">
            <summary>Gets the items per second.</summary>
            <value>The items per second.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.IRateCounter.Increment">
            <summary>Increments this counter.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.RateCounter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.RateCounter"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.RateCounter.#ctor(System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.RateCounter"/> class.
            </summary>
            <param name="measureTimeSpan">The measure time span.</param>
            <param name="measurementsToCache">The measurements to cache.</param>
            <exception cref="T:System.ArgumentException">
            measureTimeSpan represent a positive time period
            or
            measurementsToCache must be a positive integer
            </exception>
        </member>
        <member name="P:Sitecore.ContentSearch.RateCounter.ItemsPerSecond">
            <summary>Gets the items per second.</summary>
            <value>The items per second.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.RateCounter.Increment">
            <summary>Increments this counter.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.RateCounter.StartCounter">
            <summary>Starts the counter.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.RateCounter.UpdateAverage(System.TimeSpan)">
            <summary>Updates the average.</summary>
            <param name="elapsedPeriod">The elapsed period.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.RateCounter.ProcessCachedMeasurements(System.TimeSpan)">
            <summary>Processes the cached measurements.</summary>
            <param name="elapsedPeriod">The elapsed period.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Rules.Conditions.QueryableOperatorCondition`2.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Rules.Conditions.QueryableOperatorCondition`2.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Rules.Conditions.QueryableStringOperatorCondition`2.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Rules.Conditions.QueryableStringOperatorCondition`2.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Rules.Conditions.QueryableWhenCondition`2.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Rules.Conditions.QueryableWhenCondition`2.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.Rules.Conditions.WhenContentSearchEnabled`1">
            <summary>
            Checks whether Content Search feature is enabled.
            </summary>
            <typeparam name="T">The <see cref="T:Sitecore.Rules.RuleContext"/> class.
            </typeparam>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.Conditions.WhenContentSearchEnabled`1.Execute(`0)">
            <summary>
            Executes the specified rule context.
            </summary>
            <param name="ruleContext">The rule context.</param>
            <returns><c>true</c> if Content Search is enabled; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Rules.Conditions.WhenDateField`2">
            <summary>
            Defines the when field is value.
            </summary>
            <typeparam name="T">The rule context.</typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="T:Sitecore.ContentSearch.Rules.Conditions.WhenNumberField`2">
            <summary>
            Defines the when field is value.
            </summary>
            <typeparam name="T">The rule context.</typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="T:Sitecore.ContentSearch.Rules.Conditions.WhenStringField`2">
            <summary>
            Defines the when field is value.
            </summary>
            <typeparam name="T">The rule context.</typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="T:Sitecore.ContentSearch.Rules.QueryableRuleFactory">
            <summary>
            Defines the rule set factory class.
            
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Rules.QueryableRuleFactory.cache">
            <summary>
            The rule set cache.
            
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.#ctor(Sitecore.Abstractions.BaseTemplateManager)">
            <summary>
            
            </summary>
            <param name="templatemanager"></param>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.GetRules``1(Sitecore.Data.Items.Item,System.String)">
            <summary>
            Gets the rule set.
            
            </summary>
            <typeparam name="T">The rule context.
                        </typeparam><param name="parentItem">The parent item.
                        </param><param name="fieldName">Name of the field.
                        </param>
            <returns>
            The rule set.
            
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.GetRules``1(Sitecore.Data.Fields.Field)">
            <summary>
            Gets the rules.
            
            </summary>
            <typeparam name="T">The rule context.
                        </typeparam><param name="field">The field.
                        </param>
            <returns>
            Returns the rules.
            
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.GetRules``1(System.Collections.Generic.IEnumerable{Sitecore.Data.Items.Item},System.String)">
            <summary>
            Gets the rule set.
            
            </summary>
            <typeparam name="T">The rule context.
                        </typeparam><param name="items">The items.
                        </param><param name="fieldName">Name of the field.
                        </param>
            <returns>
            The rule set.
            
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.InvalidateCache">
            <summary>
            Invalidates the cache.
            
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.ParseRules``1(Sitecore.Data.Database,System.String)">
            <summary>
            Gets the rule set.
            
            </summary>
            <typeparam name="T">The rule context.
                        </typeparam><param name="database">The database.
                        </param><param name="rulesXml">The rules XML.
                        </param>
            <returns>
            The rule set.
            
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.ParseRules``1(Sitecore.Data.Database,System.Xml.Linq.XElement)">
            <summary>
            Gets the rule set.
            
            </summary>
            <typeparam name="T">The rule context.</typeparam><param name="database">The database.</param><param name="node">The XML node.</param>
            <returns>
            The rules.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.GetRule``1(Sitecore.Data.Database,System.Xml.Linq.XElement)">
            <summary>
            Gets the rule.
            
            </summary>
            <typeparam name="T">The rule context.
                        </typeparam><param name="database">The database.
                        </param><param name="element">The element.
                        </param>
            <returns>
            The generated rule.
            
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.GetRuleAction``1(Sitecore.Data.Database,System.Xml.Linq.XElement)">
            <summary>
            Gets the action.
            
            </summary>
            <typeparam name="T">The rule context.
                        </typeparam><param name="database">The database.
                        </param><param name="element">The element.
                        </param>
            <returns>
            The rule action.
            
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.GetRuleActions``1(Sitecore.Data.Database,System.Xml.Linq.XElement,Sitecore.Rules.Rule{``0})">
            <summary>
            Gets the rule actions.
            
            </summary>
            <typeparam name="T">The rule context.
                        </typeparam><param name="database">The database.
                        </param><param name="element">The element.
                        </param><param name="result">The result.
                        </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.GetRuleCondition``1(Sitecore.Data.Database,System.Xml.Linq.XElement)">
            <summary>
            Gets the rule condition.
            
            </summary>
            <typeparam name="T">The rule context.
                        </typeparam><param name="database">The database.
                        </param><param name="element">The element.
                        </param>
            <returns>
            The rule condition.
            
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.GetRuleConditionFactor``1(Sitecore.Data.Database,System.Xml.Linq.XElement)">
            <summary>
            Gets the rule condition.
            
            </summary>
            <typeparam name="T">The rule context type.
                        </typeparam><param name="database">The database.
                        </param><param name="element">The element.
                        </param>
            <returns>
            The rule condition.
            
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.GetRuleConditions``1(Sitecore.Data.Database,System.Xml.Linq.XContainer,Sitecore.Rules.Rule{``0})">
            <summary>
            Gets the rule conditions.
            
            </summary>
            <typeparam name="T">The rule context.
                        </typeparam><param name="database">The database.
                        </param><param name="element">The element.
                        </param><param name="result">The result.
                        </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Rules.QueryableRuleFactory.SetProperties(System.Xml.Linq.XElement,System.Object)">
            <summary>
            Sets the properties.
            
            </summary>
            <param name="element">The element.
                        </param><param name="result">The result.
                        </param>
        </member>
        <member name="T:Sitecore.ContentSearch.SearchDefaults">
            <summary>
            The search defaults.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SearchDefaults.ContentIndex">
            <summary>
            The content index.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SearchDefaults.SystemIndex">
            <summary>
            The system index.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SearchDefaults.LayoutsIndex">
            <summary>
            The layouts index.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SearchDefaults.MediaLibraryIndex">
            <summary>
            The media library index.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SearchDefaults.TemplatesIndex">
            <summary>
            The templates index.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SearchDefaults.SitecoreIndex">
            <summary>
            The sitecore index.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.SearchIndexInitializableUtility">
            <summary>
            The search index initializable utility.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchIndexInitializableUtility.Initialize(Sitecore.ContentSearch.ISearchIndex,System.Object[])">
            <summary>Initializes the search index initializables.</summary>
            <param name="index">The index.</param>
            <param name="instances">The instances.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchIndexInitializableUtility.Initialize(Sitecore.ContentSearch.ISearchIndex,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Initializes the search index initializables.</summary>
            <param name="index">The index.</param>
            <param name="instances">The instances.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchIndexSwitchTracker.IsOn">
            <summary>
            Gets a value indicating whether the Search Index is on or otherwise.
            </summary>
            <value>
              <c>true</c> if this instance is on; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchIndexSwitchTracker.IsIndexOn(System.String)">
            <summary>
            Determines whether the specified index name is paused.
            </summary>
            <param name="indexName">Name of the index.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.SearchIndexTerm">
            <summary>
            The search index term.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SearchIndexTerm.getDocumentFrequencyDelegate">
            <summary>
            The get document frequency delegate
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchIndexTerm.#ctor(System.String,System.Func{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.SearchIndexTerm" /> class.
            </summary>
            <param name="term">The term.</param>
            <param name="getDocumentFrequencyDelegate">The get document frequency delegate.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchIndexTerm.DocumentFrequency">
            <summary>
            Gets the document frequency.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchIndexTerm.Term">
            <summary>
            Gets the term.
            </summary>
            <value>
            The term.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.SearchProvider">
            <summary>
            The search provider.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchProvider.GetContextIndexName(Sitecore.ContentSearch.IIndexable,Sitecore.Abstractions.BaseCorePipelineManager)">
            <summary>
            Given an indexable item, this will return the name of the Index that it will use to search on
            </summary>
            <param name="indexable">The indexable item which will be used to determine (based off the item path) which index will be used for the search.</param>
            <param name="pipeline">The pipeline.</param>
            <returns>
            The Name of the Index
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchProvider.GetContextIndexName(Sitecore.ContentSearch.IIndexable)">
            <summary>Gets the name of the context index.</summary>
            <param name="indexable">The indexable.</param>
            <returns>
            The Name of the Index
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.SearchProviderCollection">
            <summary>
            The <see cref="T:Sitecore.ContentSearch.SearchProviderCollection"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchProviderCollection.Item(System.String)">
            <summary>Gets the <see cref="T:Sitecore.ContentSearch.SearchProvider"/> with the specified name.</summary>
            <param name="name">The name.</param>
            <returns>The result.</returns>
            <returns>The provider with the specified name.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.SearchTypes.ObjectIndexerKey">
            <summary>
            The object indexer key.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SearchTypes.ObjectIndexerKey.value">
            <summary>The value</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.ObjectIndexerKey.#ctor(System.String)">
            <summary>
            Prevents a default instance of the <see cref="T:Sitecore.ContentSearch.SearchTypes.ObjectIndexerKey" /> class from being created.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.ObjectIndexerKey.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.ObjectIndexerKey.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.ObjectIndexerKey.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.SearchTypes.SearchFilter">
            <summary>
            The search filter.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchFilter.IconPath">
            <summary>Gets or sets the icon path.</summary>
            <value>The icon path.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchFilter.FieldName">
            <summary>Gets or sets the name of the field.</summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchFilter.FilterText">
            <summary>Gets or sets the filter text.</summary>
            <value>The filter text.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchFilter.DisplayName">
            <summary>Gets or sets the display name.</summary>
            <value>The display name.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchFilter.ControlType">
            <summary>Gets or sets the type of the control.</summary>
            <value>The type of the control.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchFilter.ControlTypeParameters">
            <summary>Gets or sets the control type parameters.</summary>
            <value>The control type parameters.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchFilter.WebMethod">
            <summary>Gets or sets the web method.</summary>
            <value>The web method.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchFilter.ClientSideHook">
            <summary>Gets or sets the client side hook.</summary>
            <value>The client side hook.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.SearchTypes.SearchResultItem">
            <summary>
            A small implementation of the Sitecore item Class
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SearchTypes.SearchResultItem.fields">
            <summary>
            The fields.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.SearchResultItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.SearchTypes.SearchResultItem" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.CreatedDate">
            <summary>Gets or sets the created date.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.Url">
            <summary>
            Gets or sets the url.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.CreatedBy">
            <summary>Gets or sets the created by.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.ItemId">
            <summary>Gets the item id.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.Language">
            <summary>Gets or sets the language.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.Name">
            <summary>Gets or sets the name.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.Path">
            <summary>Gets or sets the path.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.TemplateId">
            <summary>Gets or sets the template name.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.TemplateName">
            <summary>Gets or sets the template name.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.DatabaseName">
            <summary>
            Gets the database name.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.Updated">
            <summary>Gets or sets the updated.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.UpdatedBy">
            <summary>Gets or sets the UpdatedBy.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.Content">
            <summary>
            Gets or sets the content.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.Semantics">
            <summary>
            Gets or sets the semantics field.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.LockOwner">
            <summary>Gets or sets the UpdatedBy.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.Location">
            <summary>Gets or sets the coordinate of POI.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.IsPointOfInterest">
            <summary>Gets or sets the Is Point of Interest.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.Uri">
            <summary>Gets or sets the uri.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.Version">
            <summary>Gets or sets the version.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.Item(Sitecore.ContentSearch.SearchTypes.ObjectIndexerKey)">
            <summary>Gets the <see cref="T:System.String"/> with the specified key.</summary>
            <param name="key">The key.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.SearchResultItem.GetItem">
            <summary>Get the item object from the SearchResultItem object</summary>
            <returns>The Sitecore.Data.Items.item.</returns>
            <remarks>It is recommended not to use this, but rather store all your fields that you want to use in the index.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.SearchResultItem.GetField(Sitecore.Data.ID)">
            <summary>
            The get field.
            </summary>
            <param name="fieldId">
            The field id.
            </param>
            <returns>
            The <see cref="T:Sitecore.Data.Fields.Field"/>.
            </returns>
            <remarks>It is recommended not to use this, but rather store all your fields that you want to use in the index.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.SearchResultItem.GetFields(Sitecore.Data.ID[])">
            <summary>
            The get fields.
            </summary>
            <param name="fieldId">
            The field id.
            </param>
            <returns>
            The <see cref="T:Sitecore.Collections.FieldCollection"/>.
            </returns>
            <remarks>It is recommended not to use this, but rather store all your fields that you want to use in the index.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.SearchResultItem.GetField(System.String)">
            <summary>
            The get field.
            </summary>
            <param name="fieldName">
            The field Name.
            </param>
            <returns>
            The <see cref="T:Sitecore.Data.Fields.Field"/>.
            </returns>
            <remarks>
            It is recommended not to use this, but rather store all your fields that you want to use in the index.
            </remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.SearchResultItem.ToString">
            <summary>The to string.</summary>
            <returns>The System.String.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Sitecore.ContentSearch.SearchTypes.SearchResultItem.GetDescendants``1(Sitecore.ContentSearch.IProviderSearchContext)" -->
        <!-- Badly formed XML comment ignored for member "M:Sitecore.ContentSearch.SearchTypes.SearchResultItem.GetChildren``1(Sitecore.ContentSearch.IProviderSearchContext)" -->
        <!-- Badly formed XML comment ignored for member "M:Sitecore.ContentSearch.SearchTypes.SearchResultItem.GetAncestors``1(Sitecore.ContentSearch.IProviderSearchContext)" -->
        <member name="P:Sitecore.ContentSearch.SearchTypes.SearchResultItem.ReadAccess">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.SearchTypes.SitecoreUIFacet">
            <summary>
            The sitecore UI facet.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUIFacet.ID">
            <summary>Gets or sets the ID.</summary>
            <value>The ID.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUIFacet.KeyName">
            <summary>Gets or sets the name of the key.</summary>
            <value>The name of the key.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUIFacet.DisplayName">
            <summary>Gets or sets the display name.</summary>
            <value>The display name.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUIFacet.Template">
            <summary>Gets or sets the template.</summary>
            <value>The template.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUIFacet.Type">
            <summary>Gets or sets the type.</summary>
            <value>The type.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUIFacet.Value">
            <summary>Gets or sets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUIFacet.Custom">
            <summary>Gets or sets the custom.</summary>
            <value>The custom.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUIFacet.LocalizedName">
            <summary>
            Gets or sets the localized name.
            </summary>
            <value>
            The localized name.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem">
            <summary>
            A small implementation of the Sitecore item Class
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.group">
            <summary>The group</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.Language">
            <summary>Gets or sets the language.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.Uri">
            <summary>Gets or sets the uri.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.Version">
            <summary>Gets or sets the version.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.GetItem">
            <summary>Get the item object from the SitecoreUISearchResultItem object</summary>
            <returns>The Sitecore.Data.Items.item.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.DoGetItem">
            <summary>
            Returns appropriate Sitecore item.
            </summary>
            <returns>The Sitecore Item.</returns>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.Bucket">
            <summary>Gets or sets the bucket.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.CreatedDate">
            <summary>Gets or sets the created date.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.CreatedBy">
            <summary>Gets or sets the created by.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.IsClone">
            <summary>Gets or sets a value indicating whether is clone.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.ItemId">
            <summary>Gets the item id.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.Languages">
            <summary>Gets or sets the languages.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.QuickActions">
            <summary>Gets or sets the languages.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.DynamicQuickActions">
            <summary>Gets or sets the languages.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.DisplayName">
            <summary>Gets or sets the display name.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.Path">
            <summary>Gets or sets the path.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.HasChildren">
            <summary>Gets whether an item has children</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.TemplateName">
            <summary>Gets or sets the template name.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.TemplateId">
            <summary>Gets or sets the template id.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.Updated">
            <summary>Gets or sets the updated.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.ToString">
            <summary>The to string.</summary>
            <returns>The System.String.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.GetDescendants(Sitecore.ContentSearch.IProviderSearchContext)" -->
        <!-- Badly formed XML comment ignored for member "M:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.GetChildren(Sitecore.ContentSearch.IProviderSearchContext)" -->
        <!-- Badly formed XML comment ignored for member "M:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem.GetAncestors(Sitecore.ContentSearch.IProviderSearchContext)" -->
        <member name="F:Sitecore.ContentSearch.SearchTypes.UISearchResult.fields">
            <summary>
            The fields.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.UISearchResult.Item(Sitecore.ContentSearch.SearchTypes.ObjectIndexerKey)">
            <summary>Gets the <see cref="T:System.String"/> with the specified key.</summary>
            <param name="key">The key.</param>
            <returns>The result.</returns>
        </member>
        <member name="P:Sitecore.ContentSearch.SearchTypes.UISearchResult.ReadAccess">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.Security.AccessRightResult">
            <summary>
            Represents a result of <see cref="T:Sitecore.Security.AccessControl.AccessRight"/> resolution for specific <see cref="T:Sitecore.Security.Accounts.Account"/>.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Security.BasicSecurable">
            <summary>
            Defines a small wrapper for ISecurable.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Security.IAccessRightResolver">
            <summary>
            Represents access right resolver contract.
            Provides methods to get  list of accounts that have access rights assigned to item's hierarchy.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Security.IndexFormatExtensions.FormatForIndexStorage(Sitecore.ContentSearch.Security.AccessRightResult)">
            <summary>
            Returns string representation of the <see cref="T:Sitecore.ContentSearch.Security.AccessRightResult"/> suitable for index storage.
            </summary>
            <param name="accessResult">The access result object.</param>
            <returns>String representation of the <see cref="T:Sitecore.ContentSearch.Security.AccessRightResult"/> suitable for index storage.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Security.IndexFormatExtensions.FormatForIndexStorage(Sitecore.Security.Accounts.Account,System.Boolean)">
            <summary>
            Returns string representation of the <see cref="T:Sitecore.Security.Accounts.Account"/> suitable for index storage.
            </summary>
            <param name="account">The account.</param>
            <param name="allowAccess">The value indicating whether account have access.</param>
            <returns>String representation of the <see cref="T:Sitecore.Security.Accounts.Account"/> suitable for index storage.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Security.IReadAccessSearchResult">
            <summary>
            Interface for the search result that support <see cref="F:Sitecore.ContentSearch.BuiltinFields.ReadAccess"/> index field.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Security.IReadAccessSearchResult.ReadAccess">
            <summary>
            Gets or sets <see cref="F:Sitecore.ContentSearch.BuiltinFields.ReadAccess"/> field.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Security.QueryableExtensions">
            <summary>
            IQueryable extensions that provides method to query using <see cref="F:Sitecore.ContentSearch.BuiltinFields.ReadAccess"/>.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Security.QueryableExtensions.WhereUserCanRead``1(System.Linq.IQueryable{``0},Sitecore.Security.Accounts.User)">
            <summary>
            Filters the specified source based on "item:read" access for user.
            </summary>.
            <typeparam name="T">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="user">The user.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Security.QueryableExtensions.WhereRoleCanRead``1(System.Linq.IQueryable{``0},Sitecore.Security.Accounts.Role)">
            <summary>
            Filters the specified source based on "item:read" access for role.
            </summary>.
            <typeparam name="T">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="role">The role.</param>
            <returns>The results.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Security.ReadAccessRightResolver">
            <summary>
            The read access right resolver.
            Allows to get list of accounts that have "item:read" access rights assigned to item's hierarchy.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Security.SearchSecurityOptions.Default">
            <summary>The default security options.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Security.SearchSecurityOptions.DisableSecurityCheck">
            <summary>
            Disables all security checks. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Security.SearchSecurityOptions.EnableSecurityCheck">
            <summary>
            Runs a security check on all items.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Sharding.HashRange">
            <summary>
            The hash range.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Sharding.HashRange.minimumValue">
            <summary>The min</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Sharding.HashRange.maximumValue">
            <summary>The max</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.HashRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Sharding.HashRange"/> class.
            </summary>
            <param name="minimumValue">The minimum value.</param>
            <param name="maximumValue">The maximum value.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Sharding.HashRange.MinimumValue">
            <summary>Gets the minimum value.</summary>
            <value>The minimum value.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Sharding.HashRange.MaximumValue">
            <summary>Gets the maximum value.</summary>
            <value>The maximum value.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.HashRange.FullRange">
            <summary>Gets the maximum range.</summary>
            <returns>The maximum range.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.HashRange.FromString(System.String)">
            <summary>Creates a HashRange from the specified string.</summary>
            <param name="range">The range.</param>
            <returns>The <see cref="T:Sitecore.ContentSearch.Sharding.HashRange"/></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.HashRange.PartitionRange(System.Int32,Sitecore.ContentSearch.Sharding.HashRange)">
            <summary>Partitions the range.</summary>
            <param name="partitions">The partitions.</param>
            <param name="hashRange">The hash range.</param>
            <returns>List of range partitions.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.HashRange.Includes(System.Int32)">
            <summary>
            Determines whether the specified <paramref name="hash"/> is included in the hash range.
            </summary>
            <param name="hash">The hash.</param>
            <returns>
              <c>true</c> if the specified <paramref name="hash"/> is included in the hash range; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.HashRange.IsSubsetOf(Sitecore.ContentSearch.Sharding.HashRange)">
            <summary>
            Determines whether the current instance is a subset of the specified superset.
            </summary>
            <param name="superset">The superset.</param>
            <returns>
              <c>true</c> if the current instance is a subset of the specified superset; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.HashRange.Overlaps(Sitecore.ContentSearch.Sharding.HashRange)">
            <summary>
            Determines whether the specified range overlaps the current instance.
            </summary>
            <param name="other">The other.</param>
            <returns>
              <c>true</c> if the specified range overlaps the current instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.HashRange.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.HashRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.HashRange.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Sharding.IShardFactory">
            <summary>
            The ShardFactory interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.IShardFactory.CreateShard(Sitecore.ContentSearch.ISearchIndex,System.Int32,System.String,Sitecore.ContentSearch.Sharding.HashRange)">
            <summary>Creates the shard.</summary>
            <param name="index">The index.</param>
            <param name="id">The id.</param>
            <param name="name">The name.</param>
            <param name="hashRange">The hash range.</param>
            <returns>The created shard.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.IShardFactory.CreateNotShardedShard(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Creates an unsharded shard containing the full range.</summary>
            <param name="index">The index.</param>
            <returns>The shard.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Sharding.IShardingStrategy">
            <summary>
            The ShardingStrategy interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Sharding.IShardingStrategy.ShardCount">
            <summary>Gets the shard count.</summary>
            <value>The shard count.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.IShardingStrategy.GetAllShards">
            <summary>Gets all shards.</summary>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/> of all shards.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.IShardingStrategy.GetShardAssignment(System.Object)">
            <summary>Gets the shard assignment.</summary>
            <param name="document">The document.</param>
            <returns>The assigned shard.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.IShardingStrategy.GetShardAssignment(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>Gets the shard assignment.</summary>
            <param name="id">The id.</param>
            <returns>The assigned shard.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Sharding.Shard">
            <summary>The shard.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Sharding.Shard.NotShardedId">
            <summary>
            The not sharded.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Sharding.Shard.NotSharded">
            <summary>
            The not sharded.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Sharding.Shard.isDisposed">
            <summary>The is disposed</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.Shard.#ctor(System.Int32,System.String,Sitecore.ContentSearch.Sharding.HashRange)">
            <summary>Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Sharding.Shard"/> class.</summary>
            <param name="id">The id.</param>
            <param name="name">The name.</param>
            <param name="hashRange">The hash range.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Sharding.Shard.Id">
            <summary>Gets the id.</summary>
            <value>The id.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Sharding.Shard.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.Sharding.Shard.HashRange">
            <summary>Gets the hash range.</summary>
            <value>The hash range.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.Shard.Initialize">
            <summary>Initializes this instance.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.Shard.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.Shard.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.Shard.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.Shard.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.Shard.Dispose(System.Boolean)">
            <summary>Releases unmanaged and - optionally - managed resources.</summary>
            <param name="isDisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Sharding.Shard.VerifyNotDisposed">
            <summary>Verifies the not disposed.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.SitecoreCachesDisabler">
            <summary>
            Defines CacheDisabler class. 
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreCachesDisabler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.SitecoreCachesDisabler"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreCachesDisabler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.SitecoreIndexableItem">
            <summary>
            An Indexable which represents a Sitecore item.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreIndexableItem.Item">
            <summary>
            Inner Sitecore item.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.SitecoreItemCrawler">
            <summary>
            The sitecore item crawler.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SitecoreItemCrawler.database">
            <summary>
            The database.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SitecoreItemCrawler.root">
            <summary>
            The root.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SitecoreItemCrawler.rootItem">
            <summary>
            The root item.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SitecoreItemCrawler.rootItemErrorLogged">
            <summary>
            Identifies if obtaining root item error was logged
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.SitecoreItemCrawler" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.#ctor(Sitecore.ContentSearch.IIndexOperations)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.SitecoreItemCrawler" /> class.
            </summary>
            <param name="indexOperations">The index operations.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreItemCrawler.Database">
            <summary>
            Gets or sets the database.
            </summary>
            <value>
            The database.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreItemCrawler.Root">
            <summary>
            Gets or sets the root.
            </summary>
            <value>
            The root.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreItemCrawler.RootItem">
            <summary>
            Gets the root item.
            </summary>
            <value>
            The root item.
            </value>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the specified index.</summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.Update(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>
            Updates the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="indexableUniqueId">The indexable unique identifier.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.Update(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexEntryOperationContext,Sitecore.ContentSearch.IndexingOptions)">
            <summary>
            Updates specific item.
            </summary>
            <param name="context">The context.</param>
            <param name="indexableUniqueId">The indexable unique id.</param>
            <param name="operationContext">The operation context.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.PrepareIndexableVersion(Sitecore.Data.Items.Item,Sitecore.ContentSearch.IProviderUpdateContext)">
            <summary>
            Prepares the indexable version.
            </summary>
            <param name="item">The item.</param>
            <param name="context">The context.</param>
            <returns>indexable item object</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.IsAncestorOf(Sitecore.Data.Items.Item)">
            <summary>
            Determines whether the index root is an ancestor of the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns><c>true</c> if item is a descendant.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.IsExcludedFromIndex(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>
            Determines whether the indexable is excluded from index.
            </summary>
            <param name="indexableUniqueId">The indexable unique identifier.</param>
            <returns><c>true</c> if the indexable is excluded from index; otherwise false.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.IsExcludedFromIndex(Sitecore.ContentSearch.IIndexableUniqueId,System.Boolean)">
            <summary>
            Determines whether the indexable is excluded from index.
            </summary>
            <param name="indexableUniqueId">The indexable unique identifier.</param>
            <param name="checkLocation">if set to <c>true</c> then the check considers location of the indexable.</param>
            <returns><c>true</c> if the indexable is excluded from index; otherwise false.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.IsExcludedFromIndex(Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexEntryOperationContext,System.Boolean)">
            <summary>
            Determines whether the indexable is excluded from index.
            </summary>
            <param name="indexableUniqueId">The indexable unique identifier.</param>
            <param name="operationContext">The operation context.</param>
            <param name="checkLocation">if set to <c>true</c> then the check considers location of the indexable.</param>
            <returns><c>true</c> if the indexable is excluded from index; otherwise false.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.GetDatabase(System.String)">
            <summary>
            Gets the database.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <returns>The Database.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.GetItem(Sitecore.Data.ItemUri)">
            <summary>
            Gets the item by specified ItemUri.
            </summary>
            <param name="itemUri">The item URI.</param>
            <returns>The Item.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.GetItem(Sitecore.Data.ID)">
            <summary>
            Gets the item by specified ID.
            </summary>
            <param name="itemId">The item ID.</param>
            <returns>The Item.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.DoUpdate(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.SitecoreIndexableItem)">
            <summary>
            Executes the update event.
            </summary>
            <param name="context">The context.</param>
            <param name="indexable">The indexable.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.DoUpdate(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.SitecoreIndexableItem,Sitecore.ContentSearch.IndexEntryOperationContext)">
            <summary>
            Executes the update event.
            </summary>
            <param name="context">The context.</param>
            <param name="indexable">The indexable.</param>
            <param name="operationContext">The operation context.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.GetItem(Sitecore.Data.Items.Item)">
            <summary>
            Get all the dependent language item for a item
            </summary>
            <param name="item">item which we need to know the dependent language</param>
            <returns>all the dependent language</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.GroupShouldBeDeleted(Sitecore.ContentSearch.IIndexableId)">
            <summary>
            Determines if the group should be deleted.
            </summary>
            <param name="indexableId">The indexable id.</param>
            <returns>true if the whole group should be deleted; otherwise false</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.GetChildList(Sitecore.ContentSearch.SitecoreIndexableItem)">
            <summary>
            Gets the child list.
            </summary>
            <param name="parent">The parent item.</param>
            <returns>list of child items.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.GetChildList(Sitecore.Data.Items.Item)">
            <summary>
            Gets the child list. This is a fallback method if the <see cref="F:Sitecore.ContentSearch.Pipelines.PipelineNames.GetChildrenToIndex"/> pipeline does not exist. 
            </summary>
            <param name="parent">The parent item.</param>
            <returns>list of child items.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.GetRootItem">
            <summary>
            Gets the root item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.IsRootOrDescendant(Sitecore.Data.ID)">
            <summary>
            Determines whether the id is equal to the root ID or is a descendant of the root.
            </summary>
            <param name="id">The identifier.</param>
            <returns><c>true</c> if the id equals to root's ID or it is its descendant; otherwise, false.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.UpdateClones(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.SitecoreIndexableItem)">
            <summary>
            Updates the clones of the version.
            </summary>
            <param name="context">The context.</param>
            <param name="versionIndexable">The version indexable.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.DeleteFallbackItem(Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IProviderUpdateContext)">
            <summary>
            When perform a version deletion operation,
            Make sure that all the fallback language version deleted if it is the last item of main language.
            </summary>
            <param name="context">The context.</param>
            <param name="id">The version indexable.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.DeleteUnusedFallbackVersion(Sitecore.Data.Items.Item,Sitecore.ContentSearch.IProviderUpdateContext)">
            <summary>
            Deletes former fallback version in case fallback is switched off on the current item
            </summary>
            <param name="version">The item version</param>
            <param name="context">update context</param>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemCrawler.UpdatePreviousVersion(Sitecore.Data.Items.Item,Sitecore.ContentSearch.IProviderUpdateContext)">
            <summary>
            Updates the previous version.
            </summary>
            <param name="item">The item.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.WriteCachesDisabler">
            <summary>
            The write caches disabler.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.WriteCachesDisabler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.WriteCachesDisabler"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.WriteCachesDisabler.Dispose">
            <summary>
            The dispose.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.SitecoreItemDataField">
            <summary>
            The sitecore item data field.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemDataField.#ctor(Sitecore.Data.Fields.Field)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.SitecoreItemDataField" /> class.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreItemDataField.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreItemDataField.TypeKey">
            <summary>Gets the field type key.</summary>
            <value>The field type key.</value>
            <remarks>
            Used for looking up field readers in the <see cref="T:Sitecore.ContentSearch.FieldReaders.FieldReaderMap" />
            </remarks>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreItemDataField.FieldType">
            <summary>Gets the field type.</summary>
            <value>The type of the field.</value>
            <remarks>
            Used for looking up field readers in the <see cref="T:Sitecore.ContentSearch.FieldReaders.FieldReaderMap" />
            </remarks>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreItemDataField.Value">
            <summary>Gets the field value.</summary>
            <value>The field value.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreItemDataField.Id">
            <summary>Gets the field id.</summary>
            <value>The field id.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreItemDataField.Field">
            <summary>Gets the sitecore field.</summary>
            <value>The sitecore field.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.SitecoreItemId">
            <summary>
            The sitecore item id.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SitecoreItemId.id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemId.#ctor(Sitecore.Data.ID)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.SitecoreItemId" /> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreItemId.Value">
            <summary>Gets the value.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemId.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemId.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemId.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.SitecoreItemUniqueId">
            <summary>
            The sitecore item unique id.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SitecoreItemUniqueId.itemUri">
            <summary>
            The item uri.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemUniqueId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.SitecoreItemUniqueId" /> class.
            </summary>
            <param name="itemUri">The item URI.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemUniqueId.#ctor(Sitecore.Data.ItemUri)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.SitecoreItemUniqueId" /> class.
            </summary>
            <param name="itemUri">The item URI.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreItemUniqueId.GroupId">
            <summary>Gets the group id.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.SitecoreItemUniqueId.Value">
            <summary>Gets the value.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemUniqueId.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemUniqueId.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.SitecoreItemUniqueId.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Summary.BaseIndexSummaryClient">
            <summary>
            Represents a client responsible for retrieving an index summary. />
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Summary.IIndexSummarySource">
            <summary>
            Represents a source of index summary. 
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.SupportedProviders">
            <summary>
            The supported providers.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SupportedProviders.Lucene">
            <summary>
            Lucene provider support.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SupportedProviders.Solr">
            <summary>
            Solr provider support.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.SupportedProviders.ElasticSearch">
            <summary>
            Elastic search provider support.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.TaskSchedulerManager">
            <summary>
            Task Scheduler Manager.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.TaskSchedulerManager.LimitedConcurrencyLevelTaskSchedulerForIndexing">
            <summary>
            Gets the LimitedConcurrencyLevelTaskScheduler with predefined maximum concurrency level for indexing.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Tasks.Optimize">
            <summary>
            The optimize.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Tasks.Optimize.indexNames">
            <summary>
            The _indexes.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Tasks.Optimize.Indexes">
            <summary>Gets the indexes.</summary>
            <value>The indexes.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.Tasks.Optimize.Run">
            <summary>
            Runs the task agent.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.TimeIntervalCommitPolicy">
            <summary>
            The time interval commit policy.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.TimeIntervalCommitPolicy.interval">
            <summary>The interval</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.TimeIntervalCommitPolicy.lastCommit">
            <summary>The last commit</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.TimeIntervalCommitPolicy.count">
            <summary>The count</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.TimeIntervalCommitPolicy.index">
            <summary>The index</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.TimeIntervalCommitPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.TimeIntervalCommitPolicy" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.TimeIntervalCommitPolicy.ShouldCommit">
            <summary>Gets a value indicating whether commit should be called.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.TimeIntervalCommitPolicy.IndexModified(System.Object,Sitecore.ContentSearch.IndexOperation)">
            <summary>
            Notifies the commit policy that the index have been modified.
            </summary>
            <param name="document">The document.</param>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.TimeIntervalCommitPolicy.Committed">
            <summary>Notifies the commit policy that commit have been called.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.TimeIntervalCommitPolicy.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.TimeIntervalCommitPolicy.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the current instance.</summary>
            <param name="searchIndex">Index of the search.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.TimeIntervalCommitPolicy.Clone">
            <summary>Creates a new object that is a copy of the current instance.</summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.TypeActionHelper.FilterInstances``1(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Filters the instances.</summary>
            <typeparam name="T"></typeparam>
            <param name="instances">The instances.</param>
            <returns>Filtered instances.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.ClassFactory">
            <summary>
            
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.Constants">
            <summary>
            Search Constants
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.Constants.GlobalBoostingRulesContainerId">
            <summary>
            Gets the global rules container id.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.Constants.BoostingRuleTemplateId">
            <summary>
            Gets the boosting rule template id.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.Constants.BoostFieldId">
            <summary>
            Gets the name of the field which determines the boost
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.Constants.BoostingRulesFieldId">
            <summary>
            Gets the boosting rules field id.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.Constants.RulesFieldId">
            <summary>
            Gets the rules field id.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.Constants.SearchEditor">
            <summary>
            Gets the Search Editor Id
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.Constants.NormalizedBucketTemplateField">
            <summary>
            Gets the normalized bucket template field.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.Constants.PersonalisationField">
            <summary>
            Gets the Tag Repository folder
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.Constants.SearchCommandTemplateID">
            <summary>
            Gets the search command template id.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.Constants.BucketSearchType">
            <summary>
            Gets the Folder Id for all the types of Filters that can be done through the UI
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.Constants.Latitude">
            <summary>
            Latitude field item id
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.Constants.Longitude">
            <summary>
            Longitude field item id
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper">
            <summary>
            The content search configuration settings wrapper.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.settings">
            <summary>The settings</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.convertQueryDatesToUtc">
            <summary>
            Converts dates to UTC while querying.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.ConvertQueryDatesToUtc">
            <summary>
            Gets or sets a value indicating whether Dates would be converted to dates with kind UTC during querying.
            </summary>
            <value>
            <c>true</c> if convert dates to UTC kind during querying; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.#ctor(Sitecore.ContentSearch.Abstractions.ISettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.CalibrateSizeByDeletes">
            <summary>
            Gets a value indicating whether calibrate size by deletes.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.ContainerTemplateId">
            <summary>Gets the container template id.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.EnableSearchDebug">
            <summary>Gets a value indicating whether enable search debug.</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.MediaIndexingFolder">
            <summary>
            The folder to create temporary files for media indexing.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.ExcludeContextItemFromResult">
            <summary>Gets a value indicating whether exclude context item from result.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.ForceContextLanguageSearch">
            <summary>Gets a value indicating whether to force context language search</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.TermIndexInterval">
            <summary>
            Gets the term index interval.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.MaxMergeDocs">
            <summary>
            Gets the max merge docs.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.MaxMergeMB">
            <summary>
            Gets the max merge docs.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.MinMergeMB">
            <summary>
            Gets the max merge docs.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.UseCompoundFile">
            <summary>
            Gets a value indicating whether use compound file.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.RamBufferSize">
            <summary>Gets the lucene index writer RAM Buffer.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.MaxDocumentBufferSize">
            <summary>Gets the lucene max document buffer for document merging.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.SearchMaxResults">
            <summary>Gets the lucene max document buffer for document merging.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.IndexMergeFactor">
            <summary>Gets the lucene index merging factor.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.LuceneMaxClauseCount">
            <summary>Gets the lucene max clause count.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.NetworkDropPoint">
            <summary>Gets the network drop point.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.WaitForMerges">
            <summary>
            Gets a value indicating whether wait for merges.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.FullRebuildItemCountThreshold">
            <summary>
            Gets the full rebuild item count threshold.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.QueryServerAddress">
            <summary>Gets the query server address.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.DisableDatabaseCaches">
            <summary>
            Gets a value indicating whether disable database caches during indexing of items.
            </summary>
            <value>
            <c>true</c> if database caches is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.RemoteIndexLocation">
            <summary>Gets the remote index location.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.RemoteIndexingServer">
            <summary>Gets the remote indexing server.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.ItemBucketsEnabled">
            <summary>
            Gets a value indicating whether Item Buckets functionality is enabled.
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.ContentSearchEnabled">
            <summary>
            Gets a value indicating whether Content Search functionality is enabled.
            </summary>
            <returns>Boolean value indicating whether Content Search functionality is enabled.</returns>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.SortingResolveFieldType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.IndexUpdateBatchSize">
            <summary>
            Determines the amount of items that should be processed during the index update within a batch.
            </summary>
            <returns>Count of items that should be processed during the index update within a batch.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ContentSearchConfigurationSettingsWrapper.IsParallelComputedFieldsIndexingEnabled">
            <summary>
            Returns value indicating whether parallel indexing enabled for the computed fields.
            </summary>
            <returns>Value indicating whether parallel indexing enabled for the computed fields.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.DynamicClass">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicClass.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.DynamicExpression">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpression.Parse(System.Type,System.String,System.Object[])">
            <summary>
            Parses the specified result type.
            </summary>
            <param name="resultType">Type of the result.</param>
            <param name="expression">The expression.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpression.ParseLambda(System.Type,System.Type,System.String,System.Object[])">
            <summary>
            Parses the lambda.
            </summary>
            <param name="itType">Type of the initialize.</param>
            <param name="resultType">Type of the result.</param>
            <param name="expression">The expression.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpression.ParseLambda(System.Linq.Expressions.ParameterExpression[],System.Type,System.String,System.Object[])">
            <summary>
            Parses the lambda.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="resultType">Type of the result.</param>
            <param name="expression">The expression.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpression.ParseLambda``2(System.String,System.Object[])">
            <summary>
            Parses the lambda.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="S"></typeparam>
            <param name="expression">The expression.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpression.CreateClass(Sitecore.ContentSearch.Utilities.DynamicProperty[])">
            <summary>
            Creates the class.
            </summary>
            <param name="properties">The properties.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpression.CreateClass(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Utilities.DynamicProperty})">
            <summary>
            Creates the class.
            </summary>
            <param name="properties">The properties.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.#ctor(System.Linq.Expressions.ParameterExpression[],System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Utilities.DynamicExpressionParser"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="expression">The expression.</param>
            <param name="values">The values.</param>
            <exception cref="T:System.ArgumentNullException">expression</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ProcessParameters(System.Linq.Expressions.ParameterExpression[])">
            <summary>
            Processes the parameters.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ProcessValues(System.Object[])">
            <summary>
            Processes the values.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.AddSymbol(System.String,System.Object)">
            <summary>
            Adds the symbol.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.Parse(System.Type)">
            <summary>
            Parses the specified result type.
            </summary>
            <param name="resultType">Type of the result.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseOrdering">
            <summary>
            Parses the ordering.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseExpression">
            <summary>
            Parses the expression.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseLogicalOr">
            <summary>
            Parses the logical original.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseLogicalAnd">
            <summary>
            Parses the logical and.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseComparison">
            <summary>
            Parses the comparison.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseAdditive">
            <summary>
            Parses the additive.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseMultiplicative">
            <summary>
            Parses the multiplicative.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseUnary">
            <summary>
            Parses the unary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParsePrimary">
            <summary>
            Parses the primary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParsePrimaryStart">
            <summary>
            Parses the primary start.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseStringLiteral">
            <summary>
            Parses the string literal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseIntegerLiteral">
            <summary>
            Parses the integer literal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseRealLiteral">
            <summary>
            Parses the real literal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.CreateLiteral(System.Object,System.String)">
            <summary>
            Creates the literal.
            </summary>
            <param name="value">The value.</param>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseParenExpression">
            <summary>
            Parses the paren expression.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseIdentifier">
            <summary>
            Parses the identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseIt">
            <summary>
            Parses the Current Instance (this)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseIif">
            <summary>
            Parses the iif.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GenerateConditional(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Int32)">
            <summary>
            Generates the conditional.
            </summary>
            <param name="test">The test.</param>
            <param name="expr1">The expr1.</param>
            <param name="expr2">The expr2.</param>
            <param name="errorPos">The error position.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseNew">
            <summary>
            Parses the new.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseLambdaInvocation(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Parses the lambda invocation.
            </summary>
            <param name="lambda">The lambda.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseTypeAccess(System.Type)">
            <summary>
            Parses the type access.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GenerateConversion(System.Linq.Expressions.Expression,System.Type,System.Int32)">
            <summary>
            Generates the conversion.
            </summary>
            <param name="expr">The expr.</param>
            <param name="type">The type.</param>
            <param name="errorPos">The error position.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseMemberAccess(System.Type,System.Linq.Expressions.Expression)">
            <summary>
            Parses the member access.
            </summary>
            <param name="type">The type.</param>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseAggregate(System.Linq.Expressions.Expression,System.Type,System.String,System.Int32)">
            <summary>
            Parses the aggregate.
            </summary>
            <param name="instance">The instance.</param>
            <param name="elementType">Type of the element.</param>
            <param name="methodName">Name of the method.</param>
            <param name="errorPos">The error position.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseOuterIt">
            <summary>
            Parses the outer initialize.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseArgumentList">
            <summary>
            Parses the argument list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseArguments">
            <summary>
            Parses the arguments.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseElementAccess(System.Linq.Expressions.Expression)">
            <summary>
            Parses the element access.
            </summary>
            <param name="expr">The expr.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.IsPredefinedType(System.Type)">
            <summary>
            Determines whether [is predefined type] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.IsNullableType(System.Type)">
            <summary>
            Determines whether [is nullable type] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GetNonNullableType(System.Type)">
            <summary>
            Gets the type of the non nullable.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GetTypeName(System.Type)">
            <summary>
            Gets the name of the type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.IsNumericType(System.Type)">
            <summary>
            Determines whether [is numeric type] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.IsSignedIntegralType(System.Type)">
            <summary>
            Determines whether [is signed integral type] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.IsUnsignedIntegralType(System.Type)">
            <summary>
            Determines whether [is unsigned integral type] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GetNumericTypeKind(System.Type)">
            <summary>
            Gets the kind of the numeric type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.IsEnumType(System.Type)">
            <summary>
            Determines whether [is enum type] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.CheckAndPromoteOperand(System.Type,System.String,System.Linq.Expressions.Expression@,System.Int32)">
            <summary>
            Checks the and promote operand.
            </summary>
            <param name="signatures">The signatures.</param>
            <param name="opName">Name of the property.</param>
            <param name="expr">The expr.</param>
            <param name="errorPos">The error position.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.CheckAndPromoteOperands(System.Type,System.String,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@,System.Int32)">
            <summary>
            Checks the and promote operands.
            </summary>
            <param name="signatures">The signatures.</param>
            <param name="opName">Name of the property.</param>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="errorPos">The error position.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.IncompatibleOperandsError(System.String,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Int32)">
            <summary>
            Incompatibles the operands error.
            </summary>
            <param name="opName">Name of the property.</param>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="pos">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.FindPropertyOrField(System.Type,System.String,System.Boolean)">
            <summary>
            Finds the property original field.
            </summary>
            <param name="type">The type.</param>
            <param name="memberName">Name of the member.</param>
            <param name="staticAccess">if set to <c>true</c> [static access].</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.FindMethod(System.Type,System.String,System.Boolean,System.Linq.Expressions.Expression[],System.Reflection.MethodBase@)">
            <summary>
            Finds the method.
            </summary>
            <param name="type">The type.</param>
            <param name="methodName">Name of the method.</param>
            <param name="staticAccess">if set to <c>true</c> [static access].</param>
            <param name="args">The arguments.</param>
            <param name="method">The method.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.FindIndexer(System.Type,System.Linq.Expressions.Expression[],System.Reflection.MethodBase@)">
            <summary>
            Finds the indexer.
            </summary>
            <param name="type">The type.</param>
            <param name="args">The arguments.</param>
            <param name="method">The method.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.SelfAndBaseTypes(System.Type)">
            <summary>
            Selfs the and base types.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.SelfAndBaseClasses(System.Type)">
            <summary>
            Selfs the and base classes.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.AddInterface(System.Collections.Generic.List{System.Type},System.Type)">
            <summary>
            Adds the interface.
            </summary>
            <param name="types">The types.</param>
            <param name="type">The type.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.MethodData">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.FindBestMethod(System.Collections.Generic.IEnumerable{System.Reflection.MethodBase},System.Linq.Expressions.Expression[],System.Reflection.MethodBase@)">
            <summary>
            Finds the best method.
            </summary>
            <param name="methods">The methods.</param>
            <param name="args">The arguments.</param>
            <param name="method">The method.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.IsApplicable(Sitecore.ContentSearch.Utilities.DynamicExpressionParser.MethodData,System.Linq.Expressions.Expression[])">
            <summary>
            Determines whether the specified method is applicable.
            </summary>
            <param name="method">The method.</param>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.PromoteExpression(System.Linq.Expressions.Expression,System.Type,System.Boolean)">
            <summary>
            Promotes the expression.
            </summary>
            <param name="expr">The expr.</param>
            <param name="type">The type.</param>
            <param name="exact">if set to <c>true</c> [exact].</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseNumber(System.String,System.Type)">
            <summary>
            Parses the number.
            </summary>
            <param name="text">The text.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseEnum(System.String,System.Type)">
            <summary>
            Parses the enum.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.IsCompatibleWith(System.Type,System.Type)">
            <summary>
            Determines whether [is compatible with] [the specified source].
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.IsBetterThan(System.Linq.Expressions.Expression[],Sitecore.ContentSearch.Utilities.DynamicExpressionParser.MethodData,Sitecore.ContentSearch.Utilities.DynamicExpressionParser.MethodData)">
            <summary>
            Determines whether [is better than] [the specified arguments].
            </summary>
            <param name="args">The arguments.</param>
            <param name="m1">The m1.</param>
            <param name="m2">The m2.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.CompareConversions(System.Type,System.Type,System.Type)">
            <summary>
            Compares the conversions.
            </summary>
            <param name="s">The arguments.</param>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GenerateEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates the equal.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GenerateNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates the not equal.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GenerateGreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates the greater than.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GenerateGreaterThanEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates the greater than equal.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GenerateLessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates the less than.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GenerateLessThanEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates the less than equal.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GenerateAdd(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates the add.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GenerateSubtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates the subtract.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GenerateStringConcat(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates the string concat.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GetStaticMethod(System.String,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Gets the static method.
            </summary>
            <param name="methodName">Name of the method.</param>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GenerateStaticMethodCall(System.String,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates the static method call.
            </summary>
            <param name="methodName">Name of the method.</param>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.SetTextPos(System.Int32)">
            <summary>
            Sets the text position.
            </summary>
            <param name="pos">The position.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.NextChar">
            <summary>
            Nexts the character.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.NextToken">
            <summary>
            Nexts the token.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.TokenIdentifierIs(System.String)">
            <summary>
            Tokens the identifier is.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.GetIdentifier">
            <summary>
            Gets the identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ValidateDigit">
            <summary>
            Validates the digit.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ValidateToken(Sitecore.ContentSearch.Utilities.DynamicExpressionParser.TokenId,System.String)">
            <summary>
            Validates the token.
            </summary>
            <param name="t">The attribute.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ValidateToken(Sitecore.ContentSearch.Utilities.DynamicExpressionParser.TokenId)">
            <summary>
            Validates the token.
            </summary>
            <param name="t">The attribute.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseError(System.String,System.Object[])">
            <summary>
            Parses the error.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.ParseError(System.Int32,System.String,System.Object[])">
            <summary>
            Parses the error.
            </summary>
            <param name="pos">The position.</param>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicExpressionParser.CreateKeywords">
            <summary>
            Creates the keywords.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.DynamicQueryable">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.Where``1(System.Linq.IQueryable{``0},System.String,System.Object[])">
            <summary>
            Wheres the specified source.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="predicate">The predicate.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.Where(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Wheres the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="predicate">The predicate.</param>
            <param name="values">The values.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            source
            or
            predicate
            </exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.Select(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Selects the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="selector">The selector.</param>
            <param name="values">The values.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            source
            or
            selector
            </exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.DefaultIfEmpty(System.Linq.IQueryable)">
            <summary>
            Defaults the difference empty.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.SelectMany(System.Linq.IQueryable,System.String,System.String,System.Object[])">
            <summary>
            Selects the many.
            </summary>
            <param name="source">The source.</param>
            <param name="selector">The selector.</param>
            <param name="resultsSelector">The results selector.</param>
            <param name="values">The values.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            source
            or
            selector
            </exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.GroupJoin(System.Linq.IQueryable,System.Collections.IEnumerable,System.String,System.String,System.String,System.Object[])">
            <summary>
            Groups the join.
            </summary>
            <param name="outer">The outer.</param>
            <param name="inner">The inner.</param>
            <param name="outerKeySelector">The outer key selector.</param>
            <param name="innerKeySelector">The inner key selector.</param>
            <param name="resultSelector">The result selector.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.OrderBy``1(System.Linq.IQueryable{``0},System.String,System.Object[])">
            <summary>
            Orders the by.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="ordering">The ordering.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.OrderBy(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Orders the by.
            </summary>
            <param name="source">The source.</param>
            <param name="ordering">The ordering.</param>
            <param name="values">The values.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            source
            or
            ordering
            </exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.Take(System.Linq.IQueryable,System.Int32)">
            <summary>
            Takes the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="count">The count.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.Skip(System.Linq.IQueryable,System.Int32)">
            <summary>
            Skips the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="count">The count.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.Join(System.Linq.IQueryable,System.String,System.Linq.IQueryable,System.String,System.String,System.String,System.String,System.Object[])">
            <summary>
            Joins the specified source1.
            </summary>
            <param name="source1">The source1.</param>
            <param name="alias1">The alias1.</param>
            <param name="source2">The source2.</param>
            <param name="alias2">The alias2.</param>
            <param name="key1">The key1.</param>
            <param name="key2">The key2.</param>
            <param name="selector">The selector.</param>
            <param name="args">The arguments.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            source1
            or
            alias1
            or
            source1
            or
            alias2
            or
            key1
            or
            key2
            or
            selector
            </exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.Join(System.Linq.IQueryable,System.Collections.IEnumerable,System.String,System.String,System.String,System.Object[])">
            <summary>
            Joins the specified outer.
            </summary>
            <param name="outer">The outer.</param>
            <param name="inner">The inner.</param>
            <param name="outerSelector">The outer selector.</param>
            <param name="innerSelector">The inner selector.</param>
            <param name="resultsSelector">The results selector.</param>
            <param name="values">The values.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            inner
            or
            outerSelector
            or
            innerSelector
            or
            resultsSelctor
            </exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.Join``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String,System.Object[])">
            <summary>
            Joins the specified outer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="outer">The outer.</param>
            <param name="inner">The inner.</param>
            <param name="outerSelector">The outer selector.</param>
            <param name="innerSelector">The inner selector.</param>
            <param name="resultsSelector">The results selector.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.Join``2(System.Linq.IQueryable{``0},System.String,System.Linq.IQueryable{``1},System.String,System.String,System.String,System.String,System.Object[])">
            <summary>
            Joins the specified source1.
            </summary>
            <typeparam name="TOuter">The type of the outer.</typeparam>
            <typeparam name="TInner">The type of the inner.</typeparam>
            <param name="source1">The source1.</param>
            <param name="alias1">The alias1.</param>
            <param name="source2">The source2.</param>
            <param name="alias2">The alias2.</param>
            <param name="key1">The key1.</param>
            <param name="key2">The key2.</param>
            <param name="selector">The selector.</param>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.Join``2(System.Linq.IQueryable{``0},System.String,System.Linq.IQueryable{``1},System.String,System.String,System.String,System.String)">
            <summary>
            Joins the specified source1.
            </summary>
            <typeparam name="TOuter">The type of the outer.</typeparam>
            <typeparam name="TInner">The type of the inner.</typeparam>
            <param name="source1">The source1.</param>
            <param name="alias1">The alias1.</param>
            <param name="source2">The source2.</param>
            <param name="alias2">The alias2.</param>
            <param name="key1">The key1.</param>
            <param name="key2">The key2.</param>
            <param name="selector">The selector.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.SelfJoin(System.Linq.IQueryable,System.String,System.Linq.IQueryable,System.String,System.String,System.String,System.Object[])">
            <summary>
            Selfs the join.
            </summary>
            <param name="source1">The source1.</param>
            <param name="alias1">The alias1.</param>
            <param name="source2">The source2.</param>
            <param name="alias2">The alias2.</param>
            <param name="key1">The key1.</param>
            <param name="key2">The key2.</param>
            <param name="args">The arguments.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            source1
            or
            alias1
            or
            source1
            or
            alias2
            or
            key1
            or
            key2
            </exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.SelfJoin(System.Linq.IQueryable,System.Collections.IEnumerable,System.String,System.String,System.String,System.Object[])">
            <summary>
            Selfs the join.
            </summary>
            <param name="outer">The outer.</param>
            <param name="inner">The inner.</param>
            <param name="outerSelector">The outer selector.</param>
            <param name="innerSelector">The inner selector.</param>
            <param name="resultsSelector">The results selector.</param>
            <param name="values">The values.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            inner
            or
            outerSelector
            or
            innerSelector
            or
            resultsSelctor
            </exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.SelfJoin``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String,System.Object[])">
            <summary>
            Selfs the join.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="outer">The outer.</param>
            <param name="inner">The inner.</param>
            <param name="outerSelector">The outer selector.</param>
            <param name="innerSelector">The inner selector.</param>
            <param name="resultsSelector">The results selector.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.SelfJoin``2(System.Linq.IQueryable{``0},System.String,System.Linq.IQueryable{``1},System.String,System.String,System.String,System.Object[])">
            <summary>
            Selfs the join.
            </summary>
            <typeparam name="TOuter">The type of the outer.</typeparam>
            <typeparam name="TInner">The type of the inner.</typeparam>
            <param name="source1">The source1.</param>
            <param name="alias1">The alias1.</param>
            <param name="source2">The source2.</param>
            <param name="alias2">The alias2.</param>
            <param name="key1">The key1.</param>
            <param name="key2">The key2.</param>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.SelfJoin``2(System.Linq.IQueryable{``0},System.String,System.Linq.IQueryable{``1},System.String,System.String,System.String)">
            <summary>
            Selfs the join.
            </summary>
            <typeparam name="TOuter">The type of the outer.</typeparam>
            <typeparam name="TInner">The type of the inner.</typeparam>
            <param name="source1">The source1.</param>
            <param name="alias1">The alias1.</param>
            <param name="source2">The source2.</param>
            <param name="alias2">The alias2.</param>
            <param name="key1">The key1.</param>
            <param name="key2">The key2.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.FixLambdaReturnTypes(System.Linq.Expressions.LambdaExpression@,System.Linq.Expressions.LambdaExpression@)">
            <summary>
            Fixes the lambda return types.
            </summary>
            <param name="lambda1">The lambda1.</param>
            <param name="lambda2">The lambda2.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.GroupBy(System.Linq.IQueryable,System.String,System.String,System.Object[])">
            <summary>
            Groups the by.
            </summary>
            <param name="source">The source.</param>
            <param name="keySelector">The key selector.</param>
            <param name="elementSelector">The element selector.</param>
            <param name="values">The values.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            source
            or
            keySelector
            or
            elementSelector
            </exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.Any(System.Linq.IQueryable)">
            <summary>
            Anies the specified source.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicQueryable.Count(System.Linq.IQueryable)">
            <summary>
            Counts the specified source.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.DynamicProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.DynamicProperty.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Utilities.DynamicProperty"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <exception cref="T:System.ArgumentNullException">
            name
            or
            type
            </exception>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.DynamicProperty.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.DynamicProperty.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.ParseException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParseException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Utilities.ParseException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="position">The position.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.ParseException.Position">
            <summary>
            Gets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParseException.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
              </PermissionSet>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.EnumerableExtensions">
            <summary>The enumerable extensions.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>The for each.</summary>
            <param name="collection">The collection.</param>
            <param name="action">The action.</param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.EnumerableExtensions.CartesianProduct``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            The cartesian product.
            </summary>
            <param name="sequences">
            The sequences.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.EnumerableExtensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            The to hash set.
            </summary>
            <param name="source">
            The source.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            The <see cref="T:System.Collections.Generic.HashSet`1"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.EnumerableExtensions.RemoveWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
            <summary>The remove where.</summary>
            <param name="source">The source.</param>
            <param name="predicate">The predicate.</param>
            <typeparam name="T"></typeparam>
            <returns>The System.Collections.Generic.IEnumerable`1[T -&gt; T].</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.FieldFormat">
            <summary>
            The field format.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.FieldFormat.GetFieldFormat(Sitecore.ContentSearch.ISearchIndex,System.String,System.Type)">
            <summary>Gets the field format.</summary>
            <param name="searchIndex">Index of the search.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="type">The type.</param>
            <returns>The formatting string</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings">
            <summary>
            The ContentSearchConfigurationSettings interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.CalibrateSizeByDeletes">
            <summary>
            Gets a value indicating whether calibrate size by deletes.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.ContainerTemplateId">
            <summary>Gets the container template id.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.EnableSearchDebug">
            <summary>Gets a value indicating whether enable search debug.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.ExcludeContextItemFromResult">
            <summary>Gets a value indicating whether exclude context item from result.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.ForceContextLanguageSearch">
            <summary>Gets a value indicating whether to force context language search</summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.ConvertQueryDatesToUtc">
            <summary>
            Gets or sets a value indicating whether Dates would be conconverted to dates with kind UTC during querying.
            </summary>
            <value><c>true</c> if [convert dates to UTC]; otherwise, <c>false</c>. </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.TermIndexInterval">
            <summary>
            Gets the term index interval.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.MaxMergeDocs">
            <summary>
            Gets the max merge docs.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.MaxMergeMB">
            <summary>
            Gets the max merge docs.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.MinMergeMB">
            <summary>
            Gets the max merge docs.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.UseCompoundFile">
            <summary>
            Gets a value indicating whether use compound file.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.RamBufferSize">
            <summary>Gets the lucene index writer RAM Buffer.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.MaxDocumentBufferSize">
            <summary>Gets the lucene max document buffer for document merging.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.SearchMaxResults">
            <summary>Gets the lucene max document buffer for document merging.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.IndexMergeFactor">
            <summary>Gets the lucene index merging factor.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.LuceneMaxClauseCount">
            <summary>Gets the lucene max clause count.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.NetworkDropPoint">
            <summary>Gets the network drop point.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.WaitForMerges">
            <summary>
            Gets a value indicating whether wait for merges.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.FullRebuildItemCountThreshold">
            <summary>
            Gets the full rebuild item count threshold.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.FieldReaderCache">
            <summary>
            Fields the reader cache.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.VerboseLogging">
            <summary>
            Verboses the logging.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.ForceOptimizeThreshold">
            <summary>
            Forces the optimize threshold.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.IsParallelIndexingEnabled">
            <summary>
            Determines whether [is parallel indexing enabled].
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.ParallelIndexingMaxThreadLimit">
            <summary>Maximum Number parallel indexing threads.</summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.IndexingBatchModeEnabled">
            <summary>
            Indexings the batch mode enabled.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.IndexingBatchSize">
            <summary>
            Indexings the size of the batch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.ConcurrentMergeSchedulerThreads">
            <summary>
            Concurrents the merge scheduler threads.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.QueryServerAddress">
            <summary>
            Queries the server address.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.DisableDatabaseCaches">
            <summary>
            Disables the database caches.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.RemoteIndexLocation">
            <summary>
            Remotes the index location.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.RemoteIndexingServer">
            <summary>
            Remotes the indexing server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.StopOnCrawlError">
            <summary>
            Stops the configuration crawl error.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.StopOnCrawlFieldError">
            <summary>
            Stops the configuration crawl field error.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.StopOnPropertyMappingError">
            <summary>
            Stops the configuration property mapping error.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.ItemBucketsEnabled">
            <summary>
            Gets a value indicating whether Item Buckets functionality is enabled.
            </summary>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.ContentSearchEnabled">
            <summary>
            Gets a value indicating whether Content Search functionality is enabled.
            </summary>
            <returns>Boolean value indicating whether Content Search functionality is enabled.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.IndexUpdateBatchSize">
            <summary>
            Determines the amount of items that should be processed during the index update operation within a batch.
            </summary>
            <returns>The amount of items that should be processed during the index update operation within a batch.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettings.IsParallelComputedFieldsIndexingEnabled">
            <summary>
            Returns value indicating whether parallel indexing enabled for the computed fields.
            </summary>
            <returns>Value indicating whether parallel indexing enabled for the computed fields.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.IContentSearchConfigurationSettingsEx">
            <summary>
            The interface has been added to get rid of breaking changes, need to be merged to IContentSearchConfigurationSettings at the next major version.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.IdHelper">
            <summary>The id helper.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IdHelper.ContainsMultiGuids(System.String)">
            <summary>The contains multi guids.</summary>
            <param name="value">The value.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IdHelper.NormalizeGuid(System.Guid,System.Boolean)">
            <summary>The normalize guid.</summary>
            <param name="guid">The guid.</param>
            <param name="lowercase">Defines if lowercasing is necessary</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IdHelper.NormalizeGuid(System.String,System.Boolean)">
            <summary>The normalize guid.</summary>
            <param name="id">The id.</param>
            <param name="lowercase">Defines if lowercasing is necessary</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IdHelper.NormalizeGuid(Sitecore.Data.ID)">
            <summary>The normalize guid.</summary>
            <param name="id">The id.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IdHelper.ParseId(System.String)">
            <summary>The parse id.</summary>
            <param name="value">The value.</param>
            <returns>The System.String[].</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IdHelper.ProcessGUIDs(System.String,System.Boolean)">
            <summary>
            The process guids.
            </summary>
            <param name="value">
            The value.
            </param>
            <param name="lowercase">
            The lowercase.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.IndexableHelper">
            <summary>
            Contains method extensions and helpers related to IIndexable and its implementations.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IndexableHelper.Covers(Sitecore.ContentSearch.ISearchIndex,Sitecore.ContentSearch.SitecoreIndexableItem)">
            <summary>
            Checks whether the index covers the indexable which represents a Sitecore item.
            </summary>
            <param name="index"></param>
            <param name="itemIndexable"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IndexableHelper.Covers(Sitecore.ContentSearch.SitecoreItemCrawler,Sitecore.ContentSearch.SitecoreIndexableItem)">
            <summary>
            Checks whether the crawler covers the indexable which represents a Sitecore item.
            </summary>
            <param name="crawler"></param>
            <param name="itemIndexable"></param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.IndexHealthHelper">
            <summary>
            The index health helper.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IndexHealthHelper.GetIndexRebuildTime(System.String)">
            <summary>
            Gets the previous rebuild time to help you estimate
            </summary>
            <param name="indexName">
            The index name.
            </param>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IndexHealthHelper.GetRemainingDiskSize(System.String)">
            <summary>
            Get the remaining disk size by drive letter
            </summary>
            <param name="driveCharacter">
            The drive character.
            </param>
            <returns>
            The available space<see cref="T:System.Int64"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IndexHealthHelper.GetIndexNumberOfDocuments(System.String)">
            <summary>
            The number of documents in the index
            </summary>
            <param name="indexName">
            The index name.
            </param>
            <returns>
            The <see cref="T:System.Int64"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IndexHealthHelper.IsOptimised(System.String)">
            <summary>
            Whether the index is optimized for read performance or not.
            </summary>
            <param name="indexName">
            The index name.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IndexHealthHelper.HasDeletions(System.String)">
            <summary>
            The has deletions.
            </summary>
            <param name="indexName">
            The index name.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IndexHealthHelper.IsHealthy(System.String)">
            <summary>
            The index has no deletes, no corruption and is optimized
            </summary>
            <param name="indexName">
            The index name.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IndexHealthHelper.LastModified(System.String)">
            <summary>
            The last modified date of the index.
            </summary>
            <param name="indexName">
            The index name.
            </param>
            <returns>
            The <see cref="T:System.DateTime"/> in UTC.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IndexHealthHelper.NumberOfFields(System.String)">
            <summary>
            The number of fields.
            </summary>
            <param name="indexName">
            The index name.
            </param>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.IndexHealthHelper.NumberOfTerms(System.String)">
            <summary>
            The number of terms.
            </summary>
            <param name="indexName">
            The index name.
            </param>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.LanguageFallbackDataService">
            <summary>
            The language fallback data service.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.LanguageFallbackDataService.GetDescendantsByTemplateWithFallback(Sitecore.Data.Items.Item,System.String)">
            <summary>
            The get descendants by template. This method must be used carefully as it is quite expensive on larger trees
            </summary>
            <param name="rootItem">
            The root item.
            </param>
            <param name="templateId">
            The template id.
            </param>
            <returns>
            The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.LanguageFallbackDataService.GetDescendantsByTemplateWithFallback(Sitecore.Data.Items.Item,Sitecore.Data.TemplateID)">
            <summary>
            The get descendants by template. This method must be used carefully as it is quite expensive on larger trees
            </summary>
            <param name="rootItem">
            The root item.
            </param>
            <param name="templateId">
            The template id.
            </param>
            <returns>
            The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.LanguageFallbackDataService.GetChildrenByTemplateWithFallback(Sitecore.Data.Items.Item,System.String,System.Boolean,System.Boolean)">
            <summary>
            The get children by template.
            </summary>
            <param name="rootItem">
            The root item.
            </param>
            <param name="templateId">
            The template id.
            </param>
            <param name="skipSorting">
            The skip Sorting.
            </param>
            <param name="ignoreSecurity">
            The ignore Security.
            </param>
            <returns>
            The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.LanguageFallbackDataService.GetChildrenByTemplateWithFallback(Sitecore.Data.Items.Item,Sitecore.Data.TemplateID,System.Boolean,System.Boolean)">
            <summary>
            The get The get children by template.
            </summary>
            <param name="rootItem">
            The root item.
            </param>
            <param name="templateId">
            The template id.
            </param>
            <param name="skipSorting">
            The skip Sorting.
            </param>
            <param name="ignoreSecurity">
            The ignore Security.
            </param>
            <returns>
            The <see cref="!:IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.LanguageFallbackDataService.EnsureFallbackVersion(Sitecore.Data.Items.Item)">
            <summary>
            The check for version presence.
            </summary>
            <param name="rootItem">
            The root item.
            </param>
            <returns>
            The <see cref="T:Sitecore.Data.Items.Item"/>.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.LinqHelper">
            <summary>
            The linq helper.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.LinqHelper.BuilderHelper">
            <summary>
            Gets the query builder helper.
            </summary>
            <value>
            The query builder helper.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.LinqHelper.CreateQuery(Sitecore.ContentSearch.IProviderSearchContext,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Utilities.SearchStringModel},Sitecore.Data.Items.Item,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>
            Creates the query.
            </summary>
            <param name="context">The context.</param>
            <param name="searchStringModel">The search string model.</param>
            <param name="startLocationItem">The start location item.</param>
            <param name="additionalContexts">The additional contexts.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.LinqHelper.CreateQuery``1(Sitecore.ContentSearch.IProviderSearchContext,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>
            The create query.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="searchStringModel">
            The search string model.
            </param>
            <returns>
            The <see cref="T:System.Linq.IQueryable"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.LinqHelper.CreateQuery``1(Sitecore.ContentSearch.IProviderSearchContext,System.String)">
            <summary>
            The create query.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="searchString">
            The search string.
            </param>
            <returns>
            The <see cref="T:System.Linq.IQueryable"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.LinqHelper.CreateQuery``1(Sitecore.ContentSearch.IProviderSearchContext,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Utilities.SearchStringModel},Sitecore.Data.Items.Item,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>
            Takes a SearchStringModel and converts it to the proper LinqStatement
            </summary>
            <param name="context">The context.</param>
            <param name="searchStringModel">The search string model.</param>
            <param name="startLocationItem">The start location item.</param>
            <param name="additionalContexts">The additional contexts</param>
            <returns>The <see cref="T:System.Linq.IQueryable" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.LinqHelper.DistinctSearchComparer">
            <summary>
            The distinct search comparer.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.LinqHelper.DistinctSearchComparer.Equals(Sitecore.ContentSearch.Utilities.SearchStringModel,Sitecore.ContentSearch.Utilities.SearchStringModel)">
            <summary>
            The equals.
            </summary>
            <param name="x">
            The x.
            </param>
            <param name="y">
            The y.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.LinqHelper.DistinctSearchComparer.GetHashCode(Sitecore.ContentSearch.Utilities.SearchStringModel)">
            <summary>
            The get hash code.
            </summary>
            <param name="obj">
            The obj.
            </param>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.ObjectExtensions">
            <summary>
            The object extensions.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ObjectExtensions.MergeConfiguration``1(``0,``0)">
            <summary>
            The merge configuration.
            </summary>
            <param name="primary">
            The primary.
            </param>
            <param name="default">
            The default.
            </param>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ObjectExtensions.GetPropertyName``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            The get property name.
            </summary>
            <param name="type">
            The type.
            </param>
            <param name="propertyRefExpr">
            The property ref expr.
            </param>
            <typeparam name="TObject">
            </typeparam>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ObjectExtensions.GetName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            The get name.
            </summary>
            <param name="propertyRefExpr">
            The property ref expr.
            </param>
            <typeparam name="TObject">
            </typeparam>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ObjectExtensions.GetPropertyNameCore(System.Linq.Expressions.Expression)">
            <summary>
            The get property name core.
            </summary>
            <param name="propertyRefExpr">
            The property ref expr.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            </exception>
            <exception cref="T:System.ArgumentException">
            </exception>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy">
            <summary>
            Proxy class for .Net Parallel which ensure the security disabler being enforced in each of the thread running under parallel foreach.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel.
            </summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation with 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation with 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="parallelOptions">An object that configures the behavior of this operation.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <typeparam name="TLocal">The type of the thread-local data.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="localInit">The function delegate that returns the initial state of the local data for each task.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <param name="localFinally">The delegate that performs a final action on the local state of each task.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated..
            </summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <typeparam name="TLocal">The type of the thread-local data.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="parallelOptions">An object that configures the behavior of this operation.</param>
            <param name="localInit">The function delegate that returns the initial state of the local data for each task.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <param name="localFinally">The delegate that performs a final action on the local state of each task.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <typeparam name="TLocal">The type of the thread-local data.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="localInit">The function delegate that returns the initial state of the local data for each task.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <param name="localFinally">The delegate that performs a final action on the local state of each task.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation with thread-local data and 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <typeparam name="TLocal">The type of the thread-local data.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="parallelOptions">An object that configures the behavior of this operation.</param>
            <param name="localInit">The function delegate that returns the initial state of the local data for each task.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <param name="localFinally">The delegate that performs a final action on the local state of each task.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel.
            </summary>
            <typeparam name="TSource">The type of the elements in <paramref name="source" />.</typeparam>
            <param name="source">The partitioner that contains the original data source.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the elements in <paramref name="source" />.</typeparam>
            <param name="source">The partitioner that contains the original data source.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the elements in <paramref name="source" />.</typeparam>
            <param name="source">The orderable partitioner that contains the original data source.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation with thread-local data on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the elements in <paramref name="source" />.</typeparam>
            <typeparam name="TLocal">The type of the thread-local data.</typeparam>
            <param name="source">The partitioner that contains the original data source.</param>
            <param name="localInit">The function delegate that returns the initial state of the local data for each task.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <param name="localFinally">The delegate that performs a final action on the local state of each task.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation with thread-local data on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the elements in <paramref name="source" />.</typeparam>
            <typeparam name="TLocal">The type of the thread-local data.</typeparam>
            <param name="source">The orderable partitioner that contains the original data source.</param>
            <param name="localInit">The function delegate that returns the initial state of the local data for each task.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <param name="localFinally">The delegate that performs a final action on the local state of each task.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel and loop options can be configured.
            </summary>
            <typeparam name="TSource">The type of the elements in <paramref name="source" />.</typeparam>
            <param name="source">The partitioner that contains the original data source.</param>
            <param name="parallelOptions">An object that configures the behavior of this operation.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the elements in <paramref name="source" />.</typeparam>
            <param name="source">The partitioner that contains the original data source.</param>
            <param name="parallelOptions">An object that configures the behavior of this operation.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <returns>
            A  structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the elements in <paramref name="source" />.</typeparam>
            <param name="source">The orderable partitioner that contains the original data source.</param>
            <param name="parallelOptions">An object that configures the behavior of this operation.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation  with thread-local data on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the elements in <paramref name="source" />.</typeparam>
            <typeparam name="TLocal">The type of the thread-local data.</typeparam>
            <param name="source">The partitioner that contains the original data source.</param>
            <param name="parallelOptions">An object that configures the behavior of this operation.</param>
            <param name="localInit">The function delegate that returns the initial state of the local data for each task.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <param name="localFinally">The delegate that performs a final action on the local state of each task.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation with 64-bit indexes and  with thread-local data on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel , loop options can be configured, and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the elements in <paramref name="source" />.</typeparam>
            <typeparam name="TLocal">The type of the thread-local data.</typeparam>
            <param name="source">The orderable partitioner that contains the original data source.</param>
            <param name="parallelOptions">An object that configures the behavior of this operation.</param>
            <param name="localInit">The function delegate that returns the initial state of the local data for each task.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <param name="localFinally">The delegate that performs a final action on the local state of each task.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.
            </summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="parallelOptions">An object that configures the behavior of this operation.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.ParallelDisabledSecurityProxy.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
            <summary>
            Executes a foreach (For Each in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel and loop options can be configured.
            </summary>
            <typeparam name="TSource">The type of the data in the source.</typeparam>
            <param name="source">An enumerable data source.</param>
            <param name="parallelOptions">An object that configures the behavior of this operation.</param>
            <param name="body">The delegate that is invoked once per iteration.</param>
            <returns>
            A structure that contains information about which portion of the loop completed.
            </returns>
        </member>
        <member name="F:Sitecore.ContentSearch.Utilities.QueryBuilder.DateCompareIdentifier">
            <summary>
            The date compare identifier
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.CreateQuery``1(Sitecore.ContentSearch.IProviderSearchContext,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>
            The create query.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="searchStringModel">
            The search string model.
            </param>
            <returns>
            The <see cref="T:System.Linq.IQueryable"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.CreateQuery``1(Sitecore.ContentSearch.IProviderSearchContext,System.String)">
            <summary>
            The create query.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="searchString">
            The search string.
            </param>
            <returns>
            The <see cref="T:System.Linq.IQueryable"/>.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.CreateQuery``1(Sitecore.ContentSearch.IProviderSearchContext,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Utilities.SearchStringModel},Sitecore.Data.Items.Item,System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Linq.Common.IExecutionContext})">
            <summary>
            Takes a SearchStringModel and converts it to the proper LinqStatement
            </summary>
            <param name="context">The context.</param>
            <param name="searchStringModel">The search string model.</param>
            <param name="startLocationItem">The start location item.</param>
            <param name="additionalContexts">The additional contexts</param>
            <returns>The <see cref="T:System.Linq.IQueryable" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.ApplySorting``1(Sitecore.ContentSearch.IProviderSearchContext,System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>Applies the sorting.</summary>
            <param name="context">The provider search context.</param>
            <param name="searchResultItems">The search result items.</param>
            <param name="searchModels">The search models.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.BuildNotPredicate``1(Sitecore.ContentSearch.IProviderSearchContext,System.Linq.IQueryable{``0},System.Collections.Generic.List{Sitecore.Data.Items.Item},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{System.String,Sitecore.ContentSearch.Utilities.SearchStringModel}})">
            <summary>
            Builds the not predicate.
            </summary>
            <param name="context">The provider search context.</param>
            <param name="q">The q.</param>
            <param name="aliasSearches">The alias searches.</param>
            <param name="groupedSearchModel">The grouped search model.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.IsDateTime(System.String)">
            <summary>
            Determines whether [is date time] [the specified field value].
            </summary>
            <param name="fieldValue">The field value.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.ExtractDateValue(System.String)">
            <summary>
            Determines whether [is date time] [the specified field value].
            </summary>
            <param name="fieldValue">The field value.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.BuildMustPredicate``1(Sitecore.ContentSearch.IProviderSearchContext,System.Linq.IQueryable{``0},System.Collections.Generic.List{Sitecore.Data.Items.Item},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{System.String,Sitecore.ContentSearch.Utilities.SearchStringModel}})">
            <summary>
            Builds the must predicate.
            </summary>
            <param name="context">The provider search context.</param>
            <param name="q">The q.</param>
            <param name="aliasSearches">The alias searches.</param>
            <param name="groupedSearchModel">The grouped search model.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.BuildShouldPredicate``1(Sitecore.ContentSearch.IProviderSearchContext,System.Linq.IQueryable{``0},System.Collections.Generic.List{Sitecore.Data.Items.Item},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{System.String,Sitecore.ContentSearch.Utilities.SearchStringModel}})">
            <summary>
            Builds the should predicate.
            </summary>
            <param name="context">The provider search context.</param>
            <param name="q">The q.</param>
            <param name="aliasSearches">The alias searches.</param>
            <param name="groupedSearchModel">The grouped search model.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.ConvertIndexFieldValue(Sitecore.ContentSearch.IProviderSearchContext,System.String,System.String,System.Object)">
            <summary>
            Converts the field value to mapped type. If field type is not configured default value will be returned.
            </summary>
            <param name="context">The context.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The field value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.ResolveFieldTypeByName(System.String,Sitecore.ContentSearch.IProviderSearchContext)">
            <summary>
            Resolves field type by field name.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="context">Search context.</param>
            <returns>Field type.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.RetriveParsedLanguages(System.Collections.Generic.HashSet{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>
            Retrives the parsed languages from specified search string model collection.
            </summary>
            <param name="searchStringModels">The search string models.</param>
            <returns>List of parsed languages specified in the model collection.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.RemoveParsedLanguagesFromModel(System.Collections.Generic.HashSet{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>
            Removes the parsed languages from the specified model.
            </summary>
            <param name="searchStringModels">The search string models to process.</param>
            <returns>New  model collevction without parsed language filters.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.ApplyCultureInfo``1(System.Linq.IQueryable{``0},System.Tuple{Sitecore.ContentSearch.CulturePredicateType,System.String})">
            <summary>
            Applies the culture information to the query.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query">The constucted query.</param>
            <param name="parsedLanguage">The parsed language.</param>
            <returns>The query with culrure filter.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.GetOrderBy(Sitecore.ContentSearch.Utilities.SearchStringModel)">
            <summary>
            Gets the order by.
            </summary>
            <param name="sort">The sort model definition.</param>
            <returns>Sort order.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.FindPredicateMustNote``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String,System.String)">
            <summary>
            Finds must predicate.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="predicate">The predicate.</param>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.FindPredicateShouldNote``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String,System.String)">
            <summary>
            Finds should predicate.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="predicate">The predicate.</param>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.FindPredicate``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String,System.String,System.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>
            Finds the predicate.
            </summary>
            <typeparam name="T">The type of predicate parameter.</typeparam>
            <param name="predicate">The predicate.</param>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
            <param name="composePredicates">The compose predicates function.</param>
            <returns>The result predicate.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.GetCurrentCultureInfo">
            <summary>
            Gets the culture information for the current context.
            Note: method has some additional logic in case context culture is neutral. 
            </summary>
            <returns>Current cuture.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.QueryBuilder.GetContextCultureInfo">
            <summary>
            Gets the culture information for the current context.
            </summary>
            <returns>Current cuture.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.SearchFieldNames">
            <summary>The search field id's.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Utilities.SearchFieldNames.CreatedDate">
            <summary>The created date.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Utilities.SearchFieldNames.Updated">
            <summary>The updated.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Utilities.SearchFieldNames.UpdatedDate">
            <summary>The updated date.</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.Utilities.SearchFieldNames.Version">
            <summary>The version.</summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.SearchHelper">
            <summary>The search helper.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchHelper.GetDatabaseUrlParameter(System.String)">
            <summary>
            Gets the database URL parameter.
            </summary>
            <value>
            The database URL parameter.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchHelper.GetDebug(System.Collections.Generic.List{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>The get debug.</summary>
            <param name="searchParams">The search params.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchHelper.GetID(System.Collections.Generic.List{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>The get id.</summary>
            <param name="searchParams">The search params.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchHelper.GetOrderDirection(System.Collections.Generic.List{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>The get order direction.</summary>
            <param name="searchParams">The search params.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchHelper.GetPageSize(System.Collections.Generic.List{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>The get page size.</summary>
            <param name="searchParams">The search params.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchHelper.GetSort(System.Collections.Generic.List{Sitecore.ContentSearch.Utilities.SearchStringModel})">
            <summary>The get sort.</summary>
            <param name="searchParams">The search params.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchHelper.ParseSearch(System.Collections.Generic.IEnumerable{Sitecore.ContentSearch.Utilities.SearchStringModel},System.String)">
            <summary>The parse search.</summary>
            <param name="searchParams">The search params.</param>
            <param name="filter">The filter.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.SearchStringModel">
            <summary>
            The search string model.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchStringModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Utilities.SearchStringModel"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchStringModel.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Utilities.SearchStringModel"/> class.
            </summary>
            <param name="type">
            The type.
            </param>
            <param name="value">
            The value.
            </param>
            <param name="operation">
            The operation.
            </param>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchStringModel.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.Utilities.SearchStringModel"/> class.
            </summary>
            <param name="type">
            The type.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.SearchStringModel.Type">
            <summary>
            Gets or sets Type.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.SearchStringModel.Value">
            <summary>
            Gets or sets Value.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.SearchStringModel.Operation">
            <summary>
            Gets or sets Value.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchStringModel.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchStringModel.ParseQueryString(System.String)">
            <summary>
            Parses the query string and composes SearchStringModel objects.
            </summary>
            <param name="queryString">The query string.</param>
            <returns>The list of SearchStringModel objects extracted from specified query string.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchStringModel.ParseDatasourceString(System.String)">
            <summary>
            Parses the datasource string and composes SearchStringModel objects.
            </summary>
            <param name="queryString">The data source string.</param>
            <returns>The list of SearchStringModel objects extracted from specified data source string.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.SearchStringModel.ExtractSearchQuery(System.String)">
            <summary>
            Parses the search query string and composes SearchStringModel objects.
            </summary>
            <param name="searchQuery">The search query string.</param>
            <returns>The list of SearchStringModel objects extracted from specified search query string.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.SearchTypeConstants">
            <summary>
            Item Bucket Constants
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.Utilities.SearchTypeConstants.Calendar">
            <summary>
            Gets the name of the field that determines if an item is bucketable or not
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.Utilities.StringExtensions">
            <summary>The string extensions.</summary>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.StringExtensions.Chop(System.String,System.Int32)">
            <summary>The chop.</summary>
            <param name="sourceString">The source string.</param>
            <param name="removeFromEnd">The remove from end.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.Utilities.StringExtensions.IsGuid(System.String)">
            <summary>The is guid.</summary>
            <param name="s">The s.</param>
            <returns>The System.Boolean.</returns>
            <exception cref="T:System.ArgumentNullException">Empty String</exception>
        </member>
        <member name="T:Sitecore.ContentSearch.VerboseLogging">
            <summary>
            The verbose logging.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.VerboseLogging.Enabled">
            <summary>
            Gets a value indicating whether this <see cref="T:Sitecore.ContentSearch.VerboseLogging"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.VerboseLogging.CrawlingLogDebug(System.Func{System.String})">
            <summary>Outputs the message to the crawling log.</summary>
            <param name="messageDelegate">The message delegate.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.VirtualFieldProcessorMap">
            <summary>
            The virtual field processor map.W
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFieldProcessorMap.searchIndex">
            <summary>The search index</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFieldProcessorMap.isInitialized">
            <summary>The is initialized</summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFieldProcessorMap.internalDictionary">
            <summary>
            The internal dictionary.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFieldProcessorMap.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the current instance.</summary>
            <param name="searchIndex">Index of the search.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFieldProcessorMap.Sitecore#ContentSearch#Linq#Common#IFieldQueryTranslatorMap{Sitecore#ContentSearch#IVirtualFieldProcessor}#GetTranslator(System.String)">
            <summary>Gets the translator.</summary>
            <param name="fieldName">Name of the field.</param>
            <returns>Virtual Field Translator</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFieldProcessorMap.AddFromConfiguration(System.Xml.XmlNode)">
            <summary>
            Adds from configuration.
            </summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor">
            <summary>
            The date range field processor.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.searchIndex">
            <summary>
            The search index.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.isInitialized">
            <summary>
            Value that identifies whether search index is initialized.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.indexFieldFormat">
            <summary>
            Format of index field, that is used for date range facets.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.dateTimeConverter">
            <summary>
            Instance of DateUtil interface.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.FieldName">
            <summary>Gets the name of the field.</summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.IndexFieldName">
            <summary>Gets the name of the index field.</summary>
            <value>The name of the index field.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>Initializes the current instance.</summary>
            <param name="searchIndex">Index of the search.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.TranslateFieldQuery(System.String,System.Object,Sitecore.ContentSearch.Linq.Common.ComparisonType,Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>Translates the field query.</summary>
            <param name="fieldName">Name of the field.</param>
            <param name="fieldValue">The field value.</param>
            <param name="comparison">The comparison.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns>Translated field query.</returns>
            <exception cref="T:System.InvalidOperationException">Sorting by DateRange is not supported.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.TranslateFieldResult(System.Collections.Generic.IDictionary{System.String,System.Object},Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>Translates the field result.</summary>
            <param name="fields">The fields.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns>Modified fields.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.TranslateFacetQuery(Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs)">
            <summary>The translate facet query.</summary>
            <param name="args">The args.</param>
            <returns>The <see cref="T:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.TranslateFacetResult(Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs)">
            <summary>The translate facet result.</summary>
            <param name="args">The args.</param>
            <returns>The <see cref="T:System.Collections.IDictionary" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.ConvertToIndexFormat(System.DateTime)">
            <summary>
             Convert DateTime object in format that used for index storage.
            </summary>
            <param name="date">DateTime object.</param>
            <returns>Value suitable for index storage.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.CompareIndexDate(System.String,System.DateTime)">
            <summary>
            Compare value stored in index field with DateTime object.
            </summary>
            <param name="facetDate">Value stored in index field.</param>
            <param name="date">DateTime object.</param>
            <returns>0 if dates are equal, -1 if facetDate less than date, 1 if facetDate greater than date</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.StartOfWeek(System.DateTime)">
            <summary>
            Returns first day of week, which contains passed date.
            </summary>
            <param name="date">Date object.</param>
            <returns>First day of week as DateTime object.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.Constants">
            <summary>
            Contains definition of constants used by DateRangeFieldProcessor.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.Constants.Today">
            <summary>
            "Today" constant.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.Constants.Yesterday">
            <summary>
            "Yesterday" constant.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.Constants.Thisweek">
            <summary>
            "This week" constant.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.Constants.Lastweek">
            <summary>
            "Last week" constant.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.Constants.Thismonth">
            <summary>
            "This month" constant.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.Constants.Lastmonth">
            <summary>
            "Last month" constant.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.Constants.Thisyear">
            <summary>
            "This year" constant.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.VirtualFields.BaseDateRangeFieldProcessor.Constants.Older">
            <summary>
            "Older" constant.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.VirtualFields.CreatedByFieldProcessor">
            <summary>
            The Created by field processor.
            Escapes whitespaces in queries to field.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.VirtualFields.CreatedByFieldProcessor.FieldName">
            <summary>Gets the name of the field.</summary>
            <value>The name of the field.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.CreatedByFieldProcessor.TranslateFieldQuery(System.String,System.Object,Sitecore.ContentSearch.Linq.Common.ComparisonType,Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>Translates the field query.</summary>
            <param name="fieldName">Name of the field.</param>
            <param name="fieldValue">The field value.</param>
            <param name="comparison">The comparison.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns>Translated field query.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.CreatedByFieldProcessor.TranslateFieldResult(System.Collections.Generic.IDictionary{System.String,System.Object},Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>Translates the field result.</summary>
            <param name="fields">The fields.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns>Modified fields.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.CreatedByFieldProcessor.TranslateFacetQuery(Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs)">
            <summary>The translate facet query.</summary>
            <param name="args">The args.</param>
            <returns>The <see cref="T:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.CreatedByFieldProcessor.TranslateFacetResult(Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs)">
            <summary>The translate facet result.</summary>
            <param name="args">The args.</param>
            <returns>The <see cref="T:System.Collections.IDictionary" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.VirtualFields.DateRangeFieldProcessor">
            <summary>
            The date range field processor.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.VirtualFields.DateRangeFieldProcessor.FieldName">
            <summary>Gets the name of the field.</summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.VirtualFields.DateRangeFieldProcessor.IndexFieldName">
            <summary>Gets the name of the index field.</summary>
            <value>The name of the index field.</value>
        </member>
        <member name="T:Sitecore.ContentSearch.VirtualFields.FullPathFieldProcessor">
            <summary>
            The full path field processor.
            Escapes whitespaces in queries to field.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.VirtualFields.FullPathFieldProcessor.FieldName">
            <summary>Gets the name of the field.</summary>
            <value>The name of the field.</value>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.FullPathFieldProcessor.TranslateFieldQuery(System.String,System.Object,Sitecore.ContentSearch.Linq.Common.ComparisonType,Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>Translates the field query.</summary>
            <param name="fieldName">Name of the field.</param>
            <param name="fieldValue">The field value.</param>
            <param name="comparison">The comparison.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns>Translated field query.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.FullPathFieldProcessor.TranslateFieldResult(System.Collections.Generic.IDictionary{System.String,System.Object},Sitecore.ContentSearch.Linq.Common.FieldNameTranslator)">
            <summary>Translates the field result.</summary>
            <param name="fields">The fields.</param>
            <param name="fieldNameTranslator">The field name translator.</param>
            <returns>Modified fields.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.FullPathFieldProcessor.TranslateFacetQuery(Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs)">
            <summary>The translate facet query.</summary>
            <param name="args">The args.</param>
            <returns>The <see cref="T:Sitecore.ContentSearch.Pipelines.GetFacets.GetFacetsArgs" />.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.VirtualFields.FullPathFieldProcessor.TranslateFacetResult(Sitecore.ContentSearch.Pipelines.ProcessFacets.ProcessFacetsArgs)">
            <summary>The translate facet result.</summary>
            <param name="args">The args.</param>
            <returns>The <see cref="T:System.Collections.IDictionary" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.VirtualFields.LatestVersionFieldProcessor">
            <summary>
            Replaces calls to '_lastestversion' with '_latestversion'
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.VirtualFields.UniqueIdFieldProcessor">
            <summary>
            Replaces calls to '_url' with '_uniqueid'.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.VirtualFields.UpdatedDateRangeFieldProcessor">
            <summary>
            The updated date range field processor.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.VirtualFields.UpdatedDateRangeFieldProcessor.FieldName">
            <summary>Gets the name of the field.</summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Sitecore.ContentSearch.VirtualFields.UpdatedDateRangeFieldProcessor.IndexFieldName">
            <summary>Gets the name of the index field.</summary>
            <value>The name of the index field.</value>
        </member>
    </members>
</doc>
